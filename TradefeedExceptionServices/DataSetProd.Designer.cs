//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TradefeedExceptionServices {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetProd")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetProd : global::System.Data.DataSet {
        
        private TradefeedExceptionDataTable tableTradefeedException;
        
        private CommodityDataTable tableCommodity;
        
        private ContractDataTable tableContract;
        
        private SubCategoryDataTable tableSubCategory;
        
        private Get_Tradefeed_ExceptionDataTable tableGet_Tradefeed_Exception;
        
        private Whatsapp_parameterDataTable tableWhatsapp_parameter;
        
        private uspTradeFeedExceptionApproveAllDataTable tableuspTradeFeedExceptionApproveAll;
        
        private global::System.Data.DataRelation relationR_416;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public DataSetProd() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected DataSetProd(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TradefeedException"] != null)) {
                    base.Tables.Add(new TradefeedExceptionDataTable(ds.Tables["TradefeedException"]));
                }
                if ((ds.Tables["Commodity"] != null)) {
                    base.Tables.Add(new CommodityDataTable(ds.Tables["Commodity"]));
                }
                if ((ds.Tables["Contract"] != null)) {
                    base.Tables.Add(new ContractDataTable(ds.Tables["Contract"]));
                }
                if ((ds.Tables["SubCategory"] != null)) {
                    base.Tables.Add(new SubCategoryDataTable(ds.Tables["SubCategory"]));
                }
                if ((ds.Tables["Get_Tradefeed_Exception"] != null)) {
                    base.Tables.Add(new Get_Tradefeed_ExceptionDataTable(ds.Tables["Get_Tradefeed_Exception"]));
                }
                if ((ds.Tables["Whatsapp_parameter"] != null)) {
                    base.Tables.Add(new Whatsapp_parameterDataTable(ds.Tables["Whatsapp_parameter"]));
                }
                if ((ds.Tables["uspTradeFeedExceptionApproveAll"] != null)) {
                    base.Tables.Add(new uspTradeFeedExceptionApproveAllDataTable(ds.Tables["uspTradeFeedExceptionApproveAll"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TradefeedExceptionDataTable TradefeedException {
            get {
                return this.tableTradefeedException;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CommodityDataTable Commodity {
            get {
                return this.tableCommodity;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContractDataTable Contract {
            get {
                return this.tableContract;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SubCategoryDataTable SubCategory {
            get {
                return this.tableSubCategory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Get_Tradefeed_ExceptionDataTable Get_Tradefeed_Exception {
            get {
                return this.tableGet_Tradefeed_Exception;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Whatsapp_parameterDataTable Whatsapp_parameter {
            get {
                return this.tableWhatsapp_parameter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public uspTradeFeedExceptionApproveAllDataTable uspTradeFeedExceptionApproveAll {
            get {
                return this.tableuspTradeFeedExceptionApproveAll;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetProd cln = ((DataSetProd)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TradefeedException"] != null)) {
                    base.Tables.Add(new TradefeedExceptionDataTable(ds.Tables["TradefeedException"]));
                }
                if ((ds.Tables["Commodity"] != null)) {
                    base.Tables.Add(new CommodityDataTable(ds.Tables["Commodity"]));
                }
                if ((ds.Tables["Contract"] != null)) {
                    base.Tables.Add(new ContractDataTable(ds.Tables["Contract"]));
                }
                if ((ds.Tables["SubCategory"] != null)) {
                    base.Tables.Add(new SubCategoryDataTable(ds.Tables["SubCategory"]));
                }
                if ((ds.Tables["Get_Tradefeed_Exception"] != null)) {
                    base.Tables.Add(new Get_Tradefeed_ExceptionDataTable(ds.Tables["Get_Tradefeed_Exception"]));
                }
                if ((ds.Tables["Whatsapp_parameter"] != null)) {
                    base.Tables.Add(new Whatsapp_parameterDataTable(ds.Tables["Whatsapp_parameter"]));
                }
                if ((ds.Tables["uspTradeFeedExceptionApproveAll"] != null)) {
                    base.Tables.Add(new uspTradeFeedExceptionApproveAllDataTable(ds.Tables["uspTradeFeedExceptionApproveAll"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTradefeedException = ((TradefeedExceptionDataTable)(base.Tables["TradefeedException"]));
            if ((initTable == true)) {
                if ((this.tableTradefeedException != null)) {
                    this.tableTradefeedException.InitVars();
                }
            }
            this.tableCommodity = ((CommodityDataTable)(base.Tables["Commodity"]));
            if ((initTable == true)) {
                if ((this.tableCommodity != null)) {
                    this.tableCommodity.InitVars();
                }
            }
            this.tableContract = ((ContractDataTable)(base.Tables["Contract"]));
            if ((initTable == true)) {
                if ((this.tableContract != null)) {
                    this.tableContract.InitVars();
                }
            }
            this.tableSubCategory = ((SubCategoryDataTable)(base.Tables["SubCategory"]));
            if ((initTable == true)) {
                if ((this.tableSubCategory != null)) {
                    this.tableSubCategory.InitVars();
                }
            }
            this.tableGet_Tradefeed_Exception = ((Get_Tradefeed_ExceptionDataTable)(base.Tables["Get_Tradefeed_Exception"]));
            if ((initTable == true)) {
                if ((this.tableGet_Tradefeed_Exception != null)) {
                    this.tableGet_Tradefeed_Exception.InitVars();
                }
            }
            this.tableWhatsapp_parameter = ((Whatsapp_parameterDataTable)(base.Tables["Whatsapp_parameter"]));
            if ((initTable == true)) {
                if ((this.tableWhatsapp_parameter != null)) {
                    this.tableWhatsapp_parameter.InitVars();
                }
            }
            this.tableuspTradeFeedExceptionApproveAll = ((uspTradeFeedExceptionApproveAllDataTable)(base.Tables["uspTradeFeedExceptionApproveAll"]));
            if ((initTable == true)) {
                if ((this.tableuspTradeFeedExceptionApproveAll != null)) {
                    this.tableuspTradeFeedExceptionApproveAll.InitVars();
                }
            }
            this.relationR_416 = this.Relations["R_416"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetProd";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetProd.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTradefeedException = new TradefeedExceptionDataTable();
            base.Tables.Add(this.tableTradefeedException);
            this.tableCommodity = new CommodityDataTable();
            base.Tables.Add(this.tableCommodity);
            this.tableContract = new ContractDataTable();
            base.Tables.Add(this.tableContract);
            this.tableSubCategory = new SubCategoryDataTable();
            base.Tables.Add(this.tableSubCategory);
            this.tableGet_Tradefeed_Exception = new Get_Tradefeed_ExceptionDataTable();
            base.Tables.Add(this.tableGet_Tradefeed_Exception);
            this.tableWhatsapp_parameter = new Whatsapp_parameterDataTable();
            base.Tables.Add(this.tableWhatsapp_parameter);
            this.tableuspTradeFeedExceptionApproveAll = new uspTradeFeedExceptionApproveAllDataTable();
            base.Tables.Add(this.tableuspTradeFeedExceptionApproveAll);
            this.relationR_416 = new global::System.Data.DataRelation("R_416", new global::System.Data.DataColumn[] {
                        this.tableCommodity.CommodityIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCommodity.ReffCommIDColumn}, false);
            this.Relations.Add(this.relationR_416);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeTradefeedException() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeCommodity() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeContract() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeSubCategory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeGet_Tradefeed_Exception() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeWhatsapp_parameter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeuspTradeFeedExceptionApproveAll() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetProd ds = new DataSetProd();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void TradefeedExceptionRowChangeEventHandler(object sender, TradefeedExceptionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void CommodityRowChangeEventHandler(object sender, CommodityRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ContractRowChangeEventHandler(object sender, ContractRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void SubCategoryRowChangeEventHandler(object sender, SubCategoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void Get_Tradefeed_ExceptionRowChangeEventHandler(object sender, Get_Tradefeed_ExceptionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void Whatsapp_parameterRowChangeEventHandler(object sender, Whatsapp_parameterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void uspTradeFeedExceptionApproveAllRowChangeEventHandler(object sender, uspTradeFeedExceptionApproveAllRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TradefeedExceptionDataTable : global::System.Data.TypedTableBase<TradefeedExceptionRow> {
            
            private global::System.Data.DataColumn columnTradeFeedID;
            
            private global::System.Data.DataColumn columnBusinessDate;
            
            private global::System.Data.DataColumn columnExchangeID;
            
            private global::System.Data.DataColumn columnApprovalStatus;
            
            private global::System.Data.DataColumn columnMessage;
            
            private global::System.Data.DataColumn columnApprovalDesc;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedDate;
            
            private global::System.Data.DataColumn columnForceApproveOperationsType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionDataTable() {
                this.TableName = "TradefeedException";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal TradefeedExceptionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected TradefeedExceptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TradeFeedIDColumn {
                get {
                    return this.columnTradeFeedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BusinessDateColumn {
                get {
                    return this.columnBusinessDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ExchangeIDColumn {
                get {
                    return this.columnExchangeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalStatusColumn {
                get {
                    return this.columnApprovalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MessageColumn {
                get {
                    return this.columnMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalDescColumn {
                get {
                    return this.columnApprovalDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedDateColumn {
                get {
                    return this.columnLastUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ForceApproveOperationsTypeColumn {
                get {
                    return this.columnForceApproveOperationsType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionRow this[int index] {
                get {
                    return ((TradefeedExceptionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event TradefeedExceptionRowChangeEventHandler TradefeedExceptionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event TradefeedExceptionRowChangeEventHandler TradefeedExceptionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event TradefeedExceptionRowChangeEventHandler TradefeedExceptionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event TradefeedExceptionRowChangeEventHandler TradefeedExceptionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddTradefeedExceptionRow(TradefeedExceptionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionRow AddTradefeedExceptionRow(decimal TradeFeedID, System.DateTime BusinessDate, decimal ExchangeID, string ApprovalStatus, string Message, string ApprovalDesc, string CreatedBy, System.DateTime CreatedDate, string LastUpdatedBy, System.DateTime LastUpdatedDate, int ForceApproveOperationsType) {
                TradefeedExceptionRow rowTradefeedExceptionRow = ((TradefeedExceptionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TradeFeedID,
                        BusinessDate,
                        ExchangeID,
                        ApprovalStatus,
                        Message,
                        ApprovalDesc,
                        CreatedBy,
                        CreatedDate,
                        LastUpdatedBy,
                        LastUpdatedDate,
                        ForceApproveOperationsType};
                rowTradefeedExceptionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTradefeedExceptionRow);
                return rowTradefeedExceptionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionRow FindByTradeFeedIDBusinessDateExchangeIDApprovalStatus(decimal TradeFeedID, System.DateTime BusinessDate, decimal ExchangeID, string ApprovalStatus) {
                return ((TradefeedExceptionRow)(this.Rows.Find(new object[] {
                            TradeFeedID,
                            BusinessDate,
                            ExchangeID,
                            ApprovalStatus})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TradefeedExceptionDataTable cln = ((TradefeedExceptionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TradefeedExceptionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnTradeFeedID = base.Columns["TradeFeedID"];
                this.columnBusinessDate = base.Columns["BusinessDate"];
                this.columnExchangeID = base.Columns["ExchangeID"];
                this.columnApprovalStatus = base.Columns["ApprovalStatus"];
                this.columnMessage = base.Columns["Message"];
                this.columnApprovalDesc = base.Columns["ApprovalDesc"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedDate = base.Columns["LastUpdatedDate"];
                this.columnForceApproveOperationsType = base.Columns["ForceApproveOperationsType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnTradeFeedID = new global::System.Data.DataColumn("TradeFeedID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeFeedID);
                this.columnBusinessDate = new global::System.Data.DataColumn("BusinessDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessDate);
                this.columnExchangeID = new global::System.Data.DataColumn("ExchangeID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeID);
                this.columnApprovalStatus = new global::System.Data.DataColumn("ApprovalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalStatus);
                this.columnMessage = new global::System.Data.DataColumn("Message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessage);
                this.columnApprovalDesc = new global::System.Data.DataColumn("ApprovalDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalDesc);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedDate = new global::System.Data.DataColumn("LastUpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedDate);
                this.columnForceApproveOperationsType = new global::System.Data.DataColumn("ForceApproveOperationsType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForceApproveOperationsType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTradeFeedID,
                                this.columnBusinessDate,
                                this.columnExchangeID,
                                this.columnApprovalStatus}, true));
                this.columnTradeFeedID.AllowDBNull = false;
                this.columnBusinessDate.AllowDBNull = false;
                this.columnExchangeID.AllowDBNull = false;
                this.columnApprovalStatus.AllowDBNull = false;
                this.columnApprovalStatus.MaxLength = 1;
                this.columnMessage.MaxLength = 500;
                this.columnApprovalDesc.MaxLength = 100;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 50;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnLastUpdatedBy.AllowDBNull = false;
                this.columnLastUpdatedBy.MaxLength = 50;
                this.columnLastUpdatedDate.AllowDBNull = false;
                this.columnForceApproveOperationsType.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionRow NewTradefeedExceptionRow() {
                return ((TradefeedExceptionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TradefeedExceptionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TradefeedExceptionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TradefeedExceptionRowChanged != null)) {
                    this.TradefeedExceptionRowChanged(this, new TradefeedExceptionRowChangeEvent(((TradefeedExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TradefeedExceptionRowChanging != null)) {
                    this.TradefeedExceptionRowChanging(this, new TradefeedExceptionRowChangeEvent(((TradefeedExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TradefeedExceptionRowDeleted != null)) {
                    this.TradefeedExceptionRowDeleted(this, new TradefeedExceptionRowChangeEvent(((TradefeedExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TradefeedExceptionRowDeleting != null)) {
                    this.TradefeedExceptionRowDeleting(this, new TradefeedExceptionRowChangeEvent(((TradefeedExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveTradefeedExceptionRow(TradefeedExceptionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetProd ds = new DataSetProd();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TradefeedExceptionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CommodityDataTable : global::System.Data.TypedTableBase<CommodityRow> {
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnExchangeId;
            
            private global::System.Data.DataColumn columnEffectiveStartDate;
            
            private global::System.Data.DataColumn columnApprovalStatus;
            
            private global::System.Data.DataColumn columnCommodityCode;
            
            private global::System.Data.DataColumn columnCommodityID;
            
            private global::System.Data.DataColumn columnReffCommID;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnPEG;
            
            private global::System.Data.DataColumn columnVMIRCACalType;
            
            private global::System.Data.DataColumn columnCrossCurr;
            
            private global::System.Data.DataColumn columnSettlementFactor;
            
            private global::System.Data.DataColumn columnDayRef;
            
            private global::System.Data.DataColumn columnDivisor;
            
            private global::System.Data.DataColumn columnCommName;
            
            private global::System.Data.DataColumn columnMarginTender;
            
            private global::System.Data.DataColumn columnMarginSpot;
            
            private global::System.Data.DataColumn columnMarginRemote;
            
            private global::System.Data.DataColumn columnCalSpreadRemoteMargin;
            
            private global::System.Data.DataColumn columnCrossCurrProduct;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnHomeCurrencyID;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedDate;
            
            private global::System.Data.DataColumn columnEffectiveEndDate;
            
            private global::System.Data.DataColumn columnApprovalDesc;
            
            private global::System.Data.DataColumn columnIsKIE;
            
            private global::System.Data.DataColumn columnSettlementType;
            
            private global::System.Data.DataColumn columnContractSize;
            
            private global::System.Data.DataColumn columnIsIncentive;
            
            private global::System.Data.DataColumn columnOriginalCommodityID;
            
            private global::System.Data.DataColumn columnActionFlag;
            
            private global::System.Data.DataColumn columnTenderReqType;
            
            private global::System.Data.DataColumn columnModeK1;
            
            private global::System.Data.DataColumn columnValueK1;
            
            private global::System.Data.DataColumn columnContractRefK1;
            
            private global::System.Data.DataColumn columnModeK2;
            
            private global::System.Data.DataColumn columnValueK2;
            
            private global::System.Data.DataColumn columnContractRefK2;
            
            private global::System.Data.DataColumn columnModeD;
            
            private global::System.Data.DataColumn columnValueD;
            
            private global::System.Data.DataColumn columnContractRefD;
            
            private global::System.Data.DataColumn columnModeIM;
            
            private global::System.Data.DataColumn columnPercentageSpotIM;
            
            private global::System.Data.DataColumn columnPercentageRemoteIM;
            
            private global::System.Data.DataColumn columnModeFee;
            
            private global::System.Data.DataColumn columnisMarketMaker;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityDataTable() {
                this.TableName = "Commodity";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CommodityDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected CommodityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ExchangeIdColumn {
                get {
                    return this.columnExchangeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveStartDateColumn {
                get {
                    return this.columnEffectiveStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalStatusColumn {
                get {
                    return this.columnApprovalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommodityCodeColumn {
                get {
                    return this.columnCommodityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommodityIDColumn {
                get {
                    return this.columnCommodityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ReffCommIDColumn {
                get {
                    return this.columnReffCommID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PEGColumn {
                get {
                    return this.columnPEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VMIRCACalTypeColumn {
                get {
                    return this.columnVMIRCACalType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CrossCurrColumn {
                get {
                    return this.columnCrossCurr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SettlementFactorColumn {
                get {
                    return this.columnSettlementFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DayRefColumn {
                get {
                    return this.columnDayRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DivisorColumn {
                get {
                    return this.columnDivisor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommNameColumn {
                get {
                    return this.columnCommName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginTenderColumn {
                get {
                    return this.columnMarginTender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginSpotColumn {
                get {
                    return this.columnMarginSpot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginRemoteColumn {
                get {
                    return this.columnMarginRemote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CalSpreadRemoteMarginColumn {
                get {
                    return this.columnCalSpreadRemoteMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CrossCurrProductColumn {
                get {
                    return this.columnCrossCurrProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HomeCurrencyIDColumn {
                get {
                    return this.columnHomeCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedDateColumn {
                get {
                    return this.columnLastUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveEndDateColumn {
                get {
                    return this.columnEffectiveEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalDescColumn {
                get {
                    return this.columnApprovalDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsKIEColumn {
                get {
                    return this.columnIsKIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SettlementTypeColumn {
                get {
                    return this.columnSettlementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractSizeColumn {
                get {
                    return this.columnContractSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsIncentiveColumn {
                get {
                    return this.columnIsIncentive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OriginalCommodityIDColumn {
                get {
                    return this.columnOriginalCommodityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActionFlagColumn {
                get {
                    return this.columnActionFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TenderReqTypeColumn {
                get {
                    return this.columnTenderReqType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeK1Column {
                get {
                    return this.columnModeK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueK1Column {
                get {
                    return this.columnValueK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefK1Column {
                get {
                    return this.columnContractRefK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeK2Column {
                get {
                    return this.columnModeK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueK2Column {
                get {
                    return this.columnValueK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefK2Column {
                get {
                    return this.columnContractRefK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeDColumn {
                get {
                    return this.columnModeD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueDColumn {
                get {
                    return this.columnValueD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefDColumn {
                get {
                    return this.columnContractRefD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeIMColumn {
                get {
                    return this.columnModeIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PercentageSpotIMColumn {
                get {
                    return this.columnPercentageSpotIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PercentageRemoteIMColumn {
                get {
                    return this.columnPercentageRemoteIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeFeeColumn {
                get {
                    return this.columnModeFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn isMarketMakerColumn {
                get {
                    return this.columnisMarketMaker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow this[int index] {
                get {
                    return ((CommodityRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CommodityRowChangeEventHandler CommodityRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CommodityRowChangeEventHandler CommodityRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CommodityRowChangeEventHandler CommodityRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CommodityRowChangeEventHandler CommodityRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddCommodityRow(CommodityRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow AddCommodityRow(
                        decimal ProductID, 
                        decimal ExchangeId, 
                        System.DateTime EffectiveStartDate, 
                        string ApprovalStatus, 
                        string CommodityCode, 
                        CommodityRow parentCommodityRowByR_416, 
                        string Unit, 
                        decimal PEG, 
                        string VMIRCACalType, 
                        string CrossCurr, 
                        string SettlementFactor, 
                        int DayRef, 
                        decimal Divisor, 
                        string CommName, 
                        decimal MarginTender, 
                        decimal MarginSpot, 
                        decimal MarginRemote, 
                        decimal CalSpreadRemoteMargin, 
                        string CrossCurrProduct, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        decimal HomeCurrencyID, 
                        string LastUpdatedBy, 
                        System.DateTime LastUpdatedDate, 
                        System.DateTime EffectiveEndDate, 
                        string ApprovalDesc, 
                        string IsKIE, 
                        string SettlementType, 
                        decimal ContractSize, 
                        string IsIncentive, 
                        decimal OriginalCommodityID, 
                        string ActionFlag, 
                        string TenderReqType, 
                        string ModeK1, 
                        decimal ValueK1, 
                        decimal ContractRefK1, 
                        string ModeK2, 
                        decimal ValueK2, 
                        decimal ContractRefK2, 
                        string ModeD, 
                        decimal ValueD, 
                        decimal ContractRefD, 
                        string ModeIM, 
                        decimal PercentageSpotIM, 
                        decimal PercentageRemoteIM, 
                        string ModeFee, 
                        string isMarketMaker) {
                CommodityRow rowCommodityRow = ((CommodityRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProductID,
                        ExchangeId,
                        EffectiveStartDate,
                        ApprovalStatus,
                        CommodityCode,
                        null,
                        null,
                        Unit,
                        PEG,
                        VMIRCACalType,
                        CrossCurr,
                        SettlementFactor,
                        DayRef,
                        Divisor,
                        CommName,
                        MarginTender,
                        MarginSpot,
                        MarginRemote,
                        CalSpreadRemoteMargin,
                        CrossCurrProduct,
                        CreatedBy,
                        CreatedDate,
                        HomeCurrencyID,
                        LastUpdatedBy,
                        LastUpdatedDate,
                        EffectiveEndDate,
                        ApprovalDesc,
                        IsKIE,
                        SettlementType,
                        ContractSize,
                        IsIncentive,
                        OriginalCommodityID,
                        ActionFlag,
                        TenderReqType,
                        ModeK1,
                        ValueK1,
                        ContractRefK1,
                        ModeK2,
                        ValueK2,
                        ContractRefK2,
                        ModeD,
                        ValueD,
                        ContractRefD,
                        ModeIM,
                        PercentageSpotIM,
                        PercentageRemoteIM,
                        ModeFee,
                        isMarketMaker};
                if ((parentCommodityRowByR_416 != null)) {
                    columnValuesArray[6] = parentCommodityRowByR_416[5];
                }
                rowCommodityRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCommodityRow);
                return rowCommodityRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow FindByProductIDExchangeIdEffectiveStartDateApprovalStatus(decimal ProductID, decimal ExchangeId, System.DateTime EffectiveStartDate, string ApprovalStatus) {
                return ((CommodityRow)(this.Rows.Find(new object[] {
                            ProductID,
                            ExchangeId,
                            EffectiveStartDate,
                            ApprovalStatus})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CommodityDataTable cln = ((CommodityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CommodityDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnProductID = base.Columns["ProductID"];
                this.columnExchangeId = base.Columns["ExchangeId"];
                this.columnEffectiveStartDate = base.Columns["EffectiveStartDate"];
                this.columnApprovalStatus = base.Columns["ApprovalStatus"];
                this.columnCommodityCode = base.Columns["CommodityCode"];
                this.columnCommodityID = base.Columns["CommodityID"];
                this.columnReffCommID = base.Columns["ReffCommID"];
                this.columnUnit = base.Columns["Unit"];
                this.columnPEG = base.Columns["PEG"];
                this.columnVMIRCACalType = base.Columns["VMIRCACalType"];
                this.columnCrossCurr = base.Columns["CrossCurr"];
                this.columnSettlementFactor = base.Columns["SettlementFactor"];
                this.columnDayRef = base.Columns["DayRef"];
                this.columnDivisor = base.Columns["Divisor"];
                this.columnCommName = base.Columns["CommName"];
                this.columnMarginTender = base.Columns["MarginTender"];
                this.columnMarginSpot = base.Columns["MarginSpot"];
                this.columnMarginRemote = base.Columns["MarginRemote"];
                this.columnCalSpreadRemoteMargin = base.Columns["CalSpreadRemoteMargin"];
                this.columnCrossCurrProduct = base.Columns["CrossCurrProduct"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnHomeCurrencyID = base.Columns["HomeCurrencyID"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedDate = base.Columns["LastUpdatedDate"];
                this.columnEffectiveEndDate = base.Columns["EffectiveEndDate"];
                this.columnApprovalDesc = base.Columns["ApprovalDesc"];
                this.columnIsKIE = base.Columns["IsKIE"];
                this.columnSettlementType = base.Columns["SettlementType"];
                this.columnContractSize = base.Columns["ContractSize"];
                this.columnIsIncentive = base.Columns["IsIncentive"];
                this.columnOriginalCommodityID = base.Columns["OriginalCommodityID"];
                this.columnActionFlag = base.Columns["ActionFlag"];
                this.columnTenderReqType = base.Columns["TenderReqType"];
                this.columnModeK1 = base.Columns["ModeK1"];
                this.columnValueK1 = base.Columns["ValueK1"];
                this.columnContractRefK1 = base.Columns["ContractRefK1"];
                this.columnModeK2 = base.Columns["ModeK2"];
                this.columnValueK2 = base.Columns["ValueK2"];
                this.columnContractRefK2 = base.Columns["ContractRefK2"];
                this.columnModeD = base.Columns["ModeD"];
                this.columnValueD = base.Columns["ValueD"];
                this.columnContractRefD = base.Columns["ContractRefD"];
                this.columnModeIM = base.Columns["ModeIM"];
                this.columnPercentageSpotIM = base.Columns["PercentageSpotIM"];
                this.columnPercentageRemoteIM = base.Columns["PercentageRemoteIM"];
                this.columnModeFee = base.Columns["ModeFee"];
                this.columnisMarketMaker = base.Columns["isMarketMaker"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnExchangeId = new global::System.Data.DataColumn("ExchangeId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeId);
                this.columnEffectiveStartDate = new global::System.Data.DataColumn("EffectiveStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveStartDate);
                this.columnApprovalStatus = new global::System.Data.DataColumn("ApprovalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalStatus);
                this.columnCommodityCode = new global::System.Data.DataColumn("CommodityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityCode);
                this.columnCommodityID = new global::System.Data.DataColumn("CommodityID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityID);
                this.columnReffCommID = new global::System.Data.DataColumn("ReffCommID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReffCommID);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnPEG = new global::System.Data.DataColumn("PEG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPEG);
                this.columnVMIRCACalType = new global::System.Data.DataColumn("VMIRCACalType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVMIRCACalType);
                this.columnCrossCurr = new global::System.Data.DataColumn("CrossCurr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrossCurr);
                this.columnSettlementFactor = new global::System.Data.DataColumn("SettlementFactor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettlementFactor);
                this.columnDayRef = new global::System.Data.DataColumn("DayRef", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayRef);
                this.columnDivisor = new global::System.Data.DataColumn("Divisor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivisor);
                this.columnCommName = new global::System.Data.DataColumn("CommName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommName);
                this.columnMarginTender = new global::System.Data.DataColumn("MarginTender", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginTender);
                this.columnMarginSpot = new global::System.Data.DataColumn("MarginSpot", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginSpot);
                this.columnMarginRemote = new global::System.Data.DataColumn("MarginRemote", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginRemote);
                this.columnCalSpreadRemoteMargin = new global::System.Data.DataColumn("CalSpreadRemoteMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalSpreadRemoteMargin);
                this.columnCrossCurrProduct = new global::System.Data.DataColumn("CrossCurrProduct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrossCurrProduct);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnHomeCurrencyID = new global::System.Data.DataColumn("HomeCurrencyID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomeCurrencyID);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedDate = new global::System.Data.DataColumn("LastUpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedDate);
                this.columnEffectiveEndDate = new global::System.Data.DataColumn("EffectiveEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveEndDate);
                this.columnApprovalDesc = new global::System.Data.DataColumn("ApprovalDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalDesc);
                this.columnIsKIE = new global::System.Data.DataColumn("IsKIE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsKIE);
                this.columnSettlementType = new global::System.Data.DataColumn("SettlementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettlementType);
                this.columnContractSize = new global::System.Data.DataColumn("ContractSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractSize);
                this.columnIsIncentive = new global::System.Data.DataColumn("IsIncentive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsIncentive);
                this.columnOriginalCommodityID = new global::System.Data.DataColumn("OriginalCommodityID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalCommodityID);
                this.columnActionFlag = new global::System.Data.DataColumn("ActionFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActionFlag);
                this.columnTenderReqType = new global::System.Data.DataColumn("TenderReqType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderReqType);
                this.columnModeK1 = new global::System.Data.DataColumn("ModeK1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeK1);
                this.columnValueK1 = new global::System.Data.DataColumn("ValueK1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueK1);
                this.columnContractRefK1 = new global::System.Data.DataColumn("ContractRefK1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefK1);
                this.columnModeK2 = new global::System.Data.DataColumn("ModeK2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeK2);
                this.columnValueK2 = new global::System.Data.DataColumn("ValueK2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueK2);
                this.columnContractRefK2 = new global::System.Data.DataColumn("ContractRefK2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefK2);
                this.columnModeD = new global::System.Data.DataColumn("ModeD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeD);
                this.columnValueD = new global::System.Data.DataColumn("ValueD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueD);
                this.columnContractRefD = new global::System.Data.DataColumn("ContractRefD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefD);
                this.columnModeIM = new global::System.Data.DataColumn("ModeIM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeIM);
                this.columnPercentageSpotIM = new global::System.Data.DataColumn("PercentageSpotIM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageSpotIM);
                this.columnPercentageRemoteIM = new global::System.Data.DataColumn("PercentageRemoteIM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageRemoteIM);
                this.columnModeFee = new global::System.Data.DataColumn("ModeFee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeFee);
                this.columnisMarketMaker = new global::System.Data.DataColumn("isMarketMaker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisMarketMaker);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProductID,
                                this.columnExchangeId,
                                this.columnEffectiveStartDate,
                                this.columnApprovalStatus}, true));
                this.columnProductID.AllowDBNull = false;
                this.columnExchangeId.AllowDBNull = false;
                this.columnEffectiveStartDate.AllowDBNull = false;
                this.columnApprovalStatus.AllowDBNull = false;
                this.columnApprovalStatus.MaxLength = 1;
                this.columnCommodityCode.AllowDBNull = false;
                this.columnCommodityCode.MaxLength = 20;
                this.columnCommodityID.AutoIncrement = true;
                this.columnCommodityID.AutoIncrementSeed = -1;
                this.columnCommodityID.AutoIncrementStep = -1;
                this.columnCommodityID.AllowDBNull = false;
                this.columnCommodityID.ReadOnly = true;
                this.columnUnit.MaxLength = 20;
                this.columnVMIRCACalType.MaxLength = 1;
                this.columnCrossCurr.MaxLength = 3;
                this.columnSettlementFactor.MaxLength = 20;
                this.columnCommName.MaxLength = 50;
                this.columnCrossCurrProduct.MaxLength = 3;
                this.columnCreatedBy.MaxLength = 50;
                this.columnLastUpdatedBy.MaxLength = 50;
                this.columnApprovalDesc.MaxLength = 100;
                this.columnIsKIE.MaxLength = 1;
                this.columnSettlementType.MaxLength = 20;
                this.columnIsIncentive.MaxLength = 1;
                this.columnActionFlag.MaxLength = 1;
                this.columnTenderReqType.MaxLength = 1;
                this.columnModeK1.MaxLength = 3;
                this.columnModeK2.MaxLength = 3;
                this.columnModeD.MaxLength = 3;
                this.columnModeIM.MaxLength = 3;
                this.columnModeFee.MaxLength = 3;
                this.columnisMarketMaker.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow NewCommodityRow() {
                return ((CommodityRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CommodityRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CommodityRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CommodityRowChanged != null)) {
                    this.CommodityRowChanged(this, new CommodityRowChangeEvent(((CommodityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CommodityRowChanging != null)) {
                    this.CommodityRowChanging(this, new CommodityRowChangeEvent(((CommodityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CommodityRowDeleted != null)) {
                    this.CommodityRowDeleted(this, new CommodityRowChangeEvent(((CommodityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CommodityRowDeleting != null)) {
                    this.CommodityRowDeleting(this, new CommodityRowChangeEvent(((CommodityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveCommodityRow(CommodityRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetProd ds = new DataSetProd();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CommodityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ContractDataTable : global::System.Data.TypedTableBase<ContractRow> {
            
            private global::System.Data.DataColumn columnCommodityID;
            
            private global::System.Data.DataColumn columnContractMonth;
            
            private global::System.Data.DataColumn columnContractYear;
            
            private global::System.Data.DataColumn columnApprovalStatus;
            
            private global::System.Data.DataColumn columnEffectiveStartDate;
            
            private global::System.Data.DataColumn columnContractID;
            
            private global::System.Data.DataColumn columnContractSize;
            
            private global::System.Data.DataColumn columnSettlementType;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndSpot;
            
            private global::System.Data.DataColumn columnStartSpot;
            
            private global::System.Data.DataColumn columnPEG;
            
            private global::System.Data.DataColumn columnVMIRCACalType;
            
            private global::System.Data.DataColumn columnSettlementFactor;
            
            private global::System.Data.DataColumn columnDayRef;
            
            private global::System.Data.DataColumn columnDivisor;
            
            private global::System.Data.DataColumn columnMarginTender;
            
            private global::System.Data.DataColumn columnMarginSpot;
            
            private global::System.Data.DataColumn columnMarginRemote;
            
            private global::System.Data.DataColumn columnCalSpreadRemoteMargin;
            
            private global::System.Data.DataColumn columnIsKIE;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedDate;
            
            private global::System.Data.DataColumn columnEffectiveEndDate;
            
            private global::System.Data.DataColumn columnApprovalDesc;
            
            private global::System.Data.DataColumn columnHomeCurrencyID;
            
            private global::System.Data.DataColumn columnCrossCurr;
            
            private global::System.Data.DataColumn columnCrossCurrProduct;
            
            private global::System.Data.DataColumn columnOriginalContractID;
            
            private global::System.Data.DataColumn columnActionFlag;
            
            private global::System.Data.DataColumn columnTenderReqType;
            
            private global::System.Data.DataColumn columnSubCategoryID;
            
            private global::System.Data.DataColumn columnModeK1;
            
            private global::System.Data.DataColumn columnValueK1;
            
            private global::System.Data.DataColumn columnContractRefK1;
            
            private global::System.Data.DataColumn columnModeK2;
            
            private global::System.Data.DataColumn columnValueK2;
            
            private global::System.Data.DataColumn columnContractRefK2;
            
            private global::System.Data.DataColumn columnModeD;
            
            private global::System.Data.DataColumn columnValueD;
            
            private global::System.Data.DataColumn columnContractRefD;
            
            private global::System.Data.DataColumn columnModeIM;
            
            private global::System.Data.DataColumn columnPercentageSpotIM;
            
            private global::System.Data.DataColumn columnPercentageRemoteIM;
            
            private global::System.Data.DataColumn columnModeFee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractDataTable() {
                this.TableName = "Contract";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ContractDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ContractDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommodityIDColumn {
                get {
                    return this.columnCommodityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractMonthColumn {
                get {
                    return this.columnContractMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractYearColumn {
                get {
                    return this.columnContractYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalStatusColumn {
                get {
                    return this.columnApprovalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveStartDateColumn {
                get {
                    return this.columnEffectiveStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractIDColumn {
                get {
                    return this.columnContractID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractSizeColumn {
                get {
                    return this.columnContractSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SettlementTypeColumn {
                get {
                    return this.columnSettlementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EndSpotColumn {
                get {
                    return this.columnEndSpot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StartSpotColumn {
                get {
                    return this.columnStartSpot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PEGColumn {
                get {
                    return this.columnPEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VMIRCACalTypeColumn {
                get {
                    return this.columnVMIRCACalType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SettlementFactorColumn {
                get {
                    return this.columnSettlementFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DayRefColumn {
                get {
                    return this.columnDayRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DivisorColumn {
                get {
                    return this.columnDivisor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginTenderColumn {
                get {
                    return this.columnMarginTender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginSpotColumn {
                get {
                    return this.columnMarginSpot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginRemoteColumn {
                get {
                    return this.columnMarginRemote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CalSpreadRemoteMarginColumn {
                get {
                    return this.columnCalSpreadRemoteMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsKIEColumn {
                get {
                    return this.columnIsKIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedDateColumn {
                get {
                    return this.columnLastUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveEndDateColumn {
                get {
                    return this.columnEffectiveEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalDescColumn {
                get {
                    return this.columnApprovalDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HomeCurrencyIDColumn {
                get {
                    return this.columnHomeCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CrossCurrColumn {
                get {
                    return this.columnCrossCurr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CrossCurrProductColumn {
                get {
                    return this.columnCrossCurrProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OriginalContractIDColumn {
                get {
                    return this.columnOriginalContractID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActionFlagColumn {
                get {
                    return this.columnActionFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TenderReqTypeColumn {
                get {
                    return this.columnTenderReqType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SubCategoryIDColumn {
                get {
                    return this.columnSubCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeK1Column {
                get {
                    return this.columnModeK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueK1Column {
                get {
                    return this.columnValueK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefK1Column {
                get {
                    return this.columnContractRefK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeK2Column {
                get {
                    return this.columnModeK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueK2Column {
                get {
                    return this.columnValueK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefK2Column {
                get {
                    return this.columnContractRefK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeDColumn {
                get {
                    return this.columnModeD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueDColumn {
                get {
                    return this.columnValueD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefDColumn {
                get {
                    return this.columnContractRefD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeIMColumn {
                get {
                    return this.columnModeIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PercentageSpotIMColumn {
                get {
                    return this.columnPercentageSpotIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PercentageRemoteIMColumn {
                get {
                    return this.columnPercentageRemoteIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeFeeColumn {
                get {
                    return this.columnModeFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow this[int index] {
                get {
                    return ((ContractRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ContractRowChangeEventHandler ContractRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ContractRowChangeEventHandler ContractRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ContractRowChangeEventHandler ContractRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ContractRowChangeEventHandler ContractRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddContractRow(ContractRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow AddContractRow(
                        decimal CommodityID, 
                        int ContractMonth, 
                        int ContractYear, 
                        string ApprovalStatus, 
                        System.DateTime EffectiveStartDate, 
                        decimal ContractSize, 
                        string SettlementType, 
                        string Description, 
                        string Unit, 
                        System.DateTime StartDate, 
                        System.DateTime EndSpot, 
                        System.DateTime StartSpot, 
                        decimal PEG, 
                        string VMIRCACalType, 
                        string SettlementFactor, 
                        int DayRef, 
                        decimal Divisor, 
                        decimal MarginTender, 
                        decimal MarginSpot, 
                        decimal MarginRemote, 
                        decimal CalSpreadRemoteMargin, 
                        string IsKIE, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string LastUpdatedBy, 
                        System.DateTime LastUpdatedDate, 
                        System.DateTime EffectiveEndDate, 
                        string ApprovalDesc, 
                        decimal HomeCurrencyID, 
                        string CrossCurr, 
                        string CrossCurrProduct, 
                        decimal OriginalContractID, 
                        string ActionFlag, 
                        string TenderReqType, 
                        decimal SubCategoryID, 
                        string ModeK1, 
                        decimal ValueK1, 
                        decimal ContractRefK1, 
                        string ModeK2, 
                        decimal ValueK2, 
                        decimal ContractRefK2, 
                        string ModeD, 
                        decimal ValueD, 
                        decimal ContractRefD, 
                        string ModeIM, 
                        decimal PercentageSpotIM, 
                        decimal PercentageRemoteIM, 
                        string ModeFee) {
                ContractRow rowContractRow = ((ContractRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CommodityID,
                        ContractMonth,
                        ContractYear,
                        ApprovalStatus,
                        EffectiveStartDate,
                        null,
                        ContractSize,
                        SettlementType,
                        Description,
                        Unit,
                        StartDate,
                        EndSpot,
                        StartSpot,
                        PEG,
                        VMIRCACalType,
                        SettlementFactor,
                        DayRef,
                        Divisor,
                        MarginTender,
                        MarginSpot,
                        MarginRemote,
                        CalSpreadRemoteMargin,
                        IsKIE,
                        CreatedBy,
                        CreatedDate,
                        LastUpdatedBy,
                        LastUpdatedDate,
                        EffectiveEndDate,
                        ApprovalDesc,
                        HomeCurrencyID,
                        CrossCurr,
                        CrossCurrProduct,
                        OriginalContractID,
                        ActionFlag,
                        TenderReqType,
                        SubCategoryID,
                        ModeK1,
                        ValueK1,
                        ContractRefK1,
                        ModeK2,
                        ValueK2,
                        ContractRefK2,
                        ModeD,
                        ValueD,
                        ContractRefD,
                        ModeIM,
                        PercentageSpotIM,
                        PercentageRemoteIM,
                        ModeFee};
                rowContractRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowContractRow);
                return rowContractRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow FindByCommodityIDContractMonthContractYearApprovalStatusEffectiveStartDate(decimal CommodityID, int ContractMonth, int ContractYear, string ApprovalStatus, System.DateTime EffectiveStartDate) {
                return ((ContractRow)(this.Rows.Find(new object[] {
                            CommodityID,
                            ContractMonth,
                            ContractYear,
                            ApprovalStatus,
                            EffectiveStartDate})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ContractDataTable cln = ((ContractDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ContractDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCommodityID = base.Columns["CommodityID"];
                this.columnContractMonth = base.Columns["ContractMonth"];
                this.columnContractYear = base.Columns["ContractYear"];
                this.columnApprovalStatus = base.Columns["ApprovalStatus"];
                this.columnEffectiveStartDate = base.Columns["EffectiveStartDate"];
                this.columnContractID = base.Columns["ContractID"];
                this.columnContractSize = base.Columns["ContractSize"];
                this.columnSettlementType = base.Columns["SettlementType"];
                this.columnDescription = base.Columns["Description"];
                this.columnUnit = base.Columns["Unit"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndSpot = base.Columns["EndSpot"];
                this.columnStartSpot = base.Columns["StartSpot"];
                this.columnPEG = base.Columns["PEG"];
                this.columnVMIRCACalType = base.Columns["VMIRCACalType"];
                this.columnSettlementFactor = base.Columns["SettlementFactor"];
                this.columnDayRef = base.Columns["DayRef"];
                this.columnDivisor = base.Columns["Divisor"];
                this.columnMarginTender = base.Columns["MarginTender"];
                this.columnMarginSpot = base.Columns["MarginSpot"];
                this.columnMarginRemote = base.Columns["MarginRemote"];
                this.columnCalSpreadRemoteMargin = base.Columns["CalSpreadRemoteMargin"];
                this.columnIsKIE = base.Columns["IsKIE"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedDate = base.Columns["LastUpdatedDate"];
                this.columnEffectiveEndDate = base.Columns["EffectiveEndDate"];
                this.columnApprovalDesc = base.Columns["ApprovalDesc"];
                this.columnHomeCurrencyID = base.Columns["HomeCurrencyID"];
                this.columnCrossCurr = base.Columns["CrossCurr"];
                this.columnCrossCurrProduct = base.Columns["CrossCurrProduct"];
                this.columnOriginalContractID = base.Columns["OriginalContractID"];
                this.columnActionFlag = base.Columns["ActionFlag"];
                this.columnTenderReqType = base.Columns["TenderReqType"];
                this.columnSubCategoryID = base.Columns["SubCategoryID"];
                this.columnModeK1 = base.Columns["ModeK1"];
                this.columnValueK1 = base.Columns["ValueK1"];
                this.columnContractRefK1 = base.Columns["ContractRefK1"];
                this.columnModeK2 = base.Columns["ModeK2"];
                this.columnValueK2 = base.Columns["ValueK2"];
                this.columnContractRefK2 = base.Columns["ContractRefK2"];
                this.columnModeD = base.Columns["ModeD"];
                this.columnValueD = base.Columns["ValueD"];
                this.columnContractRefD = base.Columns["ContractRefD"];
                this.columnModeIM = base.Columns["ModeIM"];
                this.columnPercentageSpotIM = base.Columns["PercentageSpotIM"];
                this.columnPercentageRemoteIM = base.Columns["PercentageRemoteIM"];
                this.columnModeFee = base.Columns["ModeFee"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCommodityID = new global::System.Data.DataColumn("CommodityID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityID);
                this.columnContractMonth = new global::System.Data.DataColumn("ContractMonth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractMonth);
                this.columnContractYear = new global::System.Data.DataColumn("ContractYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractYear);
                this.columnApprovalStatus = new global::System.Data.DataColumn("ApprovalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalStatus);
                this.columnEffectiveStartDate = new global::System.Data.DataColumn("EffectiveStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveStartDate);
                this.columnContractID = new global::System.Data.DataColumn("ContractID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractID);
                this.columnContractSize = new global::System.Data.DataColumn("ContractSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractSize);
                this.columnSettlementType = new global::System.Data.DataColumn("SettlementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettlementType);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndSpot = new global::System.Data.DataColumn("EndSpot", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndSpot);
                this.columnStartSpot = new global::System.Data.DataColumn("StartSpot", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartSpot);
                this.columnPEG = new global::System.Data.DataColumn("PEG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPEG);
                this.columnVMIRCACalType = new global::System.Data.DataColumn("VMIRCACalType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVMIRCACalType);
                this.columnSettlementFactor = new global::System.Data.DataColumn("SettlementFactor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettlementFactor);
                this.columnDayRef = new global::System.Data.DataColumn("DayRef", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayRef);
                this.columnDivisor = new global::System.Data.DataColumn("Divisor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivisor);
                this.columnMarginTender = new global::System.Data.DataColumn("MarginTender", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginTender);
                this.columnMarginSpot = new global::System.Data.DataColumn("MarginSpot", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginSpot);
                this.columnMarginRemote = new global::System.Data.DataColumn("MarginRemote", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginRemote);
                this.columnCalSpreadRemoteMargin = new global::System.Data.DataColumn("CalSpreadRemoteMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalSpreadRemoteMargin);
                this.columnIsKIE = new global::System.Data.DataColumn("IsKIE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsKIE);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedDate = new global::System.Data.DataColumn("LastUpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedDate);
                this.columnEffectiveEndDate = new global::System.Data.DataColumn("EffectiveEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveEndDate);
                this.columnApprovalDesc = new global::System.Data.DataColumn("ApprovalDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalDesc);
                this.columnHomeCurrencyID = new global::System.Data.DataColumn("HomeCurrencyID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomeCurrencyID);
                this.columnCrossCurr = new global::System.Data.DataColumn("CrossCurr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrossCurr);
                this.columnCrossCurrProduct = new global::System.Data.DataColumn("CrossCurrProduct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrossCurrProduct);
                this.columnOriginalContractID = new global::System.Data.DataColumn("OriginalContractID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalContractID);
                this.columnActionFlag = new global::System.Data.DataColumn("ActionFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActionFlag);
                this.columnTenderReqType = new global::System.Data.DataColumn("TenderReqType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderReqType);
                this.columnSubCategoryID = new global::System.Data.DataColumn("SubCategoryID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCategoryID);
                this.columnModeK1 = new global::System.Data.DataColumn("ModeK1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeK1);
                this.columnValueK1 = new global::System.Data.DataColumn("ValueK1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueK1);
                this.columnContractRefK1 = new global::System.Data.DataColumn("ContractRefK1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefK1);
                this.columnModeK2 = new global::System.Data.DataColumn("ModeK2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeK2);
                this.columnValueK2 = new global::System.Data.DataColumn("ValueK2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueK2);
                this.columnContractRefK2 = new global::System.Data.DataColumn("ContractRefK2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefK2);
                this.columnModeD = new global::System.Data.DataColumn("ModeD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeD);
                this.columnValueD = new global::System.Data.DataColumn("ValueD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueD);
                this.columnContractRefD = new global::System.Data.DataColumn("ContractRefD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefD);
                this.columnModeIM = new global::System.Data.DataColumn("ModeIM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeIM);
                this.columnPercentageSpotIM = new global::System.Data.DataColumn("PercentageSpotIM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageSpotIM);
                this.columnPercentageRemoteIM = new global::System.Data.DataColumn("PercentageRemoteIM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageRemoteIM);
                this.columnModeFee = new global::System.Data.DataColumn("ModeFee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeFee);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCommodityID,
                                this.columnContractMonth,
                                this.columnContractYear,
                                this.columnApprovalStatus,
                                this.columnEffectiveStartDate}, true));
                this.columnCommodityID.AllowDBNull = false;
                this.columnContractMonth.AllowDBNull = false;
                this.columnContractYear.AllowDBNull = false;
                this.columnApprovalStatus.AllowDBNull = false;
                this.columnApprovalStatus.MaxLength = 1;
                this.columnEffectiveStartDate.AllowDBNull = false;
                this.columnContractID.AutoIncrement = true;
                this.columnContractID.AutoIncrementSeed = -1;
                this.columnContractID.AutoIncrementStep = -1;
                this.columnContractID.AllowDBNull = false;
                this.columnContractID.ReadOnly = true;
                this.columnContractSize.AllowDBNull = false;
                this.columnSettlementType.AllowDBNull = false;
                this.columnSettlementType.MaxLength = 1;
                this.columnDescription.MaxLength = 500;
                this.columnUnit.AllowDBNull = false;
                this.columnUnit.MaxLength = 20;
                this.columnStartDate.AllowDBNull = false;
                this.columnEndSpot.AllowDBNull = false;
                this.columnStartSpot.AllowDBNull = false;
                this.columnVMIRCACalType.MaxLength = 1;
                this.columnSettlementFactor.MaxLength = 20;
                this.columnMarginSpot.AllowDBNull = false;
                this.columnMarginRemote.AllowDBNull = false;
                this.columnIsKIE.AllowDBNull = false;
                this.columnIsKIE.MaxLength = 1;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 50;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnLastUpdatedBy.AllowDBNull = false;
                this.columnLastUpdatedBy.MaxLength = 50;
                this.columnLastUpdatedDate.AllowDBNull = false;
                this.columnApprovalDesc.MaxLength = 100;
                this.columnCrossCurr.AllowDBNull = false;
                this.columnCrossCurr.MaxLength = 3;
                this.columnCrossCurrProduct.MaxLength = 3;
                this.columnActionFlag.MaxLength = 1;
                this.columnTenderReqType.MaxLength = 1;
                this.columnModeK1.MaxLength = 3;
                this.columnModeK2.MaxLength = 3;
                this.columnModeD.MaxLength = 3;
                this.columnModeIM.MaxLength = 3;
                this.columnModeFee.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow NewContractRow() {
                return ((ContractRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ContractRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ContractRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContractRowChanged != null)) {
                    this.ContractRowChanged(this, new ContractRowChangeEvent(((ContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContractRowChanging != null)) {
                    this.ContractRowChanging(this, new ContractRowChangeEvent(((ContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContractRowDeleted != null)) {
                    this.ContractRowDeleted(this, new ContractRowChangeEvent(((ContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContractRowDeleting != null)) {
                    this.ContractRowDeleting(this, new ContractRowChangeEvent(((ContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveContractRow(ContractRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetProd ds = new DataSetProd();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ContractDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SubCategoryDataTable : global::System.Data.TypedTableBase<SubCategoryRow> {
            
            private global::System.Data.DataColumn columnSubCategoryCode;
            
            private global::System.Data.DataColumn columnSubCategoryID;
            
            private global::System.Data.DataColumn columnCategoryID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedDate;
            
            private global::System.Data.DataColumn columnActiveFlag;
            
            private global::System.Data.DataColumn columnAllowPriceIncrePct;
            
            private global::System.Data.DataColumn columnAllowPriceDecrePct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryDataTable() {
                this.TableName = "SubCategory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SubCategoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected SubCategoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SubCategoryCodeColumn {
                get {
                    return this.columnSubCategoryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SubCategoryIDColumn {
                get {
                    return this.columnSubCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CategoryIDColumn {
                get {
                    return this.columnCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedDateColumn {
                get {
                    return this.columnLastUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActiveFlagColumn {
                get {
                    return this.columnActiveFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AllowPriceIncrePctColumn {
                get {
                    return this.columnAllowPriceIncrePct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AllowPriceDecrePctColumn {
                get {
                    return this.columnAllowPriceDecrePct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryRow this[int index] {
                get {
                    return ((SubCategoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SubCategoryRowChangeEventHandler SubCategoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SubCategoryRowChangeEventHandler SubCategoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SubCategoryRowChangeEventHandler SubCategoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SubCategoryRowChangeEventHandler SubCategoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddSubCategoryRow(SubCategoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryRow AddSubCategoryRow(string SubCategoryCode, decimal CategoryID, string Description, string CreatedBy, System.DateTime CreatedDate, string LastUpdatedBy, System.DateTime LastUpdatedDate, string ActiveFlag, decimal AllowPriceIncrePct, decimal AllowPriceDecrePct) {
                SubCategoryRow rowSubCategoryRow = ((SubCategoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SubCategoryCode,
                        null,
                        CategoryID,
                        Description,
                        CreatedBy,
                        CreatedDate,
                        LastUpdatedBy,
                        LastUpdatedDate,
                        ActiveFlag,
                        AllowPriceIncrePct,
                        AllowPriceDecrePct};
                rowSubCategoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSubCategoryRow);
                return rowSubCategoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryRow FindBySubCategoryCode(string SubCategoryCode) {
                return ((SubCategoryRow)(this.Rows.Find(new object[] {
                            SubCategoryCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SubCategoryDataTable cln = ((SubCategoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SubCategoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnSubCategoryCode = base.Columns["SubCategoryCode"];
                this.columnSubCategoryID = base.Columns["SubCategoryID"];
                this.columnCategoryID = base.Columns["CategoryID"];
                this.columnDescription = base.Columns["Description"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedDate = base.Columns["LastUpdatedDate"];
                this.columnActiveFlag = base.Columns["ActiveFlag"];
                this.columnAllowPriceIncrePct = base.Columns["AllowPriceIncrePct"];
                this.columnAllowPriceDecrePct = base.Columns["AllowPriceDecrePct"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnSubCategoryCode = new global::System.Data.DataColumn("SubCategoryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCategoryCode);
                this.columnSubCategoryID = new global::System.Data.DataColumn("SubCategoryID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCategoryID);
                this.columnCategoryID = new global::System.Data.DataColumn("CategoryID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedDate = new global::System.Data.DataColumn("LastUpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedDate);
                this.columnActiveFlag = new global::System.Data.DataColumn("ActiveFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActiveFlag);
                this.columnAllowPriceIncrePct = new global::System.Data.DataColumn("AllowPriceIncrePct", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowPriceIncrePct);
                this.columnAllowPriceDecrePct = new global::System.Data.DataColumn("AllowPriceDecrePct", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowPriceDecrePct);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSubCategoryCode}, true));
                this.columnSubCategoryCode.AllowDBNull = false;
                this.columnSubCategoryCode.Unique = true;
                this.columnSubCategoryCode.MaxLength = 20;
                this.columnSubCategoryID.AutoIncrement = true;
                this.columnSubCategoryID.AutoIncrementSeed = -1;
                this.columnSubCategoryID.AutoIncrementStep = -1;
                this.columnSubCategoryID.AllowDBNull = false;
                this.columnSubCategoryID.ReadOnly = true;
                this.columnCategoryID.AllowDBNull = false;
                this.columnDescription.MaxLength = 500;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 50;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnLastUpdatedBy.AllowDBNull = false;
                this.columnLastUpdatedBy.MaxLength = 50;
                this.columnLastUpdatedDate.AllowDBNull = false;
                this.columnActiveFlag.AllowDBNull = false;
                this.columnActiveFlag.MaxLength = 1;
                this.columnAllowPriceIncrePct.AllowDBNull = false;
                this.columnAllowPriceDecrePct.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryRow NewSubCategoryRow() {
                return ((SubCategoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SubCategoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SubCategoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SubCategoryRowChanged != null)) {
                    this.SubCategoryRowChanged(this, new SubCategoryRowChangeEvent(((SubCategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SubCategoryRowChanging != null)) {
                    this.SubCategoryRowChanging(this, new SubCategoryRowChangeEvent(((SubCategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SubCategoryRowDeleted != null)) {
                    this.SubCategoryRowDeleted(this, new SubCategoryRowChangeEvent(((SubCategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SubCategoryRowDeleting != null)) {
                    this.SubCategoryRowDeleting(this, new SubCategoryRowChangeEvent(((SubCategoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveSubCategoryRow(SubCategoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetProd ds = new DataSetProd();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SubCategoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Get_Tradefeed_ExceptionDataTable : global::System.Data.TypedTableBase<Get_Tradefeed_ExceptionRow> {
            
            private global::System.Data.DataColumn columnCommodityCode;
            
            private global::System.Data.DataColumn columnContract_Year;
            
            private global::System.Data.DataColumn columnContract_Month;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionDataTable() {
                this.TableName = "Get_Tradefeed_Exception";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Get_Tradefeed_ExceptionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected Get_Tradefeed_ExceptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommodityCodeColumn {
                get {
                    return this.columnCommodityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Contract_YearColumn {
                get {
                    return this.columnContract_Year;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Contract_MonthColumn {
                get {
                    return this.columnContract_Month;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRow this[int index] {
                get {
                    return ((Get_Tradefeed_ExceptionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Get_Tradefeed_ExceptionRowChangeEventHandler Get_Tradefeed_ExceptionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Get_Tradefeed_ExceptionRowChangeEventHandler Get_Tradefeed_ExceptionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Get_Tradefeed_ExceptionRowChangeEventHandler Get_Tradefeed_ExceptionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Get_Tradefeed_ExceptionRowChangeEventHandler Get_Tradefeed_ExceptionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddGet_Tradefeed_ExceptionRow(Get_Tradefeed_ExceptionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRow AddGet_Tradefeed_ExceptionRow(string CommodityCode, string Contract_Year, string Contract_Month) {
                Get_Tradefeed_ExceptionRow rowGet_Tradefeed_ExceptionRow = ((Get_Tradefeed_ExceptionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CommodityCode,
                        Contract_Year,
                        Contract_Month};
                rowGet_Tradefeed_ExceptionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGet_Tradefeed_ExceptionRow);
                return rowGet_Tradefeed_ExceptionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Get_Tradefeed_ExceptionDataTable cln = ((Get_Tradefeed_ExceptionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Get_Tradefeed_ExceptionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCommodityCode = base.Columns["CommodityCode"];
                this.columnContract_Year = base.Columns["Contract_Year"];
                this.columnContract_Month = base.Columns["Contract_Month"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCommodityCode = new global::System.Data.DataColumn("CommodityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityCode);
                this.columnContract_Year = new global::System.Data.DataColumn("Contract_Year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract_Year);
                this.columnContract_Month = new global::System.Data.DataColumn("Contract_Month", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract_Month);
                this.columnCommodityCode.ReadOnly = true;
                this.columnCommodityCode.MaxLength = 8000;
                this.columnContract_Year.ReadOnly = true;
                this.columnContract_Year.MaxLength = 4;
                this.columnContract_Month.ReadOnly = true;
                this.columnContract_Month.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRow NewGet_Tradefeed_ExceptionRow() {
                return ((Get_Tradefeed_ExceptionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Get_Tradefeed_ExceptionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Get_Tradefeed_ExceptionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Get_Tradefeed_ExceptionRowChanged != null)) {
                    this.Get_Tradefeed_ExceptionRowChanged(this, new Get_Tradefeed_ExceptionRowChangeEvent(((Get_Tradefeed_ExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Get_Tradefeed_ExceptionRowChanging != null)) {
                    this.Get_Tradefeed_ExceptionRowChanging(this, new Get_Tradefeed_ExceptionRowChangeEvent(((Get_Tradefeed_ExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Get_Tradefeed_ExceptionRowDeleted != null)) {
                    this.Get_Tradefeed_ExceptionRowDeleted(this, new Get_Tradefeed_ExceptionRowChangeEvent(((Get_Tradefeed_ExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Get_Tradefeed_ExceptionRowDeleting != null)) {
                    this.Get_Tradefeed_ExceptionRowDeleting(this, new Get_Tradefeed_ExceptionRowChangeEvent(((Get_Tradefeed_ExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveGet_Tradefeed_ExceptionRow(Get_Tradefeed_ExceptionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetProd ds = new DataSetProd();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Get_Tradefeed_ExceptionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Whatsapp_parameterDataTable : global::System.Data.TypedTableBase<Whatsapp_parameterRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnparameter;
            
            private global::System.Data.DataColumn columnketerangan;
            
            private global::System.Data.DataColumn columncreated_by;
            
            private global::System.Data.DataColumn columncreated_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Whatsapp_parameterDataTable() {
                this.TableName = "Whatsapp_parameter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Whatsapp_parameterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected Whatsapp_parameterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn parameterColumn {
                get {
                    return this.columnparameter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn keteranganColumn {
                get {
                    return this.columnketerangan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn created_byColumn {
                get {
                    return this.columncreated_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn created_dateColumn {
                get {
                    return this.columncreated_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Whatsapp_parameterRow this[int index] {
                get {
                    return ((Whatsapp_parameterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Whatsapp_parameterRowChangeEventHandler Whatsapp_parameterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Whatsapp_parameterRowChangeEventHandler Whatsapp_parameterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Whatsapp_parameterRowChangeEventHandler Whatsapp_parameterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Whatsapp_parameterRowChangeEventHandler Whatsapp_parameterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddWhatsapp_parameterRow(Whatsapp_parameterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Whatsapp_parameterRow AddWhatsapp_parameterRow(string parameter, string keterangan, string created_by, System.DateTime created_date) {
                Whatsapp_parameterRow rowWhatsapp_parameterRow = ((Whatsapp_parameterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        parameter,
                        keterangan,
                        created_by,
                        created_date};
                rowWhatsapp_parameterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWhatsapp_parameterRow);
                return rowWhatsapp_parameterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Whatsapp_parameterRow FindByid(int id) {
                return ((Whatsapp_parameterRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Whatsapp_parameterDataTable cln = ((Whatsapp_parameterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Whatsapp_parameterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnparameter = base.Columns["parameter"];
                this.columnketerangan = base.Columns["keterangan"];
                this.columncreated_by = base.Columns["created_by"];
                this.columncreated_date = base.Columns["created_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnparameter = new global::System.Data.DataColumn("parameter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparameter);
                this.columnketerangan = new global::System.Data.DataColumn("keterangan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnketerangan);
                this.columncreated_by = new global::System.Data.DataColumn("created_by", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated_by);
                this.columncreated_date = new global::System.Data.DataColumn("created_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated_date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnparameter.MaxLength = 100;
                this.columnketerangan.MaxLength = 100;
                this.columncreated_by.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Whatsapp_parameterRow NewWhatsapp_parameterRow() {
                return ((Whatsapp_parameterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Whatsapp_parameterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Whatsapp_parameterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Whatsapp_parameterRowChanged != null)) {
                    this.Whatsapp_parameterRowChanged(this, new Whatsapp_parameterRowChangeEvent(((Whatsapp_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Whatsapp_parameterRowChanging != null)) {
                    this.Whatsapp_parameterRowChanging(this, new Whatsapp_parameterRowChangeEvent(((Whatsapp_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Whatsapp_parameterRowDeleted != null)) {
                    this.Whatsapp_parameterRowDeleted(this, new Whatsapp_parameterRowChangeEvent(((Whatsapp_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Whatsapp_parameterRowDeleting != null)) {
                    this.Whatsapp_parameterRowDeleting(this, new Whatsapp_parameterRowChangeEvent(((Whatsapp_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveWhatsapp_parameterRow(Whatsapp_parameterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetProd ds = new DataSetProd();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Whatsapp_parameterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class uspTradeFeedExceptionApproveAllDataTable : global::System.Data.TypedTableBase<uspTradeFeedExceptionApproveAllRow> {
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspTradeFeedExceptionApproveAllDataTable() {
                this.TableName = "uspTradeFeedExceptionApproveAll";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal uspTradeFeedExceptionApproveAllDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected uspTradeFeedExceptionApproveAllDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspTradeFeedExceptionApproveAllRow this[int index] {
                get {
                    return ((uspTradeFeedExceptionApproveAllRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event uspTradeFeedExceptionApproveAllRowChangeEventHandler uspTradeFeedExceptionApproveAllRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event uspTradeFeedExceptionApproveAllRowChangeEventHandler uspTradeFeedExceptionApproveAllRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event uspTradeFeedExceptionApproveAllRowChangeEventHandler uspTradeFeedExceptionApproveAllRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event uspTradeFeedExceptionApproveAllRowChangeEventHandler uspTradeFeedExceptionApproveAllRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AdduspTradeFeedExceptionApproveAllRow(uspTradeFeedExceptionApproveAllRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspTradeFeedExceptionApproveAllRow AdduspTradeFeedExceptionApproveAllRow() {
                uspTradeFeedExceptionApproveAllRow rowuspTradeFeedExceptionApproveAllRow = ((uspTradeFeedExceptionApproveAllRow)(this.NewRow()));
                object[] columnValuesArray = new object[0];
                rowuspTradeFeedExceptionApproveAllRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowuspTradeFeedExceptionApproveAllRow);
                return rowuspTradeFeedExceptionApproveAllRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                uspTradeFeedExceptionApproveAllDataTable cln = ((uspTradeFeedExceptionApproveAllDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new uspTradeFeedExceptionApproveAllDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspTradeFeedExceptionApproveAllRow NewuspTradeFeedExceptionApproveAllRow() {
                return ((uspTradeFeedExceptionApproveAllRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new uspTradeFeedExceptionApproveAllRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(uspTradeFeedExceptionApproveAllRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.uspTradeFeedExceptionApproveAllRowChanged != null)) {
                    this.uspTradeFeedExceptionApproveAllRowChanged(this, new uspTradeFeedExceptionApproveAllRowChangeEvent(((uspTradeFeedExceptionApproveAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.uspTradeFeedExceptionApproveAllRowChanging != null)) {
                    this.uspTradeFeedExceptionApproveAllRowChanging(this, new uspTradeFeedExceptionApproveAllRowChangeEvent(((uspTradeFeedExceptionApproveAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.uspTradeFeedExceptionApproveAllRowDeleted != null)) {
                    this.uspTradeFeedExceptionApproveAllRowDeleted(this, new uspTradeFeedExceptionApproveAllRowChangeEvent(((uspTradeFeedExceptionApproveAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.uspTradeFeedExceptionApproveAllRowDeleting != null)) {
                    this.uspTradeFeedExceptionApproveAllRowDeleting(this, new uspTradeFeedExceptionApproveAllRowChangeEvent(((uspTradeFeedExceptionApproveAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveuspTradeFeedExceptionApproveAllRow(uspTradeFeedExceptionApproveAllRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetProd ds = new DataSetProd();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "uspTradeFeedExceptionApproveAllDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TradefeedExceptionRow : global::System.Data.DataRow {
            
            private TradefeedExceptionDataTable tableTradefeedException;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal TradefeedExceptionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTradefeedException = ((TradefeedExceptionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TradeFeedID {
                get {
                    return ((decimal)(this[this.tableTradefeedException.TradeFeedIDColumn]));
                }
                set {
                    this[this.tableTradefeedException.TradeFeedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime BusinessDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTradefeedException.BusinessDateColumn]));
                }
                set {
                    this[this.tableTradefeedException.BusinessDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ExchangeID {
                get {
                    return ((decimal)(this[this.tableTradefeedException.ExchangeIDColumn]));
                }
                set {
                    this[this.tableTradefeedException.ExchangeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalStatus {
                get {
                    return ((string)(this[this.tableTradefeedException.ApprovalStatusColumn]));
                }
                set {
                    this[this.tableTradefeedException.ApprovalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Message {
                get {
                    try {
                        return ((string)(this[this.tableTradefeedException.MessageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Message\' in table \'TradefeedException\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTradefeedException.MessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalDesc {
                get {
                    try {
                        return ((string)(this[this.tableTradefeedException.ApprovalDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovalDesc\' in table \'TradefeedException\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTradefeedException.ApprovalDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableTradefeedException.CreatedByColumn]));
                }
                set {
                    this[this.tableTradefeedException.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTradefeedException.CreatedDateColumn]));
                }
                set {
                    this[this.tableTradefeedException.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastUpdatedBy {
                get {
                    return ((string)(this[this.tableTradefeedException.LastUpdatedByColumn]));
                }
                set {
                    this[this.tableTradefeedException.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastUpdatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTradefeedException.LastUpdatedDateColumn]));
                }
                set {
                    this[this.tableTradefeedException.LastUpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ForceApproveOperationsType {
                get {
                    return ((int)(this[this.tableTradefeedException.ForceApproveOperationsTypeColumn]));
                }
                set {
                    this[this.tableTradefeedException.ForceApproveOperationsTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMessageNull() {
                return this.IsNull(this.tableTradefeedException.MessageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMessageNull() {
                this[this.tableTradefeedException.MessageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsApprovalDescNull() {
                return this.IsNull(this.tableTradefeedException.ApprovalDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetApprovalDescNull() {
                this[this.tableTradefeedException.ApprovalDescColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CommodityRow : global::System.Data.DataRow {
            
            private CommodityDataTable tableCommodity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CommodityRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCommodity = ((CommodityDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ProductID {
                get {
                    return ((decimal)(this[this.tableCommodity.ProductIDColumn]));
                }
                set {
                    this[this.tableCommodity.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ExchangeId {
                get {
                    return ((decimal)(this[this.tableCommodity.ExchangeIdColumn]));
                }
                set {
                    this[this.tableCommodity.ExchangeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveStartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCommodity.EffectiveStartDateColumn]));
                }
                set {
                    this[this.tableCommodity.EffectiveStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalStatus {
                get {
                    return ((string)(this[this.tableCommodity.ApprovalStatusColumn]));
                }
                set {
                    this[this.tableCommodity.ApprovalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CommodityCode {
                get {
                    return ((string)(this[this.tableCommodity.CommodityCodeColumn]));
                }
                set {
                    this[this.tableCommodity.CommodityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CommodityID {
                get {
                    return ((decimal)(this[this.tableCommodity.CommodityIDColumn]));
                }
                set {
                    this[this.tableCommodity.CommodityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ReffCommID {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ReffCommIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReffCommID\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ReffCommIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PEG {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.PEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PEG\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.PEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string VMIRCACalType {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.VMIRCACalTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VMIRCACalType\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.VMIRCACalTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CrossCurr {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.CrossCurrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrossCurr\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.CrossCurrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SettlementFactor {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.SettlementFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SettlementFactor\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.SettlementFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DayRef {
                get {
                    try {
                        return ((int)(this[this.tableCommodity.DayRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayRef\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.DayRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Divisor {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.DivisorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Divisor\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.DivisorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CommName {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.CommNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommName\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.CommNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginTender {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.MarginTenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarginTender\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.MarginTenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginSpot {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.MarginSpotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarginSpot\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.MarginSpotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginRemote {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.MarginRemoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarginRemote\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.MarginRemoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CalSpreadRemoteMargin {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.CalSpreadRemoteMarginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalSpreadRemoteMargin\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.CalSpreadRemoteMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CrossCurrProduct {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.CrossCurrProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrossCurrProduct\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.CrossCurrProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCommodity.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal HomeCurrencyID {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.HomeCurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HomeCurrencyID\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.HomeCurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastUpdatedBy {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.LastUpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdatedBy\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastUpdatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCommodity.LastUpdatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdatedDate\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.LastUpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCommodity.EffectiveEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveEndDate\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.EffectiveEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalDesc {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ApprovalDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovalDesc\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ApprovalDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IsKIE {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.IsKIEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsKIE\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.IsKIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SettlementType {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.SettlementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SettlementType\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.SettlementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractSize {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ContractSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractSize\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ContractSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IsIncentive {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.IsIncentiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsIncentive\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.IsIncentiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OriginalCommodityID {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.OriginalCommodityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalCommodityID\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.OriginalCommodityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ActionFlag {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ActionFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActionFlag\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ActionFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TenderReqType {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.TenderReqTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenderReqType\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.TenderReqTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeK1 {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ModeK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeK1\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ModeK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueK1 {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ValueK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueK1\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ValueK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefK1 {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ContractRefK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefK1\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ContractRefK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeK2 {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ModeK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeK2\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ModeK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueK2 {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ValueK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueK2\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ValueK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefK2 {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ContractRefK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefK2\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ContractRefK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeD {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ModeDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeD\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ModeDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueD {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ValueDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueD\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ValueDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefD {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.ContractRefDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefD\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ContractRefDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeIM {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ModeIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeIM\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ModeIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PercentageSpotIM {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.PercentageSpotIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageSpotIM\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.PercentageSpotIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PercentageRemoteIM {
                get {
                    try {
                        return ((decimal)(this[this.tableCommodity.PercentageRemoteIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageRemoteIM\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.PercentageRemoteIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeFee {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.ModeFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeFee\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.ModeFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string isMarketMaker {
                get {
                    try {
                        return ((string)(this[this.tableCommodity.isMarketMakerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isMarketMaker\' in table \'Commodity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommodity.isMarketMakerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow CommodityRowParent {
                get {
                    return ((CommodityRow)(this.GetParentRow(this.Table.ParentRelations["R_416"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["R_416"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsReffCommIDNull() {
                return this.IsNull(this.tableCommodity.ReffCommIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetReffCommIDNull() {
                this[this.tableCommodity.ReffCommIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUnitNull() {
                return this.IsNull(this.tableCommodity.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUnitNull() {
                this[this.tableCommodity.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPEGNull() {
                return this.IsNull(this.tableCommodity.PEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPEGNull() {
                this[this.tableCommodity.PEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVMIRCACalTypeNull() {
                return this.IsNull(this.tableCommodity.VMIRCACalTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVMIRCACalTypeNull() {
                this[this.tableCommodity.VMIRCACalTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCrossCurrNull() {
                return this.IsNull(this.tableCommodity.CrossCurrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCrossCurrNull() {
                this[this.tableCommodity.CrossCurrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSettlementFactorNull() {
                return this.IsNull(this.tableCommodity.SettlementFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSettlementFactorNull() {
                this[this.tableCommodity.SettlementFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDayRefNull() {
                return this.IsNull(this.tableCommodity.DayRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDayRefNull() {
                this[this.tableCommodity.DayRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDivisorNull() {
                return this.IsNull(this.tableCommodity.DivisorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDivisorNull() {
                this[this.tableCommodity.DivisorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommNameNull() {
                return this.IsNull(this.tableCommodity.CommNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommNameNull() {
                this[this.tableCommodity.CommNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarginTenderNull() {
                return this.IsNull(this.tableCommodity.MarginTenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarginTenderNull() {
                this[this.tableCommodity.MarginTenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarginSpotNull() {
                return this.IsNull(this.tableCommodity.MarginSpotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarginSpotNull() {
                this[this.tableCommodity.MarginSpotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarginRemoteNull() {
                return this.IsNull(this.tableCommodity.MarginRemoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarginRemoteNull() {
                this[this.tableCommodity.MarginRemoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCalSpreadRemoteMarginNull() {
                return this.IsNull(this.tableCommodity.CalSpreadRemoteMarginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCalSpreadRemoteMarginNull() {
                this[this.tableCommodity.CalSpreadRemoteMarginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCrossCurrProductNull() {
                return this.IsNull(this.tableCommodity.CrossCurrProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCrossCurrProductNull() {
                this[this.tableCommodity.CrossCurrProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableCommodity.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCreatedByNull() {
                this[this.tableCommodity.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableCommodity.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCreatedDateNull() {
                this[this.tableCommodity.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHomeCurrencyIDNull() {
                return this.IsNull(this.tableCommodity.HomeCurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHomeCurrencyIDNull() {
                this[this.tableCommodity.HomeCurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLastUpdatedByNull() {
                return this.IsNull(this.tableCommodity.LastUpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLastUpdatedByNull() {
                this[this.tableCommodity.LastUpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLastUpdatedDateNull() {
                return this.IsNull(this.tableCommodity.LastUpdatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLastUpdatedDateNull() {
                this[this.tableCommodity.LastUpdatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEffectiveEndDateNull() {
                return this.IsNull(this.tableCommodity.EffectiveEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEffectiveEndDateNull() {
                this[this.tableCommodity.EffectiveEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsApprovalDescNull() {
                return this.IsNull(this.tableCommodity.ApprovalDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetApprovalDescNull() {
                this[this.tableCommodity.ApprovalDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsKIENull() {
                return this.IsNull(this.tableCommodity.IsKIEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsKIENull() {
                this[this.tableCommodity.IsKIEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSettlementTypeNull() {
                return this.IsNull(this.tableCommodity.SettlementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSettlementTypeNull() {
                this[this.tableCommodity.SettlementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractSizeNull() {
                return this.IsNull(this.tableCommodity.ContractSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractSizeNull() {
                this[this.tableCommodity.ContractSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsIncentiveNull() {
                return this.IsNull(this.tableCommodity.IsIncentiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsIncentiveNull() {
                this[this.tableCommodity.IsIncentiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOriginalCommodityIDNull() {
                return this.IsNull(this.tableCommodity.OriginalCommodityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOriginalCommodityIDNull() {
                this[this.tableCommodity.OriginalCommodityIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActionFlagNull() {
                return this.IsNull(this.tableCommodity.ActionFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActionFlagNull() {
                this[this.tableCommodity.ActionFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTenderReqTypeNull() {
                return this.IsNull(this.tableCommodity.TenderReqTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTenderReqTypeNull() {
                this[this.tableCommodity.TenderReqTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeK1Null() {
                return this.IsNull(this.tableCommodity.ModeK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeK1Null() {
                this[this.tableCommodity.ModeK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueK1Null() {
                return this.IsNull(this.tableCommodity.ValueK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueK1Null() {
                this[this.tableCommodity.ValueK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefK1Null() {
                return this.IsNull(this.tableCommodity.ContractRefK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefK1Null() {
                this[this.tableCommodity.ContractRefK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeK2Null() {
                return this.IsNull(this.tableCommodity.ModeK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeK2Null() {
                this[this.tableCommodity.ModeK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueK2Null() {
                return this.IsNull(this.tableCommodity.ValueK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueK2Null() {
                this[this.tableCommodity.ValueK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefK2Null() {
                return this.IsNull(this.tableCommodity.ContractRefK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefK2Null() {
                this[this.tableCommodity.ContractRefK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeDNull() {
                return this.IsNull(this.tableCommodity.ModeDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeDNull() {
                this[this.tableCommodity.ModeDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueDNull() {
                return this.IsNull(this.tableCommodity.ValueDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueDNull() {
                this[this.tableCommodity.ValueDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefDNull() {
                return this.IsNull(this.tableCommodity.ContractRefDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefDNull() {
                this[this.tableCommodity.ContractRefDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeIMNull() {
                return this.IsNull(this.tableCommodity.ModeIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeIMNull() {
                this[this.tableCommodity.ModeIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPercentageSpotIMNull() {
                return this.IsNull(this.tableCommodity.PercentageSpotIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPercentageSpotIMNull() {
                this[this.tableCommodity.PercentageSpotIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPercentageRemoteIMNull() {
                return this.IsNull(this.tableCommodity.PercentageRemoteIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPercentageRemoteIMNull() {
                this[this.tableCommodity.PercentageRemoteIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeFeeNull() {
                return this.IsNull(this.tableCommodity.ModeFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeFeeNull() {
                this[this.tableCommodity.ModeFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsisMarketMakerNull() {
                return this.IsNull(this.tableCommodity.isMarketMakerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetisMarketMakerNull() {
                this[this.tableCommodity.isMarketMakerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow[] GetCommodityRows() {
                if ((this.Table.ChildRelations["R_416"] == null)) {
                    return new CommodityRow[0];
                }
                else {
                    return ((CommodityRow[])(base.GetChildRows(this.Table.ChildRelations["R_416"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ContractRow : global::System.Data.DataRow {
            
            private ContractDataTable tableContract;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ContractRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableContract = ((ContractDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CommodityID {
                get {
                    return ((decimal)(this[this.tableContract.CommodityIDColumn]));
                }
                set {
                    this[this.tableContract.CommodityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ContractMonth {
                get {
                    return ((int)(this[this.tableContract.ContractMonthColumn]));
                }
                set {
                    this[this.tableContract.ContractMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ContractYear {
                get {
                    return ((int)(this[this.tableContract.ContractYearColumn]));
                }
                set {
                    this[this.tableContract.ContractYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalStatus {
                get {
                    return ((string)(this[this.tableContract.ApprovalStatusColumn]));
                }
                set {
                    this[this.tableContract.ApprovalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveStartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.EffectiveStartDateColumn]));
                }
                set {
                    this[this.tableContract.EffectiveStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractID {
                get {
                    return ((decimal)(this[this.tableContract.ContractIDColumn]));
                }
                set {
                    this[this.tableContract.ContractIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractSize {
                get {
                    return ((decimal)(this[this.tableContract.ContractSizeColumn]));
                }
                set {
                    this[this.tableContract.ContractSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SettlementType {
                get {
                    return ((string)(this[this.tableContract.SettlementTypeColumn]));
                }
                set {
                    this[this.tableContract.SettlementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableContract.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Unit {
                get {
                    return ((string)(this[this.tableContract.UnitColumn]));
                }
                set {
                    this[this.tableContract.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime StartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.StartDateColumn]));
                }
                set {
                    this[this.tableContract.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EndSpot {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.EndSpotColumn]));
                }
                set {
                    this[this.tableContract.EndSpotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime StartSpot {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.StartSpotColumn]));
                }
                set {
                    this[this.tableContract.StartSpotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PEG {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.PEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PEG\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.PEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string VMIRCACalType {
                get {
                    try {
                        return ((string)(this[this.tableContract.VMIRCACalTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VMIRCACalType\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.VMIRCACalTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SettlementFactor {
                get {
                    try {
                        return ((string)(this[this.tableContract.SettlementFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SettlementFactor\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.SettlementFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DayRef {
                get {
                    try {
                        return ((int)(this[this.tableContract.DayRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayRef\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.DayRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Divisor {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.DivisorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Divisor\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.DivisorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginTender {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.MarginTenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarginTender\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.MarginTenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginSpot {
                get {
                    return ((decimal)(this[this.tableContract.MarginSpotColumn]));
                }
                set {
                    this[this.tableContract.MarginSpotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginRemote {
                get {
                    return ((decimal)(this[this.tableContract.MarginRemoteColumn]));
                }
                set {
                    this[this.tableContract.MarginRemoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CalSpreadRemoteMargin {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.CalSpreadRemoteMarginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalSpreadRemoteMargin\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.CalSpreadRemoteMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IsKIE {
                get {
                    return ((string)(this[this.tableContract.IsKIEColumn]));
                }
                set {
                    this[this.tableContract.IsKIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableContract.CreatedByColumn]));
                }
                set {
                    this[this.tableContract.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.CreatedDateColumn]));
                }
                set {
                    this[this.tableContract.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastUpdatedBy {
                get {
                    return ((string)(this[this.tableContract.LastUpdatedByColumn]));
                }
                set {
                    this[this.tableContract.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastUpdatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.LastUpdatedDateColumn]));
                }
                set {
                    this[this.tableContract.LastUpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableContract.EffectiveEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveEndDate\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.EffectiveEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalDesc {
                get {
                    try {
                        return ((string)(this[this.tableContract.ApprovalDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovalDesc\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ApprovalDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal HomeCurrencyID {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.HomeCurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HomeCurrencyID\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.HomeCurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CrossCurr {
                get {
                    return ((string)(this[this.tableContract.CrossCurrColumn]));
                }
                set {
                    this[this.tableContract.CrossCurrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CrossCurrProduct {
                get {
                    try {
                        return ((string)(this[this.tableContract.CrossCurrProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrossCurrProduct\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.CrossCurrProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OriginalContractID {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.OriginalContractIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalContractID\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.OriginalContractIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ActionFlag {
                get {
                    try {
                        return ((string)(this[this.tableContract.ActionFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActionFlag\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ActionFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TenderReqType {
                get {
                    try {
                        return ((string)(this[this.tableContract.TenderReqTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenderReqType\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.TenderReqTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SubCategoryID {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.SubCategoryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubCategoryID\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.SubCategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeK1 {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeK1\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueK1 {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ValueK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueK1\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ValueK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefK1 {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ContractRefK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefK1\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ContractRefK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeK2 {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeK2\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueK2 {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ValueK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueK2\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ValueK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefK2 {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ContractRefK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefK2\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ContractRefK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeD {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeD\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueD {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ValueDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueD\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ValueDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefD {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ContractRefDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefD\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ContractRefDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeIM {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeIM\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PercentageSpotIM {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.PercentageSpotIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageSpotIM\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.PercentageSpotIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PercentageRemoteIM {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.PercentageRemoteIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageRemoteIM\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.PercentageRemoteIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeFee {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeFee\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableContract.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableContract.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPEGNull() {
                return this.IsNull(this.tableContract.PEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPEGNull() {
                this[this.tableContract.PEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVMIRCACalTypeNull() {
                return this.IsNull(this.tableContract.VMIRCACalTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVMIRCACalTypeNull() {
                this[this.tableContract.VMIRCACalTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSettlementFactorNull() {
                return this.IsNull(this.tableContract.SettlementFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSettlementFactorNull() {
                this[this.tableContract.SettlementFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDayRefNull() {
                return this.IsNull(this.tableContract.DayRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDayRefNull() {
                this[this.tableContract.DayRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDivisorNull() {
                return this.IsNull(this.tableContract.DivisorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDivisorNull() {
                this[this.tableContract.DivisorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarginTenderNull() {
                return this.IsNull(this.tableContract.MarginTenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarginTenderNull() {
                this[this.tableContract.MarginTenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCalSpreadRemoteMarginNull() {
                return this.IsNull(this.tableContract.CalSpreadRemoteMarginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCalSpreadRemoteMarginNull() {
                this[this.tableContract.CalSpreadRemoteMarginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEffectiveEndDateNull() {
                return this.IsNull(this.tableContract.EffectiveEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEffectiveEndDateNull() {
                this[this.tableContract.EffectiveEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsApprovalDescNull() {
                return this.IsNull(this.tableContract.ApprovalDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetApprovalDescNull() {
                this[this.tableContract.ApprovalDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHomeCurrencyIDNull() {
                return this.IsNull(this.tableContract.HomeCurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHomeCurrencyIDNull() {
                this[this.tableContract.HomeCurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCrossCurrProductNull() {
                return this.IsNull(this.tableContract.CrossCurrProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCrossCurrProductNull() {
                this[this.tableContract.CrossCurrProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOriginalContractIDNull() {
                return this.IsNull(this.tableContract.OriginalContractIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOriginalContractIDNull() {
                this[this.tableContract.OriginalContractIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActionFlagNull() {
                return this.IsNull(this.tableContract.ActionFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActionFlagNull() {
                this[this.tableContract.ActionFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTenderReqTypeNull() {
                return this.IsNull(this.tableContract.TenderReqTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTenderReqTypeNull() {
                this[this.tableContract.TenderReqTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSubCategoryIDNull() {
                return this.IsNull(this.tableContract.SubCategoryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSubCategoryIDNull() {
                this[this.tableContract.SubCategoryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeK1Null() {
                return this.IsNull(this.tableContract.ModeK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeK1Null() {
                this[this.tableContract.ModeK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueK1Null() {
                return this.IsNull(this.tableContract.ValueK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueK1Null() {
                this[this.tableContract.ValueK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefK1Null() {
                return this.IsNull(this.tableContract.ContractRefK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefK1Null() {
                this[this.tableContract.ContractRefK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeK2Null() {
                return this.IsNull(this.tableContract.ModeK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeK2Null() {
                this[this.tableContract.ModeK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueK2Null() {
                return this.IsNull(this.tableContract.ValueK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueK2Null() {
                this[this.tableContract.ValueK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefK2Null() {
                return this.IsNull(this.tableContract.ContractRefK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefK2Null() {
                this[this.tableContract.ContractRefK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeDNull() {
                return this.IsNull(this.tableContract.ModeDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeDNull() {
                this[this.tableContract.ModeDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueDNull() {
                return this.IsNull(this.tableContract.ValueDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueDNull() {
                this[this.tableContract.ValueDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefDNull() {
                return this.IsNull(this.tableContract.ContractRefDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefDNull() {
                this[this.tableContract.ContractRefDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeIMNull() {
                return this.IsNull(this.tableContract.ModeIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeIMNull() {
                this[this.tableContract.ModeIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPercentageSpotIMNull() {
                return this.IsNull(this.tableContract.PercentageSpotIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPercentageSpotIMNull() {
                this[this.tableContract.PercentageSpotIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPercentageRemoteIMNull() {
                return this.IsNull(this.tableContract.PercentageRemoteIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPercentageRemoteIMNull() {
                this[this.tableContract.PercentageRemoteIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeFeeNull() {
                return this.IsNull(this.tableContract.ModeFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeFeeNull() {
                this[this.tableContract.ModeFeeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SubCategoryRow : global::System.Data.DataRow {
            
            private SubCategoryDataTable tableSubCategory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SubCategoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSubCategory = ((SubCategoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SubCategoryCode {
                get {
                    return ((string)(this[this.tableSubCategory.SubCategoryCodeColumn]));
                }
                set {
                    this[this.tableSubCategory.SubCategoryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SubCategoryID {
                get {
                    return ((decimal)(this[this.tableSubCategory.SubCategoryIDColumn]));
                }
                set {
                    this[this.tableSubCategory.SubCategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CategoryID {
                get {
                    return ((decimal)(this[this.tableSubCategory.CategoryIDColumn]));
                }
                set {
                    this[this.tableSubCategory.CategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableSubCategory.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'SubCategory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubCategory.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableSubCategory.CreatedByColumn]));
                }
                set {
                    this[this.tableSubCategory.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSubCategory.CreatedDateColumn]));
                }
                set {
                    this[this.tableSubCategory.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastUpdatedBy {
                get {
                    return ((string)(this[this.tableSubCategory.LastUpdatedByColumn]));
                }
                set {
                    this[this.tableSubCategory.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastUpdatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSubCategory.LastUpdatedDateColumn]));
                }
                set {
                    this[this.tableSubCategory.LastUpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ActiveFlag {
                get {
                    return ((string)(this[this.tableSubCategory.ActiveFlagColumn]));
                }
                set {
                    this[this.tableSubCategory.ActiveFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AllowPriceIncrePct {
                get {
                    return ((decimal)(this[this.tableSubCategory.AllowPriceIncrePctColumn]));
                }
                set {
                    this[this.tableSubCategory.AllowPriceIncrePctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AllowPriceDecrePct {
                get {
                    return ((decimal)(this[this.tableSubCategory.AllowPriceDecrePctColumn]));
                }
                set {
                    this[this.tableSubCategory.AllowPriceDecrePctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableSubCategory.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableSubCategory.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Get_Tradefeed_ExceptionRow : global::System.Data.DataRow {
            
            private Get_Tradefeed_ExceptionDataTable tableGet_Tradefeed_Exception;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Get_Tradefeed_ExceptionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGet_Tradefeed_Exception = ((Get_Tradefeed_ExceptionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CommodityCode {
                get {
                    try {
                        return ((string)(this[this.tableGet_Tradefeed_Exception.CommodityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommodityCode\' in table \'Get_Tradefeed_Exception\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGet_Tradefeed_Exception.CommodityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Contract_Year {
                get {
                    try {
                        return ((string)(this[this.tableGet_Tradefeed_Exception.Contract_YearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contract_Year\' in table \'Get_Tradefeed_Exception\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGet_Tradefeed_Exception.Contract_YearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Contract_Month {
                get {
                    try {
                        return ((string)(this[this.tableGet_Tradefeed_Exception.Contract_MonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contract_Month\' in table \'Get_Tradefeed_Exception\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGet_Tradefeed_Exception.Contract_MonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommodityCodeNull() {
                return this.IsNull(this.tableGet_Tradefeed_Exception.CommodityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommodityCodeNull() {
                this[this.tableGet_Tradefeed_Exception.CommodityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContract_YearNull() {
                return this.IsNull(this.tableGet_Tradefeed_Exception.Contract_YearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContract_YearNull() {
                this[this.tableGet_Tradefeed_Exception.Contract_YearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContract_MonthNull() {
                return this.IsNull(this.tableGet_Tradefeed_Exception.Contract_MonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContract_MonthNull() {
                this[this.tableGet_Tradefeed_Exception.Contract_MonthColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Whatsapp_parameterRow : global::System.Data.DataRow {
            
            private Whatsapp_parameterDataTable tableWhatsapp_parameter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Whatsapp_parameterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWhatsapp_parameter = ((Whatsapp_parameterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableWhatsapp_parameter.idColumn]));
                }
                set {
                    this[this.tableWhatsapp_parameter.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string parameter {
                get {
                    try {
                        return ((string)(this[this.tableWhatsapp_parameter.parameterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parameter\' in table \'Whatsapp_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWhatsapp_parameter.parameterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string keterangan {
                get {
                    try {
                        return ((string)(this[this.tableWhatsapp_parameter.keteranganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'keterangan\' in table \'Whatsapp_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWhatsapp_parameter.keteranganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string created_by {
                get {
                    try {
                        return ((string)(this[this.tableWhatsapp_parameter.created_byColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created_by\' in table \'Whatsapp_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWhatsapp_parameter.created_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime created_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWhatsapp_parameter.created_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created_date\' in table \'Whatsapp_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWhatsapp_parameter.created_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsparameterNull() {
                return this.IsNull(this.tableWhatsapp_parameter.parameterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetparameterNull() {
                this[this.tableWhatsapp_parameter.parameterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsketeranganNull() {
                return this.IsNull(this.tableWhatsapp_parameter.keteranganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetketeranganNull() {
                this[this.tableWhatsapp_parameter.keteranganColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Iscreated_byNull() {
                return this.IsNull(this.tableWhatsapp_parameter.created_byColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setcreated_byNull() {
                this[this.tableWhatsapp_parameter.created_byColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Iscreated_dateNull() {
                return this.IsNull(this.tableWhatsapp_parameter.created_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setcreated_dateNull() {
                this[this.tableWhatsapp_parameter.created_dateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class uspTradeFeedExceptionApproveAllRow : global::System.Data.DataRow {
            
            private uspTradeFeedExceptionApproveAllDataTable tableuspTradeFeedExceptionApproveAll;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal uspTradeFeedExceptionApproveAllRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableuspTradeFeedExceptionApproveAll = ((uspTradeFeedExceptionApproveAllDataTable)(this.Table));
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class TradefeedExceptionRowChangeEvent : global::System.EventArgs {
            
            private TradefeedExceptionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionRowChangeEvent(TradefeedExceptionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TradefeedExceptionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class CommodityRowChangeEvent : global::System.EventArgs {
            
            private CommodityRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRowChangeEvent(CommodityRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CommodityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ContractRowChangeEvent : global::System.EventArgs {
            
            private ContractRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRowChangeEvent(ContractRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class SubCategoryRowChangeEvent : global::System.EventArgs {
            
            private SubCategoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryRowChangeEvent(SubCategoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SubCategoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class Get_Tradefeed_ExceptionRowChangeEvent : global::System.EventArgs {
            
            private Get_Tradefeed_ExceptionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRowChangeEvent(Get_Tradefeed_ExceptionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class Whatsapp_parameterRowChangeEvent : global::System.EventArgs {
            
            private Whatsapp_parameterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Whatsapp_parameterRowChangeEvent(Whatsapp_parameterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Whatsapp_parameterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class uspTradeFeedExceptionApproveAllRowChangeEvent : global::System.EventArgs {
            
            private uspTradeFeedExceptionApproveAllRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspTradeFeedExceptionApproveAllRowChangeEvent(uspTradeFeedExceptionApproveAllRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public uspTradeFeedExceptionApproveAllRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace TradefeedExceptionServices.DataSetProdTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TradefeedExceptionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public TradefeedExceptionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TradefeedException";
            tableMapping.ColumnMappings.Add("TradeFeedID", "TradeFeedID");
            tableMapping.ColumnMappings.Add("BusinessDate", "BusinessDate");
            tableMapping.ColumnMappings.Add("ExchangeID", "ExchangeID");
            tableMapping.ColumnMappings.Add("ApprovalStatus", "ApprovalStatus");
            tableMapping.ColumnMappings.Add("Message", "Message");
            tableMapping.ColumnMappings.Add("ApprovalDesc", "ApprovalDesc");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("LastUpdatedBy", "LastUpdatedBy");
            tableMapping.ColumnMappings.Add("LastUpdatedDate", "LastUpdatedDate");
            tableMapping.ColumnMappings.Add("ForceApproveOperationsType", "ForceApproveOperationsType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TradefeedException] WHERE (([TradeFeedID] = @Original_TradeFeedID) AND ([BusinessDate] = @Original_BusinessDate) AND ([ExchangeID] = @Original_ExchangeID) AND ([ApprovalStatus] = @Original_ApprovalStatus) AND ((@IsNull_Message = 1 AND [Message] IS NULL) OR ([Message] = @Original_Message)) AND ((@IsNull_ApprovalDesc = 1 AND [ApprovalDesc] IS NULL) OR ([ApprovalDesc] = @Original_ApprovalDesc)) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Original_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ([ForceApproveOperationsType] = @Original_ForceApproveOperationsType))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradeFeedID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TradeFeedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Message", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForceApproveOperationsType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForceApproveOperationsType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TradefeedException] ([TradeFeedID], [BusinessDate], [ExchangeID], [ApprovalStatus], [Message], [ApprovalDesc], [CreatedBy], [CreatedDate], [LastUpdatedBy], [LastUpdatedDate], [ForceApproveOperationsType]) VALUES (@TradeFeedID, @BusinessDate, @ExchangeID, @ApprovalStatus, @Message, @ApprovalDesc, @CreatedBy, @CreatedDate, @LastUpdatedBy, @LastUpdatedDate, @ForceApproveOperationsType);
SELECT TradeFeedID, BusinessDate, ExchangeID, ApprovalStatus, Message, ApprovalDesc, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, ForceApproveOperationsType FROM TradefeedException WHERE (ApprovalStatus = @ApprovalStatus) AND (BusinessDate = @BusinessDate) AND (ExchangeID = @ExchangeID) AND (TradeFeedID = @TradeFeedID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradeFeedID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TradeFeedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForceApproveOperationsType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForceApproveOperationsType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TradefeedException] SET [TradeFeedID] = @TradeFeedID, [BusinessDate] = @BusinessDate, [ExchangeID] = @ExchangeID, [ApprovalStatus] = @ApprovalStatus, [Message] = @Message, [ApprovalDesc] = @ApprovalDesc, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [LastUpdatedBy] = @LastUpdatedBy, [LastUpdatedDate] = @LastUpdatedDate, [ForceApproveOperationsType] = @ForceApproveOperationsType WHERE (([TradeFeedID] = @Original_TradeFeedID) AND ([BusinessDate] = @Original_BusinessDate) AND ([ExchangeID] = @Original_ExchangeID) AND ([ApprovalStatus] = @Original_ApprovalStatus) AND ((@IsNull_Message = 1 AND [Message] IS NULL) OR ([Message] = @Original_Message)) AND ((@IsNull_ApprovalDesc = 1 AND [ApprovalDesc] IS NULL) OR ([ApprovalDesc] = @Original_ApprovalDesc)) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Original_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ([ForceApproveOperationsType] = @Original_ForceApproveOperationsType));
SELECT TradeFeedID, BusinessDate, ExchangeID, ApprovalStatus, Message, ApprovalDesc, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, ForceApproveOperationsType FROM TradefeedException WHERE (ApprovalStatus = @ApprovalStatus) AND (BusinessDate = @BusinessDate) AND (ExchangeID = @ExchangeID) AND (TradeFeedID = @TradeFeedID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradeFeedID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TradeFeedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForceApproveOperationsType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForceApproveOperationsType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradeFeedID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TradeFeedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ExchangeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Message", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForceApproveOperationsType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForceApproveOperationsType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TradefeedExceptionServices.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        TradefeedException.*\r\nFROM            TradefeedException";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT DISTINCT Replace
                             ((SELECT        TOP (2) item
                                 FROM            [SKD].[SplitString](Message, ' ')
                                 EXCEPT
                                 SELECT        TOP 1 *
                                 FROM            [SKD].[SplitString](Message, ' ')), '(', '') CommodityCode, LEFT(Replace(Replace
                             ((SELECT        TOP (3) item
                                 FROM            [SKD].[SplitString](Message, ' ')
                                 EXCEPT
                                 SELECT        TOP 2 *
                                 FROM            [SKD].[SplitString](Message, ' ')), ')', ''), '(', ''), 4) Contract_Year, RIGHT(Replace(Replace
                             ((SELECT        TOP (3) item
                                 FROM            [SKD].[SplitString](Message, ' ')
                                 EXCEPT
                                 SELECT        TOP 2 *
                                 FROM            [SKD].[SplitString](Message, ' ')), ')', ''), '(', ''), 2) Contract_Month
FROM            SKD.TradefeedException
WHERE        BusinessDate = '2021-09-20' AND Message LIKE '%not registered yet%'";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetProd.TradefeedExceptionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetProd.TradefeedExceptionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetProd.TradefeedExceptionDataTable dataTable = new DataSetProd.TradefeedExceptionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFilter(DataSetProd.TradefeedExceptionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSetProd.TradefeedExceptionDataTable GetDataByFilter() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            DataSetProd.TradefeedExceptionDataTable dataTable = new DataSetProd.TradefeedExceptionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetProd.TradefeedExceptionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetProd dataSet) {
            return this.Adapter.Update(dataSet, "TradefeedException");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TradeFeedID, System.DateTime Original_BusinessDate, decimal Original_ExchangeID, string Original_ApprovalStatus, string Original_Message, string Original_ApprovalDesc, string Original_CreatedBy, System.DateTime Original_CreatedDate, string Original_LastUpdatedBy, System.DateTime Original_LastUpdatedDate, int Original_ForceApproveOperationsType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TradeFeedID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_BusinessDate));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_ExchangeID));
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ApprovalStatus));
            }
            if ((Original_Message == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Message));
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ApprovalDesc));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_LastUpdatedDate));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ForceApproveOperationsType));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal TradeFeedID, System.DateTime BusinessDate, decimal ExchangeID, string ApprovalStatus, string Message, string ApprovalDesc, string CreatedBy, System.DateTime CreatedDate, string LastUpdatedBy, System.DateTime LastUpdatedDate, int ForceApproveOperationsType) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TradeFeedID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(BusinessDate));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(ExchangeID));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ApprovalStatus));
            }
            if ((Message == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Message));
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ApprovalDesc));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CreatedBy));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(LastUpdatedDate));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(ForceApproveOperationsType));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal TradeFeedID, 
                    System.DateTime BusinessDate, 
                    decimal ExchangeID, 
                    string ApprovalStatus, 
                    string Message, 
                    string ApprovalDesc, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    int ForceApproveOperationsType, 
                    decimal Original_TradeFeedID, 
                    System.DateTime Original_BusinessDate, 
                    decimal Original_ExchangeID, 
                    string Original_ApprovalStatus, 
                    string Original_Message, 
                    string Original_ApprovalDesc, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    int Original_ForceApproveOperationsType) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TradeFeedID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(BusinessDate));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(ExchangeID));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ApprovalStatus));
            }
            if ((Message == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Message));
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ApprovalDesc));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(LastUpdatedDate));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(ForceApproveOperationsType));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_TradeFeedID));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_BusinessDate));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_ExchangeID));
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_ApprovalStatus));
            }
            if ((Original_Message == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Message));
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ApprovalDesc));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_LastUpdatedDate));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_ForceApproveOperationsType));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Message, 
                    string ApprovalDesc, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    int ForceApproveOperationsType, 
                    decimal Original_TradeFeedID, 
                    System.DateTime Original_BusinessDate, 
                    decimal Original_ExchangeID, 
                    string Original_ApprovalStatus, 
                    string Original_Message, 
                    string Original_ApprovalDesc, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    int Original_ForceApproveOperationsType) {
            return this.Update(Original_TradeFeedID, Original_BusinessDate, Original_ExchangeID, Original_ApprovalStatus, Message, ApprovalDesc, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, ForceApproveOperationsType, Original_TradeFeedID, Original_BusinessDate, Original_ExchangeID, Original_ApprovalStatus, Original_Message, Original_ApprovalDesc, Original_CreatedBy, Original_CreatedDate, Original_LastUpdatedBy, Original_LastUpdatedDate, Original_ForceApproveOperationsType);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CommodityTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public CommodityTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Commodity";
            tableMapping.ColumnMappings.Add("ProductID", "ProductID");
            tableMapping.ColumnMappings.Add("ExchangeId", "ExchangeId");
            tableMapping.ColumnMappings.Add("EffectiveStartDate", "EffectiveStartDate");
            tableMapping.ColumnMappings.Add("ApprovalStatus", "ApprovalStatus");
            tableMapping.ColumnMappings.Add("CommodityCode", "CommodityCode");
            tableMapping.ColumnMappings.Add("CommodityID", "CommodityID");
            tableMapping.ColumnMappings.Add("ReffCommID", "ReffCommID");
            tableMapping.ColumnMappings.Add("Unit", "Unit");
            tableMapping.ColumnMappings.Add("PEG", "PEG");
            tableMapping.ColumnMappings.Add("VMIRCACalType", "VMIRCACalType");
            tableMapping.ColumnMappings.Add("CrossCurr", "CrossCurr");
            tableMapping.ColumnMappings.Add("SettlementFactor", "SettlementFactor");
            tableMapping.ColumnMappings.Add("DayRef", "DayRef");
            tableMapping.ColumnMappings.Add("Divisor", "Divisor");
            tableMapping.ColumnMappings.Add("CommName", "CommName");
            tableMapping.ColumnMappings.Add("MarginTender", "MarginTender");
            tableMapping.ColumnMappings.Add("MarginSpot", "MarginSpot");
            tableMapping.ColumnMappings.Add("MarginRemote", "MarginRemote");
            tableMapping.ColumnMappings.Add("CalSpreadRemoteMargin", "CalSpreadRemoteMargin");
            tableMapping.ColumnMappings.Add("CrossCurrProduct", "CrossCurrProduct");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("HomeCurrencyID", "HomeCurrencyID");
            tableMapping.ColumnMappings.Add("LastUpdatedBy", "LastUpdatedBy");
            tableMapping.ColumnMappings.Add("LastUpdatedDate", "LastUpdatedDate");
            tableMapping.ColumnMappings.Add("EffectiveEndDate", "EffectiveEndDate");
            tableMapping.ColumnMappings.Add("ApprovalDesc", "ApprovalDesc");
            tableMapping.ColumnMappings.Add("IsKIE", "IsKIE");
            tableMapping.ColumnMappings.Add("SettlementType", "SettlementType");
            tableMapping.ColumnMappings.Add("ContractSize", "ContractSize");
            tableMapping.ColumnMappings.Add("IsIncentive", "IsIncentive");
            tableMapping.ColumnMappings.Add("OriginalCommodityID", "OriginalCommodityID");
            tableMapping.ColumnMappings.Add("ActionFlag", "ActionFlag");
            tableMapping.ColumnMappings.Add("TenderReqType", "TenderReqType");
            tableMapping.ColumnMappings.Add("ModeK1", "ModeK1");
            tableMapping.ColumnMappings.Add("ValueK1", "ValueK1");
            tableMapping.ColumnMappings.Add("ContractRefK1", "ContractRefK1");
            tableMapping.ColumnMappings.Add("ModeK2", "ModeK2");
            tableMapping.ColumnMappings.Add("ValueK2", "ValueK2");
            tableMapping.ColumnMappings.Add("ContractRefK2", "ContractRefK2");
            tableMapping.ColumnMappings.Add("ModeD", "ModeD");
            tableMapping.ColumnMappings.Add("ValueD", "ValueD");
            tableMapping.ColumnMappings.Add("ContractRefD", "ContractRefD");
            tableMapping.ColumnMappings.Add("ModeIM", "ModeIM");
            tableMapping.ColumnMappings.Add("PercentageSpotIM", "PercentageSpotIM");
            tableMapping.ColumnMappings.Add("PercentageRemoteIM", "PercentageRemoteIM");
            tableMapping.ColumnMappings.Add("ModeFee", "ModeFee");
            tableMapping.ColumnMappings.Add("isMarketMaker", "isMarketMaker");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TradefeedExceptionServices.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ProductID, ExchangeId, EffectiveStartDate, ApprovalStatus, Commodit" +
                "yCode, CommodityID, ISNULL(ReffCommID, 0) AS ReffCommID, ISNULL(Unit, \'\') AS Uni" +
                "t, ISNULL(PEG, 0) AS PEG, ISNULL(VMIRCACalType, \'\') \r\n                         A" +
                "S VMIRCACalType, ISNULL(CrossCurr, \'\') AS CrossCurr, ISNULL(SettlementFactor, \'\'" +
                ") AS SettlementFactor, ISNULL(DayRef, 0) AS DayRef, ISNULL(Divisor, 0) AS Diviso" +
                "r, ISNULL(CommName, \'\') AS CommName, \r\n                         ISNULL(MarginTen" +
                "der, 0) AS MarginTender, ISNULL(MarginSpot, 0) AS MarginSpot, ISNULL(MarginRemot" +
                "e, 0) AS MarginRemote, ISNULL(CalSpreadRemoteMargin, 0) AS CalSpreadRemoteMargin" +
                ", ISNULL(CrossCurrProduct, \'\') \r\n                         AS CrossCurrProduct, I" +
                "SNULL(CreatedBy, \'\') AS CreatedBy, ISNULL(CreatedDate, \'\') AS CreatedDate, ISNUL" +
                "L(HomeCurrencyID, 0) AS HomeCurrencyID, ISNULL(LastUpdatedBy, \'\') AS LastUpdated" +
                "By, ISNULL(LastUpdatedDate, \'\') \r\n                         AS LastUpdatedDate, I" +
                "SNULL(EffectiveEndDate, \'\') AS EffectiveEndDate, ISNULL(ApprovalDesc, \'\') AS App" +
                "rovalDesc, ISNULL(IsKIE, \'\') AS IsKIE, ISNULL(SettlementType, \'\') AS SettlementT" +
                "ype, ISNULL(ContractSize, 0) \r\n                         AS ContractSize, ISNULL(" +
                "IsIncentive, \'\') AS IsIncentive, OriginalCommodityID, ISNULL(ActionFlag, \'\') AS " +
                "ActionFlag, ISNULL(TenderReqType, \'\') AS TenderReqType, ISNULL(ModeK1, \'\') AS Mo" +
                "deK1, ISNULL(ValueK1, 0) \r\n                         AS ValueK1, ISNULL(ContractR" +
                "efK1, 0) AS ContractRefK1, ISNULL(ModeK2, \'\') AS ModeK2, ISNULL(ValueK2, 0) AS V" +
                "alueK2, ISNULL(ContractRefK2, 0) AS ContractRefK2, ISNULL(ModeD, \'\') AS ModeD, I" +
                "SNULL(ValueD, 0) \r\n                         AS ValueD, ISNULL(ContractRefD, 0) A" +
                "S ContractRefD, ISNULL(ModeIM, \'\') AS ModeIM, ISNULL(PercentageSpotIM, 0) AS Per" +
                "centageSpotIM, ISNULL(PercentageRemoteIM, 0) AS PercentageRemoteIM, ISNULL(ModeF" +
                "ee, \'\') \r\n                         AS ModeFee, ISNULL(isMarketMaker, \'\') AS isMa" +
                "rketMaker\r\nFROM            Commodity";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ISNULL(ActionFlag, \'\') AS ActionFlag, ISNULL(ApprovalDesc, \'\') AS Approval" +
                "Desc, ApprovalStatus, ISNULL(CalSpreadRemoteMargin, 0) AS CalSpreadRemoteMargin," +
                " ISNULL(CommName, \'\') AS CommName, CommodityCode, CommodityID, ISNULL(ContractRe" +
                "fD, 0) AS ContractRefD, ISNULL(ContractRefK1, 0) AS ContractRefK1, ISNULL(Contra" +
                "ctRefK2, 0) AS ContractRefK2, ISNULL(ContractSize, 0) AS ContractSize, ISNULL(Cr" +
                "eatedBy, \'\') AS CreatedBy, ISNULL(CreatedDate, \'\') AS CreatedDate, ISNULL(CrossC" +
                "urr, \'\') AS CrossCurr, ISNULL(CrossCurrProduct, \'\') AS CrossCurrProduct, ISNULL(" +
                "DayRef, 0) AS DayRef, ISNULL(Divisor, 0) AS Divisor, ISNULL(EffectiveEndDate, \'\'" +
                ") AS EffectiveEndDate, EffectiveStartDate, ExchangeId, ISNULL(HomeCurrencyID, 0)" +
                " AS HomeCurrencyID, ISNULL(IsIncentive, \'\') AS IsIncentive, ISNULL(IsKIE, \'\') AS" +
                " IsKIE, ISNULL(LastUpdatedBy, \'\') AS LastUpdatedBy, ISNULL(LastUpdatedDate, \'\') " +
                "AS LastUpdatedDate, ISNULL(MarginRemote, 0) AS MarginRemote, ISNULL(MarginSpot, " +
                "0) AS MarginSpot, ISNULL(MarginTender, 0) AS MarginTender, ISNULL(ModeD, \'\') AS " +
                "ModeD, ISNULL(ModeFee, \'\') AS ModeFee, ISNULL(ModeIM, \'\') AS ModeIM, ISNULL(Mode" +
                "K1, \'\') AS ModeK1, ISNULL(ModeK2, \'\') AS ModeK2, OriginalCommodityID, ISNULL(PEG" +
                ", 0) AS PEG, ISNULL(PercentageRemoteIM, 0) AS PercentageRemoteIM, ISNULL(Percent" +
                "ageSpotIM, 0) AS PercentageSpotIM, ProductID, ISNULL(ReffCommID, 0) AS ReffCommI" +
                "D, ISNULL(SettlementFactor, \'\') AS SettlementFactor, ISNULL(SettlementType, \'\') " +
                "AS SettlementType, ISNULL(TenderReqType, \'\') AS TenderReqType, ISNULL(Unit, \'\') " +
                "AS Unit, ISNULL(VMIRCACalType, \'\') AS VMIRCACalType, ISNULL(ValueD, 0) AS ValueD" +
                ", ISNULL(ValueK1, 0) AS ValueK1, ISNULL(ValueK2, 0) AS ValueK2, ISNULL(isMarketM" +
                "aker, \'\') AS isMarketMaker FROM Commodity WHERE (CommodityCode = @code)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@code", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "CommodityCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetProd.CommodityDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetProd.CommodityDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetProd.CommodityDataTable dataTable = new DataSetProd.CommodityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCommodityCode(DataSetProd.CommodityDataTable dataTable, string code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((code == null)) {
                throw new global::System.ArgumentNullException("code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(code));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSetProd.CommodityDataTable GetDataByCommodityCode(string code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((code == null)) {
                throw new global::System.ArgumentNullException("code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(code));
            }
            DataSetProd.CommodityDataTable dataTable = new DataSetProd.CommodityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ContractTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ContractTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Contract";
            tableMapping.ColumnMappings.Add("CommodityID", "CommodityID");
            tableMapping.ColumnMappings.Add("ContractMonth", "ContractMonth");
            tableMapping.ColumnMappings.Add("ContractYear", "ContractYear");
            tableMapping.ColumnMappings.Add("ApprovalStatus", "ApprovalStatus");
            tableMapping.ColumnMappings.Add("EffectiveStartDate", "EffectiveStartDate");
            tableMapping.ColumnMappings.Add("ContractID", "ContractID");
            tableMapping.ColumnMappings.Add("ContractSize", "ContractSize");
            tableMapping.ColumnMappings.Add("SettlementType", "SettlementType");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Unit", "Unit");
            tableMapping.ColumnMappings.Add("StartDate", "StartDate");
            tableMapping.ColumnMappings.Add("EndSpot", "EndSpot");
            tableMapping.ColumnMappings.Add("StartSpot", "StartSpot");
            tableMapping.ColumnMappings.Add("PEG", "PEG");
            tableMapping.ColumnMappings.Add("VMIRCACalType", "VMIRCACalType");
            tableMapping.ColumnMappings.Add("SettlementFactor", "SettlementFactor");
            tableMapping.ColumnMappings.Add("DayRef", "DayRef");
            tableMapping.ColumnMappings.Add("Divisor", "Divisor");
            tableMapping.ColumnMappings.Add("MarginTender", "MarginTender");
            tableMapping.ColumnMappings.Add("MarginSpot", "MarginSpot");
            tableMapping.ColumnMappings.Add("MarginRemote", "MarginRemote");
            tableMapping.ColumnMappings.Add("CalSpreadRemoteMargin", "CalSpreadRemoteMargin");
            tableMapping.ColumnMappings.Add("IsKIE", "IsKIE");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("LastUpdatedBy", "LastUpdatedBy");
            tableMapping.ColumnMappings.Add("LastUpdatedDate", "LastUpdatedDate");
            tableMapping.ColumnMappings.Add("EffectiveEndDate", "EffectiveEndDate");
            tableMapping.ColumnMappings.Add("ApprovalDesc", "ApprovalDesc");
            tableMapping.ColumnMappings.Add("HomeCurrencyID", "HomeCurrencyID");
            tableMapping.ColumnMappings.Add("CrossCurr", "CrossCurr");
            tableMapping.ColumnMappings.Add("CrossCurrProduct", "CrossCurrProduct");
            tableMapping.ColumnMappings.Add("OriginalContractID", "OriginalContractID");
            tableMapping.ColumnMappings.Add("ActionFlag", "ActionFlag");
            tableMapping.ColumnMappings.Add("TenderReqType", "TenderReqType");
            tableMapping.ColumnMappings.Add("SubCategoryID", "SubCategoryID");
            tableMapping.ColumnMappings.Add("ModeK1", "ModeK1");
            tableMapping.ColumnMappings.Add("ValueK1", "ValueK1");
            tableMapping.ColumnMappings.Add("ContractRefK1", "ContractRefK1");
            tableMapping.ColumnMappings.Add("ModeK2", "ModeK2");
            tableMapping.ColumnMappings.Add("ValueK2", "ValueK2");
            tableMapping.ColumnMappings.Add("ContractRefK2", "ContractRefK2");
            tableMapping.ColumnMappings.Add("ModeD", "ModeD");
            tableMapping.ColumnMappings.Add("ValueD", "ValueD");
            tableMapping.ColumnMappings.Add("ContractRefD", "ContractRefD");
            tableMapping.ColumnMappings.Add("ModeIM", "ModeIM");
            tableMapping.ColumnMappings.Add("PercentageSpotIM", "PercentageSpotIM");
            tableMapping.ColumnMappings.Add("PercentageRemoteIM", "PercentageRemoteIM");
            tableMapping.ColumnMappings.Add("ModeFee", "ModeFee");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Contract] WHERE (([CommodityID] = @Original_CommodityID) AND ([Contr" +
                "actMonth] = @Original_ContractMonth) AND ([ContractYear] = @Original_ContractYea" +
                "r) AND ([ApprovalStatus] = @Original_ApprovalStatus) AND ([EffectiveStartDate] =" +
                " @Original_EffectiveStartDate) AND ([ContractID] = @Original_ContractID) AND ([C" +
                "ontractSize] = @Original_ContractSize) AND ([SettlementType] = @Original_Settlem" +
                "entType) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Descripti" +
                "on] = @Original_Description)) AND ([Unit] = @Original_Unit) AND ([StartDate] = @" +
                "Original_StartDate) AND ([EndSpot] = @Original_EndSpot) AND ([StartSpot] = @Orig" +
                "inal_StartSpot) AND ((@IsNull_PEG = 1 AND [PEG] IS NULL) OR ([PEG] = @Original_P" +
                "EG)) AND ((@IsNull_VMIRCACalType = 1 AND [VMIRCACalType] IS NULL) OR ([VMIRCACal" +
                "Type] = @Original_VMIRCACalType)) AND ((@IsNull_SettlementFactor = 1 AND [Settle" +
                "mentFactor] IS NULL) OR ([SettlementFactor] = @Original_SettlementFactor)) AND (" +
                "(@IsNull_DayRef = 1 AND [DayRef] IS NULL) OR ([DayRef] = @Original_DayRef)) AND " +
                "((@IsNull_Divisor = 1 AND [Divisor] IS NULL) OR ([Divisor] = @Original_Divisor))" +
                " AND ((@IsNull_MarginTender = 1 AND [MarginTender] IS NULL) OR ([MarginTender] =" +
                " @Original_MarginTender)) AND ([MarginSpot] = @Original_MarginSpot) AND ([Margin" +
                "Remote] = @Original_MarginRemote) AND ((@IsNull_CalSpreadRemoteMargin = 1 AND [C" +
                "alSpreadRemoteMargin] IS NULL) OR ([CalSpreadRemoteMargin] = @Original_CalSpread" +
                "RemoteMargin)) AND ([IsKIE] = @Original_IsKIE) AND ([CreatedBy] = @Original_Crea" +
                "tedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Origi" +
                "nal_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ((@Is" +
                "Null_EffectiveEndDate = 1 AND [EffectiveEndDate] IS NULL) OR ([EffectiveEndDate]" +
                " = @Original_EffectiveEndDate)) AND ((@IsNull_ApprovalDesc = 1 AND [ApprovalDesc" +
                "] IS NULL) OR ([ApprovalDesc] = @Original_ApprovalDesc)) AND ((@IsNull_HomeCurre" +
                "ncyID = 1 AND [HomeCurrencyID] IS NULL) OR ([HomeCurrencyID] = @Original_HomeCur" +
                "rencyID)) AND ([CrossCurr] = @Original_CrossCurr) AND ((@IsNull_CrossCurrProduct" +
                " = 1 AND [CrossCurrProduct] IS NULL) OR ([CrossCurrProduct] = @Original_CrossCur" +
                "rProduct)) AND ((@IsNull_OriginalContractID = 1 AND [OriginalContractID] IS NULL" +
                ") OR ([OriginalContractID] = @Original_OriginalContractID)) AND ((@IsNull_Action" +
                "Flag = 1 AND [ActionFlag] IS NULL) OR ([ActionFlag] = @Original_ActionFlag)) AND" +
                " ((@IsNull_TenderReqType = 1 AND [TenderReqType] IS NULL) OR ([TenderReqType] = " +
                "@Original_TenderReqType)) AND ((@IsNull_SubCategoryID = 1 AND [SubCategoryID] IS" +
                " NULL) OR ([SubCategoryID] = @Original_SubCategoryID)) AND ((@IsNull_ModeK1 = 1 " +
                "AND [ModeK1] IS NULL) OR ([ModeK1] = @Original_ModeK1)) AND ((@IsNull_ValueK1 = " +
                "1 AND [ValueK1] IS NULL) OR ([ValueK1] = @Original_ValueK1)) AND ((@IsNull_Contr" +
                "actRefK1 = 1 AND [ContractRefK1] IS NULL) OR ([ContractRefK1] = @Original_Contra" +
                "ctRefK1)) AND ((@IsNull_ModeK2 = 1 AND [ModeK2] IS NULL) OR ([ModeK2] = @Origina" +
                "l_ModeK2)) AND ((@IsNull_ValueK2 = 1 AND [ValueK2] IS NULL) OR ([ValueK2] = @Ori" +
                "ginal_ValueK2)) AND ((@IsNull_ContractRefK2 = 1 AND [ContractRefK2] IS NULL) OR " +
                "([ContractRefK2] = @Original_ContractRefK2)) AND ((@IsNull_ModeD = 1 AND [ModeD]" +
                " IS NULL) OR ([ModeD] = @Original_ModeD)) AND ((@IsNull_ValueD = 1 AND [ValueD] " +
                "IS NULL) OR ([ValueD] = @Original_ValueD)) AND ((@IsNull_ContractRefD = 1 AND [C" +
                "ontractRefD] IS NULL) OR ([ContractRefD] = @Original_ContractRefD)) AND ((@IsNul" +
                "l_ModeIM = 1 AND [ModeIM] IS NULL) OR ([ModeIM] = @Original_ModeIM)) AND ((@IsNu" +
                "ll_PercentageSpotIM = 1 AND [PercentageSpotIM] IS NULL) OR ([PercentageSpotIM] =" +
                " @Original_PercentageSpotIM)) AND ((@IsNull_PercentageRemoteIM = 1 AND [Percenta" +
                "geRemoteIM] IS NULL) OR ([PercentageRemoteIM] = @Original_PercentageRemoteIM)) A" +
                "ND ((@IsNull_ModeFee = 1 AND [ModeFee] IS NULL) OR ([ModeFee] = @Original_ModeFe" +
                "e)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommodityID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractSize", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ContractSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SettlementType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndSpot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartSpot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PEG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PEG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PEG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "PEG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VMIRCACalType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VMIRCACalType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VMIRCACalType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VMIRCACalType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SettlementFactor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementFactor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SettlementFactor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementFactor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DayRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DayRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Divisor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Divisor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Divisor", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "Divisor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MarginTender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarginTender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarginTender", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginTender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarginSpot", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginSpot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarginRemote", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginRemote", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CalSpreadRemoteMargin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CalSpreadRemoteMargin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CalSpreadRemoteMargin", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "CalSpreadRemoteMargin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsKIE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKIE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EffectiveEndDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HomeCurrencyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HomeCurrencyID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HomeCurrencyID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HomeCurrencyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrossCurr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CrossCurrProduct", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurrProduct", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrossCurrProduct", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurrProduct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OriginalContractID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalContractID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalContractID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalContractID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActionFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TenderReqType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TenderReqType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TenderReqType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TenderReqType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubCategoryID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubCategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SubCategoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeK1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeK1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueK1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueK1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractRefK1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRefK1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRefK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeK2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeK2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueK2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueK2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractRefK2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRefK2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRefK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractRefD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRefD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRefD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeIM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeIM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeIM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeIM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PercentageSpotIM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PercentageSpotIM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PercentageSpotIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageSpotIM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PercentageRemoteIM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PercentageRemoteIM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PercentageRemoteIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageRemoteIM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeFee", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Contract] ([CommodityID], [ContractMonth], [ContractYear], [Approval" +
                "Status], [EffectiveStartDate], [ContractSize], [SettlementType], [Description], " +
                "[Unit], [StartDate], [EndSpot], [StartSpot], [PEG], [VMIRCACalType], [Settlement" +
                "Factor], [DayRef], [Divisor], [MarginTender], [MarginSpot], [MarginRemote], [Cal" +
                "SpreadRemoteMargin], [IsKIE], [CreatedBy], [CreatedDate], [LastUpdatedBy], [Last" +
                "UpdatedDate], [EffectiveEndDate], [ApprovalDesc], [HomeCurrencyID], [CrossCurr]," +
                " [CrossCurrProduct], [OriginalContractID], [ActionFlag], [TenderReqType], [SubCa" +
                "tegoryID], [ModeK1], [ValueK1], [ContractRefK1], [ModeK2], [ValueK2], [ContractR" +
                "efK2], [ModeD], [ValueD], [ContractRefD], [ModeIM], [PercentageSpotIM], [Percent" +
                "ageRemoteIM], [ModeFee]) VALUES (@CommodityID, @ContractMonth, @ContractYear, @A" +
                "pprovalStatus, @EffectiveStartDate, @ContractSize, @SettlementType, @Description" +
                ", @Unit, @StartDate, @EndSpot, @StartSpot, @PEG, @VMIRCACalType, @SettlementFact" +
                "or, @DayRef, @Divisor, @MarginTender, @MarginSpot, @MarginRemote, @CalSpreadRemo" +
                "teMargin, @IsKIE, @CreatedBy, @CreatedDate, @LastUpdatedBy, @LastUpdatedDate, @E" +
                "ffectiveEndDate, @ApprovalDesc, @HomeCurrencyID, @CrossCurr, @CrossCurrProduct, " +
                "@OriginalContractID, @ActionFlag, @TenderReqType, @SubCategoryID, @ModeK1, @Valu" +
                "eK1, @ContractRefK1, @ModeK2, @ValueK2, @ContractRefK2, @ModeD, @ValueD, @Contra" +
                "ctRefD, @ModeIM, @PercentageSpotIM, @PercentageRemoteIM, @ModeFee);\r\nSELECT Comm" +
                "odityID, ContractMonth, ContractYear, ApprovalStatus, EffectiveStartDate, Contra" +
                "ctID, ContractSize, SettlementType, Description, Unit, StartDate, EndSpot, Start" +
                "Spot, PEG, VMIRCACalType, SettlementFactor, DayRef, Divisor, MarginTender, Margi" +
                "nSpot, MarginRemote, CalSpreadRemoteMargin, IsKIE, CreatedBy, CreatedDate, LastU" +
                "pdatedBy, LastUpdatedDate, EffectiveEndDate, ApprovalDesc, HomeCurrencyID, Cross" +
                "Curr, CrossCurrProduct, OriginalContractID, ActionFlag, TenderReqType, SubCatego" +
                "ryID, ModeK1, ValueK1, ContractRefK1, ModeK2, ValueK2, ContractRefK2, ModeD, Val" +
                "ueD, ContractRefD, ModeIM, PercentageSpotIM, PercentageRemoteIM, ModeFee FROM Co" +
                "ntract WHERE (ApprovalStatus = @ApprovalStatus) AND (CommodityID = @CommodityID)" +
                " AND (ContractMonth = @ContractMonth) AND (ContractYear = @ContractYear) AND (Ef" +
                "fectiveStartDate = @EffectiveStartDate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommodityID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractSize", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ContractSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SettlementType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PEG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "PEG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VMIRCACalType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VMIRCACalType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SettlementFactor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementFactor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DayRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Divisor", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "Divisor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginTender", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginTender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginSpot", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginRemote", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginRemote", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CalSpreadRemoteMargin", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "CalSpreadRemoteMargin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsKIE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKIE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HomeCurrencyID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HomeCurrencyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrossCurr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrossCurrProduct", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurrProduct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalContractID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalContractID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TenderReqType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TenderReqType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubCategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SubCategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeK1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeK2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeIM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PercentageSpotIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageSpotIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PercentageRemoteIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageRemoteIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeFee", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Contract] SET [CommodityID] = @CommodityID, [ContractMonth] = @ContractMo" +
                "nth, [ContractYear] = @ContractYear, [ApprovalStatus] = @ApprovalStatus, [Effect" +
                "iveStartDate] = @EffectiveStartDate, [ContractSize] = @ContractSize, [Settlement" +
                "Type] = @SettlementType, [Description] = @Description, [Unit] = @Unit, [StartDat" +
                "e] = @StartDate, [EndSpot] = @EndSpot, [StartSpot] = @StartSpot, [PEG] = @PEG, [" +
                "VMIRCACalType] = @VMIRCACalType, [SettlementFactor] = @SettlementFactor, [DayRef" +
                "] = @DayRef, [Divisor] = @Divisor, [MarginTender] = @MarginTender, [MarginSpot] " +
                "= @MarginSpot, [MarginRemote] = @MarginRemote, [CalSpreadRemoteMargin] = @CalSpr" +
                "eadRemoteMargin, [IsKIE] = @IsKIE, [CreatedBy] = @CreatedBy, [CreatedDate] = @Cr" +
                "eatedDate, [LastUpdatedBy] = @LastUpdatedBy, [LastUpdatedDate] = @LastUpdatedDat" +
                "e, [EffectiveEndDate] = @EffectiveEndDate, [ApprovalDesc] = @ApprovalDesc, [Home" +
                "CurrencyID] = @HomeCurrencyID, [CrossCurr] = @CrossCurr, [CrossCurrProduct] = @C" +
                "rossCurrProduct, [OriginalContractID] = @OriginalContractID, [ActionFlag] = @Act" +
                "ionFlag, [TenderReqType] = @TenderReqType, [SubCategoryID] = @SubCategoryID, [Mo" +
                "deK1] = @ModeK1, [ValueK1] = @ValueK1, [ContractRefK1] = @ContractRefK1, [ModeK2" +
                "] = @ModeK2, [ValueK2] = @ValueK2, [ContractRefK2] = @ContractRefK2, [ModeD] = @" +
                "ModeD, [ValueD] = @ValueD, [ContractRefD] = @ContractRefD, [ModeIM] = @ModeIM, [" +
                "PercentageSpotIM] = @PercentageSpotIM, [PercentageRemoteIM] = @PercentageRemoteI" +
                "M, [ModeFee] = @ModeFee WHERE (([CommodityID] = @Original_CommodityID) AND ([Con" +
                "tractMonth] = @Original_ContractMonth) AND ([ContractYear] = @Original_ContractY" +
                "ear) AND ([ApprovalStatus] = @Original_ApprovalStatus) AND ([EffectiveStartDate]" +
                " = @Original_EffectiveStartDate) AND ([ContractID] = @Original_ContractID) AND (" +
                "[ContractSize] = @Original_ContractSize) AND ([SettlementType] = @Original_Settl" +
                "ementType) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Descrip" +
                "tion] = @Original_Description)) AND ([Unit] = @Original_Unit) AND ([StartDate] =" +
                " @Original_StartDate) AND ([EndSpot] = @Original_EndSpot) AND ([StartSpot] = @Or" +
                "iginal_StartSpot) AND ((@IsNull_PEG = 1 AND [PEG] IS NULL) OR ([PEG] = @Original" +
                "_PEG)) AND ((@IsNull_VMIRCACalType = 1 AND [VMIRCACalType] IS NULL) OR ([VMIRCAC" +
                "alType] = @Original_VMIRCACalType)) AND ((@IsNull_SettlementFactor = 1 AND [Sett" +
                "lementFactor] IS NULL) OR ([SettlementFactor] = @Original_SettlementFactor)) AND" +
                " ((@IsNull_DayRef = 1 AND [DayRef] IS NULL) OR ([DayRef] = @Original_DayRef)) AN" +
                "D ((@IsNull_Divisor = 1 AND [Divisor] IS NULL) OR ([Divisor] = @Original_Divisor" +
                ")) AND ((@IsNull_MarginTender = 1 AND [MarginTender] IS NULL) OR ([MarginTender]" +
                " = @Original_MarginTender)) AND ([MarginSpot] = @Original_MarginSpot) AND ([Marg" +
                "inRemote] = @Original_MarginRemote) AND ((@IsNull_CalSpreadRemoteMargin = 1 AND " +
                "[CalSpreadRemoteMargin] IS NULL) OR ([CalSpreadRemoteMargin] = @Original_CalSpre" +
                "adRemoteMargin)) AND ([IsKIE] = @Original_IsKIE) AND ([CreatedBy] = @Original_Cr" +
                "eatedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Ori" +
                "ginal_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ((@" +
                "IsNull_EffectiveEndDate = 1 AND [EffectiveEndDate] IS NULL) OR ([EffectiveEndDat" +
                "e] = @Original_EffectiveEndDate)) AND ((@IsNull_ApprovalDesc = 1 AND [ApprovalDe" +
                "sc] IS NULL) OR ([ApprovalDesc] = @Original_ApprovalDesc)) AND ((@IsNull_HomeCur" +
                "rencyID = 1 AND [HomeCurrencyID] IS NULL) OR ([HomeCurrencyID] = @Original_HomeC" +
                "urrencyID)) AND ([CrossCurr] = @Original_CrossCurr) AND ((@IsNull_CrossCurrProdu" +
                "ct = 1 AND [CrossCurrProduct] IS NULL) OR ([CrossCurrProduct] = @Original_CrossC" +
                "urrProduct)) AND ((@IsNull_OriginalContractID = 1 AND [OriginalContractID] IS NU" +
                "LL) OR ([OriginalContractID] = @Original_OriginalContractID)) AND ((@IsNull_Acti" +
                "onFlag = 1 AND [ActionFlag] IS NULL) OR ([ActionFlag] = @Original_ActionFlag)) A" +
                "ND ((@IsNull_TenderReqType = 1 AND [TenderReqType] IS NULL) OR ([TenderReqType] " +
                "= @Original_TenderReqType)) AND ((@IsNull_SubCategoryID = 1 AND [SubCategoryID] " +
                "IS NULL) OR ([SubCategoryID] = @Original_SubCategoryID)) AND ((@IsNull_ModeK1 = " +
                "1 AND [ModeK1] IS NULL) OR ([ModeK1] = @Original_ModeK1)) AND ((@IsNull_ValueK1 " +
                "= 1 AND [ValueK1] IS NULL) OR ([ValueK1] = @Original_ValueK1)) AND ((@IsNull_Con" +
                "tractRefK1 = 1 AND [ContractRefK1] IS NULL) OR ([ContractRefK1] = @Original_Cont" +
                "ractRefK1)) AND ((@IsNull_ModeK2 = 1 AND [ModeK2] IS NULL) OR ([ModeK2] = @Origi" +
                "nal_ModeK2)) AND ((@IsNull_ValueK2 = 1 AND [ValueK2] IS NULL) OR ([ValueK2] = @O" +
                "riginal_ValueK2)) AND ((@IsNull_ContractRefK2 = 1 AND [ContractRefK2] IS NULL) O" +
                "R ([ContractRefK2] = @Original_ContractRefK2)) AND ((@IsNull_ModeD = 1 AND [Mode" +
                "D] IS NULL) OR ([ModeD] = @Original_ModeD)) AND ((@IsNull_ValueD = 1 AND [ValueD" +
                "] IS NULL) OR ([ValueD] = @Original_ValueD)) AND ((@IsNull_ContractRefD = 1 AND " +
                "[ContractRefD] IS NULL) OR ([ContractRefD] = @Original_ContractRefD)) AND ((@IsN" +
                "ull_ModeIM = 1 AND [ModeIM] IS NULL) OR ([ModeIM] = @Original_ModeIM)) AND ((@Is" +
                "Null_PercentageSpotIM = 1 AND [PercentageSpotIM] IS NULL) OR ([PercentageSpotIM]" +
                " = @Original_PercentageSpotIM)) AND ((@IsNull_PercentageRemoteIM = 1 AND [Percen" +
                "tageRemoteIM] IS NULL) OR ([PercentageRemoteIM] = @Original_PercentageRemoteIM))" +
                " AND ((@IsNull_ModeFee = 1 AND [ModeFee] IS NULL) OR ([ModeFee] = @Original_Mode" +
                "Fee)));\r\nSELECT CommodityID, ContractMonth, ContractYear, ApprovalStatus, Effect" +
                "iveStartDate, ContractID, ContractSize, SettlementType, Description, Unit, Start" +
                "Date, EndSpot, StartSpot, PEG, VMIRCACalType, SettlementFactor, DayRef, Divisor," +
                " MarginTender, MarginSpot, MarginRemote, CalSpreadRemoteMargin, IsKIE, CreatedBy" +
                ", CreatedDate, LastUpdatedBy, LastUpdatedDate, EffectiveEndDate, ApprovalDesc, H" +
                "omeCurrencyID, CrossCurr, CrossCurrProduct, OriginalContractID, ActionFlag, Tend" +
                "erReqType, SubCategoryID, ModeK1, ValueK1, ContractRefK1, ModeK2, ValueK2, Contr" +
                "actRefK2, ModeD, ValueD, ContractRefD, ModeIM, PercentageSpotIM, PercentageRemot" +
                "eIM, ModeFee FROM Contract WHERE (ApprovalStatus = @ApprovalStatus) AND (Commodi" +
                "tyID = @CommodityID) AND (ContractMonth = @ContractMonth) AND (ContractYear = @C" +
                "ontractYear) AND (EffectiveStartDate = @EffectiveStartDate)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommodityID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractSize", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ContractSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SettlementType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PEG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "PEG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VMIRCACalType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VMIRCACalType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SettlementFactor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementFactor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DayRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Divisor", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "Divisor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginTender", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginTender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginSpot", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginRemote", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginRemote", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CalSpreadRemoteMargin", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "CalSpreadRemoteMargin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsKIE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKIE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HomeCurrencyID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HomeCurrencyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrossCurr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrossCurrProduct", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurrProduct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalContractID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalContractID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TenderReqType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TenderReqType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubCategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SubCategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeK1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeK2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeIM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PercentageSpotIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageSpotIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PercentageRemoteIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageRemoteIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeFee", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommodityID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalStatus", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractSize", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ContractSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SettlementType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndSpot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartSpot", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartSpot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PEG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PEG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PEG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "PEG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VMIRCACalType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VMIRCACalType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VMIRCACalType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VMIRCACalType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SettlementFactor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementFactor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SettlementFactor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementFactor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DayRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DayRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Divisor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Divisor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Divisor", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "Divisor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MarginTender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarginTender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarginTender", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginTender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarginSpot", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginSpot", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarginRemote", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "MarginRemote", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CalSpreadRemoteMargin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CalSpreadRemoteMargin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CalSpreadRemoteMargin", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "CalSpreadRemoteMargin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsKIE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKIE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EffectiveEndDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ApprovalDesc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ApprovalDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HomeCurrencyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HomeCurrencyID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HomeCurrencyID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HomeCurrencyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrossCurr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CrossCurrProduct", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurrProduct", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrossCurrProduct", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurrProduct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OriginalContractID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalContractID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalContractID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalContractID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActionFlag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActionFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TenderReqType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TenderReqType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TenderReqType", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TenderReqType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubCategoryID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubCategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SubCategoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeK1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeK1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueK1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueK1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractRefK1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRefK1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRefK1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeK2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeK2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueK2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueK2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractRefK2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRefK2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRefK2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValueD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValueD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValueD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 24, 10, "ValueD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractRefD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRefD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRefD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeIM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeIM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeIM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeIM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PercentageSpotIM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PercentageSpotIM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PercentageSpotIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageSpotIM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PercentageRemoteIM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PercentageRemoteIM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PercentageRemoteIM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageRemoteIM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModeFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModeFee", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModeFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TradefeedExceptionServices.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Contract.*\r\nFROM            Contract";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT ActionFlag, ApprovalDesc, ApprovalStatus, CalSpreadRemoteMargin, CommodityID, ContractID, ContractMonth, ContractRefD, ContractRefK1, ContractRefK2, ContractSize, ContractYear, CreatedBy, CreatedDate, CrossCurr, CrossCurrProduct, DayRef, Description, Divisor, EffectiveEndDate, EffectiveStartDate, EndSpot, HomeCurrencyID, IsKIE, LastUpdatedBy, LastUpdatedDate, MarginRemote, MarginSpot, MarginTender, ModeD, ModeFee, ModeIM, ModeK1, ModeK2, OriginalContractID, PEG, PercentageRemoteIM, PercentageSpotIM, SettlementFactor, SettlementType, StartDate, StartSpot, SubCategoryID, TenderReqType, Unit, VMIRCACalType, ValueD, ValueK1, ValueK2 FROM Contract WHERE (CommodityID = @code) AND (ContractYear = @year) AND (ContractMonth = @month)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@code", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@year", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ContractYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@month", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ContractMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        TOP 1 SubCategoryID\r\nFROM            SKD.ContractWHERE(CommodityID " +
                "= @id)\r\nORDER BY ContractID DESC";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetProd.ContractDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetProd.ContractDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetProd.ContractDataTable dataTable = new DataSetProd.ContractDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFilter(DataSetProd.ContractDataTable dataTable, decimal code, int year, int month) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(code));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(year));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(month));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSetProd.ContractDataTable GetDataByFilter(decimal code, int year, int month) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(code));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(year));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(month));
            DataSetProd.ContractDataTable dataTable = new DataSetProd.ContractDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillById(DataSetProd.ContractDataTable dataTable, decimal id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSetProd.ContractDataTable GetDataById(decimal id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(id));
            DataSetProd.ContractDataTable dataTable = new DataSetProd.ContractDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetProd.ContractDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetProd dataSet) {
            return this.Adapter.Update(dataSet, "Contract");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_CommodityID, 
                    int Original_ContractMonth, 
                    int Original_ContractYear, 
                    string Original_ApprovalStatus, 
                    System.DateTime Original_EffectiveStartDate, 
                    decimal Original_ContractID, 
                    decimal Original_ContractSize, 
                    string Original_SettlementType, 
                    string Original_Description, 
                    string Original_Unit, 
                    System.DateTime Original_StartDate, 
                    System.DateTime Original_EndSpot, 
                    System.DateTime Original_StartSpot, 
                    global::System.Nullable<decimal> Original_PEG, 
                    string Original_VMIRCACalType, 
                    string Original_SettlementFactor, 
                    global::System.Nullable<int> Original_DayRef, 
                    global::System.Nullable<decimal> Original_Divisor, 
                    global::System.Nullable<decimal> Original_MarginTender, 
                    decimal Original_MarginSpot, 
                    decimal Original_MarginRemote, 
                    global::System.Nullable<decimal> Original_CalSpreadRemoteMargin, 
                    string Original_IsKIE, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, 
                    string Original_ApprovalDesc, 
                    global::System.Nullable<decimal> Original_HomeCurrencyID, 
                    string Original_CrossCurr, 
                    string Original_CrossCurrProduct, 
                    global::System.Nullable<decimal> Original_OriginalContractID, 
                    string Original_ActionFlag, 
                    string Original_TenderReqType, 
                    global::System.Nullable<decimal> Original_SubCategoryID, 
                    string Original_ModeK1, 
                    global::System.Nullable<decimal> Original_ValueK1, 
                    global::System.Nullable<decimal> Original_ContractRefK1, 
                    string Original_ModeK2, 
                    global::System.Nullable<decimal> Original_ValueK2, 
                    global::System.Nullable<decimal> Original_ContractRefK2, 
                    string Original_ModeD, 
                    global::System.Nullable<decimal> Original_ValueD, 
                    global::System.Nullable<decimal> Original_ContractRefD, 
                    string Original_ModeIM, 
                    global::System.Nullable<decimal> Original_PercentageSpotIM, 
                    global::System.Nullable<decimal> Original_PercentageRemoteIM, 
                    string Original_ModeFee) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_CommodityID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ContractMonth));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ContractYear));
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ApprovalStatus));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_EffectiveStartDate));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_ContractID));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_ContractSize));
            if ((Original_SettlementType == null)) {
                throw new global::System.ArgumentNullException("Original_SettlementType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_SettlementType));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Description));
            }
            if ((Original_Unit == null)) {
                throw new global::System.ArgumentNullException("Original_Unit");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Unit));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_StartDate));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_EndSpot));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_StartSpot));
            if ((Original_PEG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_PEG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_VMIRCACalType == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_VMIRCACalType));
            }
            if ((Original_SettlementFactor == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_SettlementFactor));
            }
            if ((Original_DayRef.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_DayRef.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Divisor.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_Divisor.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_MarginTender.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_MarginTender.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_MarginSpot));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_MarginRemote));
            if ((Original_CalSpreadRemoteMargin.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_CalSpreadRemoteMargin.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_IsKIE == null)) {
                throw new global::System.ArgumentNullException("Original_IsKIE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_IsKIE));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[32].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[34].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_EffectiveEndDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((System.DateTime)(Original_EffectiveEndDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_ApprovalDesc));
            }
            if ((Original_HomeCurrencyID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_HomeCurrencyID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_CrossCurr == null)) {
                throw new global::System.ArgumentNullException("Original_CrossCurr");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_CrossCurr));
            }
            if ((Original_CrossCurrProduct == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_CrossCurrProduct));
            }
            if ((Original_OriginalContractID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((decimal)(Original_OriginalContractID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_ActionFlag == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_ActionFlag));
            }
            if ((Original_TenderReqType == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_TenderReqType));
            }
            if ((Original_SubCategoryID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((decimal)(Original_SubCategoryID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeK1 == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_ModeK1));
            }
            if ((Original_ValueK1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((decimal)(Original_ValueK1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_ContractRefK1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((decimal)(Original_ContractRefK1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeK2 == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_ModeK2));
            }
            if ((Original_ValueK2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((decimal)(Original_ValueK2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_ContractRefK2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((decimal)(Original_ContractRefK2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeD == null)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((string)(Original_ModeD));
            }
            if ((Original_ValueD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((decimal)(Original_ValueD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_ContractRefD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((decimal)(Original_ContractRefD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeIM == null)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_ModeIM));
            }
            if ((Original_PercentageSpotIM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((decimal)(Original_PercentageSpotIM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_PercentageRemoteIM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((decimal)(Original_PercentageRemoteIM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeFee == null)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_ModeFee));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal CommodityID, 
                    int ContractMonth, 
                    int ContractYear, 
                    string ApprovalStatus, 
                    System.DateTime EffectiveStartDate, 
                    decimal ContractSize, 
                    string SettlementType, 
                    string Description, 
                    string Unit, 
                    System.DateTime StartDate, 
                    System.DateTime EndSpot, 
                    System.DateTime StartSpot, 
                    global::System.Nullable<decimal> PEG, 
                    string VMIRCACalType, 
                    string SettlementFactor, 
                    global::System.Nullable<int> DayRef, 
                    global::System.Nullable<decimal> Divisor, 
                    global::System.Nullable<decimal> MarginTender, 
                    decimal MarginSpot, 
                    decimal MarginRemote, 
                    global::System.Nullable<decimal> CalSpreadRemoteMargin, 
                    string IsKIE, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    global::System.Nullable<decimal> HomeCurrencyID, 
                    string CrossCurr, 
                    string CrossCurrProduct, 
                    global::System.Nullable<decimal> OriginalContractID, 
                    string ActionFlag, 
                    string TenderReqType, 
                    global::System.Nullable<decimal> SubCategoryID, 
                    string ModeK1, 
                    global::System.Nullable<decimal> ValueK1, 
                    global::System.Nullable<decimal> ContractRefK1, 
                    string ModeK2, 
                    global::System.Nullable<decimal> ValueK2, 
                    global::System.Nullable<decimal> ContractRefK2, 
                    string ModeD, 
                    global::System.Nullable<decimal> ValueD, 
                    global::System.Nullable<decimal> ContractRefD, 
                    string ModeIM, 
                    global::System.Nullable<decimal> PercentageSpotIM, 
                    global::System.Nullable<decimal> PercentageRemoteIM, 
                    string ModeFee) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(CommodityID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ContractMonth));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ContractYear));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ApprovalStatus));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(EffectiveStartDate));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(ContractSize));
            if ((SettlementType == null)) {
                throw new global::System.ArgumentNullException("SettlementType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SettlementType));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Description));
            }
            if ((Unit == null)) {
                throw new global::System.ArgumentNullException("Unit");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Unit));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(StartDate));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(EndSpot));
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(StartSpot));
            if ((PEG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(PEG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((VMIRCACalType == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(VMIRCACalType));
            }
            if ((SettlementFactor == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(SettlementFactor));
            }
            if ((DayRef.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(DayRef.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Divisor.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(Divisor.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((MarginTender.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(MarginTender.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(MarginSpot));
            this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(MarginRemote));
            if ((CalSpreadRemoteMargin.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(CalSpreadRemoteMargin.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((IsKIE == null)) {
                throw new global::System.ArgumentNullException("IsKIE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(IsKIE));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(CreatedBy));
            }
            this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(LastUpdatedDate));
            if ((EffectiveEndDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(EffectiveEndDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(ApprovalDesc));
            }
            if ((HomeCurrencyID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(HomeCurrencyID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CrossCurr == null)) {
                throw new global::System.ArgumentNullException("CrossCurr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(CrossCurr));
            }
            if ((CrossCurrProduct == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(CrossCurrProduct));
            }
            if ((OriginalContractID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(OriginalContractID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((ActionFlag == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(ActionFlag));
            }
            if ((TenderReqType == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(TenderReqType));
            }
            if ((SubCategoryID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(SubCategoryID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((ModeK1 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(ModeK1));
            }
            if ((ValueK1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(ValueK1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((ContractRefK1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(ContractRefK1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ModeK2 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(ModeK2));
            }
            if ((ValueK2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(ValueK2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ContractRefK2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(ContractRefK2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((ModeD == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(ModeD));
            }
            if ((ValueD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(ValueD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((ContractRefD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(ContractRefD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((ModeIM == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(ModeIM));
            }
            if ((PercentageSpotIM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(PercentageSpotIM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((PercentageRemoteIM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(PercentageRemoteIM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ModeFee == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(ModeFee));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal CommodityID, 
                    int ContractMonth, 
                    int ContractYear, 
                    string ApprovalStatus, 
                    System.DateTime EffectiveStartDate, 
                    decimal ContractSize, 
                    string SettlementType, 
                    string Description, 
                    string Unit, 
                    System.DateTime StartDate, 
                    System.DateTime EndSpot, 
                    System.DateTime StartSpot, 
                    global::System.Nullable<decimal> PEG, 
                    string VMIRCACalType, 
                    string SettlementFactor, 
                    global::System.Nullable<int> DayRef, 
                    global::System.Nullable<decimal> Divisor, 
                    global::System.Nullable<decimal> MarginTender, 
                    decimal MarginSpot, 
                    decimal MarginRemote, 
                    global::System.Nullable<decimal> CalSpreadRemoteMargin, 
                    string IsKIE, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    global::System.Nullable<decimal> HomeCurrencyID, 
                    string CrossCurr, 
                    string CrossCurrProduct, 
                    global::System.Nullable<decimal> OriginalContractID, 
                    string ActionFlag, 
                    string TenderReqType, 
                    global::System.Nullable<decimal> SubCategoryID, 
                    string ModeK1, 
                    global::System.Nullable<decimal> ValueK1, 
                    global::System.Nullable<decimal> ContractRefK1, 
                    string ModeK2, 
                    global::System.Nullable<decimal> ValueK2, 
                    global::System.Nullable<decimal> ContractRefK2, 
                    string ModeD, 
                    global::System.Nullable<decimal> ValueD, 
                    global::System.Nullable<decimal> ContractRefD, 
                    string ModeIM, 
                    global::System.Nullable<decimal> PercentageSpotIM, 
                    global::System.Nullable<decimal> PercentageRemoteIM, 
                    string ModeFee, 
                    decimal Original_CommodityID, 
                    int Original_ContractMonth, 
                    int Original_ContractYear, 
                    string Original_ApprovalStatus, 
                    System.DateTime Original_EffectiveStartDate, 
                    decimal Original_ContractID, 
                    decimal Original_ContractSize, 
                    string Original_SettlementType, 
                    string Original_Description, 
                    string Original_Unit, 
                    System.DateTime Original_StartDate, 
                    System.DateTime Original_EndSpot, 
                    System.DateTime Original_StartSpot, 
                    global::System.Nullable<decimal> Original_PEG, 
                    string Original_VMIRCACalType, 
                    string Original_SettlementFactor, 
                    global::System.Nullable<int> Original_DayRef, 
                    global::System.Nullable<decimal> Original_Divisor, 
                    global::System.Nullable<decimal> Original_MarginTender, 
                    decimal Original_MarginSpot, 
                    decimal Original_MarginRemote, 
                    global::System.Nullable<decimal> Original_CalSpreadRemoteMargin, 
                    string Original_IsKIE, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, 
                    string Original_ApprovalDesc, 
                    global::System.Nullable<decimal> Original_HomeCurrencyID, 
                    string Original_CrossCurr, 
                    string Original_CrossCurrProduct, 
                    global::System.Nullable<decimal> Original_OriginalContractID, 
                    string Original_ActionFlag, 
                    string Original_TenderReqType, 
                    global::System.Nullable<decimal> Original_SubCategoryID, 
                    string Original_ModeK1, 
                    global::System.Nullable<decimal> Original_ValueK1, 
                    global::System.Nullable<decimal> Original_ContractRefK1, 
                    string Original_ModeK2, 
                    global::System.Nullable<decimal> Original_ValueK2, 
                    global::System.Nullable<decimal> Original_ContractRefK2, 
                    string Original_ModeD, 
                    global::System.Nullable<decimal> Original_ValueD, 
                    global::System.Nullable<decimal> Original_ContractRefD, 
                    string Original_ModeIM, 
                    global::System.Nullable<decimal> Original_PercentageSpotIM, 
                    global::System.Nullable<decimal> Original_PercentageRemoteIM, 
                    string Original_ModeFee) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(CommodityID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ContractMonth));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ContractYear));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ApprovalStatus));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(EffectiveStartDate));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(ContractSize));
            if ((SettlementType == null)) {
                throw new global::System.ArgumentNullException("SettlementType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SettlementType));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Description));
            }
            if ((Unit == null)) {
                throw new global::System.ArgumentNullException("Unit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Unit));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(StartDate));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(EndSpot));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(StartSpot));
            if ((PEG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(PEG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((VMIRCACalType == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(VMIRCACalType));
            }
            if ((SettlementFactor == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(SettlementFactor));
            }
            if ((DayRef.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(DayRef.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Divisor.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Divisor.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((MarginTender.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(MarginTender.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(MarginSpot));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(MarginRemote));
            if ((CalSpreadRemoteMargin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(CalSpreadRemoteMargin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((IsKIE == null)) {
                throw new global::System.ArgumentNullException("IsKIE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(IsKIE));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(LastUpdatedDate));
            if ((EffectiveEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(EffectiveEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(ApprovalDesc));
            }
            if ((HomeCurrencyID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(HomeCurrencyID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CrossCurr == null)) {
                throw new global::System.ArgumentNullException("CrossCurr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(CrossCurr));
            }
            if ((CrossCurrProduct == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(CrossCurrProduct));
            }
            if ((OriginalContractID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(OriginalContractID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((ActionFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(ActionFlag));
            }
            if ((TenderReqType == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(TenderReqType));
            }
            if ((SubCategoryID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(SubCategoryID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((ModeK1 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(ModeK1));
            }
            if ((ValueK1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(ValueK1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((ContractRefK1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(ContractRefK1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ModeK2 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(ModeK2));
            }
            if ((ValueK2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(ValueK2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ContractRefK2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(ContractRefK2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((ModeD == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(ModeD));
            }
            if ((ValueD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(ValueD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((ContractRefD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(ContractRefD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((ModeIM == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(ModeIM));
            }
            if ((PercentageSpotIM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(PercentageSpotIM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((PercentageRemoteIM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(PercentageRemoteIM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ModeFee == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(ModeFee));
            }
            this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(Original_CommodityID));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_ContractMonth));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_ContractYear));
            if ((Original_ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("Original_ApprovalStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_ApprovalStatus));
            }
            this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(Original_EffectiveStartDate));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(Original_ContractID));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(Original_ContractSize));
            if ((Original_SettlementType == null)) {
                throw new global::System.ArgumentNullException("Original_SettlementType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_SettlementType));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_Description));
            }
            if ((Original_Unit == null)) {
                throw new global::System.ArgumentNullException("Original_Unit");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_Unit));
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((System.DateTime)(Original_StartDate));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTime)(Original_EndSpot));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_StartSpot));
            if ((Original_PEG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(Original_PEG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_VMIRCACalType == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_VMIRCACalType));
            }
            if ((Original_SettlementFactor == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_SettlementFactor));
            }
            if ((Original_DayRef.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(Original_DayRef.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_Divisor.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((decimal)(Original_Divisor.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_MarginTender.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((decimal)(Original_MarginTender.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(Original_MarginSpot));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(Original_MarginRemote));
            if ((Original_CalSpreadRemoteMargin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(Original_CalSpreadRemoteMargin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_IsKIE == null)) {
                throw new global::System.ArgumentNullException("Original_IsKIE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_IsKIE));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[82].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_EffectiveEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((System.DateTime)(Original_EffectiveEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_ApprovalDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_ApprovalDesc));
            }
            if ((Original_HomeCurrencyID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((decimal)(Original_HomeCurrencyID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_CrossCurr == null)) {
                throw new global::System.ArgumentNullException("Original_CrossCurr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_CrossCurr));
            }
            if ((Original_CrossCurrProduct == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_CrossCurrProduct));
            }
            if ((Original_OriginalContractID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((decimal)(Original_OriginalContractID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_ActionFlag == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_ActionFlag));
            }
            if ((Original_TenderReqType == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_TenderReqType));
            }
            if ((Original_SubCategoryID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((decimal)(Original_SubCategoryID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeK1 == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_ModeK1));
            }
            if ((Original_ValueK1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((decimal)(Original_ValueK1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_ContractRefK1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((decimal)(Original_ContractRefK1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeK2 == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_ModeK2));
            }
            if ((Original_ValueK2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((decimal)(Original_ValueK2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_ContractRefK2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((decimal)(Original_ContractRefK2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeD == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_ModeD));
            }
            if ((Original_ValueD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((decimal)(Original_ValueD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_ContractRefD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((decimal)(Original_ContractRefD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeIM == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Original_ModeIM));
            }
            if ((Original_PercentageSpotIM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((decimal)(Original_PercentageSpotIM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_PercentageRemoteIM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((decimal)(Original_PercentageRemoteIM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_ModeFee == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_ModeFee));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ContractSize, 
                    string SettlementType, 
                    string Description, 
                    string Unit, 
                    System.DateTime StartDate, 
                    System.DateTime EndSpot, 
                    System.DateTime StartSpot, 
                    global::System.Nullable<decimal> PEG, 
                    string VMIRCACalType, 
                    string SettlementFactor, 
                    global::System.Nullable<int> DayRef, 
                    global::System.Nullable<decimal> Divisor, 
                    global::System.Nullable<decimal> MarginTender, 
                    decimal MarginSpot, 
                    decimal MarginRemote, 
                    global::System.Nullable<decimal> CalSpreadRemoteMargin, 
                    string IsKIE, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    global::System.Nullable<decimal> HomeCurrencyID, 
                    string CrossCurr, 
                    string CrossCurrProduct, 
                    global::System.Nullable<decimal> OriginalContractID, 
                    string ActionFlag, 
                    string TenderReqType, 
                    global::System.Nullable<decimal> SubCategoryID, 
                    string ModeK1, 
                    global::System.Nullable<decimal> ValueK1, 
                    global::System.Nullable<decimal> ContractRefK1, 
                    string ModeK2, 
                    global::System.Nullable<decimal> ValueK2, 
                    global::System.Nullable<decimal> ContractRefK2, 
                    string ModeD, 
                    global::System.Nullable<decimal> ValueD, 
                    global::System.Nullable<decimal> ContractRefD, 
                    string ModeIM, 
                    global::System.Nullable<decimal> PercentageSpotIM, 
                    global::System.Nullable<decimal> PercentageRemoteIM, 
                    string ModeFee, 
                    decimal Original_CommodityID, 
                    int Original_ContractMonth, 
                    int Original_ContractYear, 
                    string Original_ApprovalStatus, 
                    System.DateTime Original_EffectiveStartDate, 
                    decimal Original_ContractID, 
                    decimal Original_ContractSize, 
                    string Original_SettlementType, 
                    string Original_Description, 
                    string Original_Unit, 
                    System.DateTime Original_StartDate, 
                    System.DateTime Original_EndSpot, 
                    System.DateTime Original_StartSpot, 
                    global::System.Nullable<decimal> Original_PEG, 
                    string Original_VMIRCACalType, 
                    string Original_SettlementFactor, 
                    global::System.Nullable<int> Original_DayRef, 
                    global::System.Nullable<decimal> Original_Divisor, 
                    global::System.Nullable<decimal> Original_MarginTender, 
                    decimal Original_MarginSpot, 
                    decimal Original_MarginRemote, 
                    global::System.Nullable<decimal> Original_CalSpreadRemoteMargin, 
                    string Original_IsKIE, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> Original_EffectiveEndDate, 
                    string Original_ApprovalDesc, 
                    global::System.Nullable<decimal> Original_HomeCurrencyID, 
                    string Original_CrossCurr, 
                    string Original_CrossCurrProduct, 
                    global::System.Nullable<decimal> Original_OriginalContractID, 
                    string Original_ActionFlag, 
                    string Original_TenderReqType, 
                    global::System.Nullable<decimal> Original_SubCategoryID, 
                    string Original_ModeK1, 
                    global::System.Nullable<decimal> Original_ValueK1, 
                    global::System.Nullable<decimal> Original_ContractRefK1, 
                    string Original_ModeK2, 
                    global::System.Nullable<decimal> Original_ValueK2, 
                    global::System.Nullable<decimal> Original_ContractRefK2, 
                    string Original_ModeD, 
                    global::System.Nullable<decimal> Original_ValueD, 
                    global::System.Nullable<decimal> Original_ContractRefD, 
                    string Original_ModeIM, 
                    global::System.Nullable<decimal> Original_PercentageSpotIM, 
                    global::System.Nullable<decimal> Original_PercentageRemoteIM, 
                    string Original_ModeFee) {
            return this.Update(Original_CommodityID, Original_ContractMonth, Original_ContractYear, Original_ApprovalStatus, Original_EffectiveStartDate, ContractSize, SettlementType, Description, Unit, StartDate, EndSpot, StartSpot, PEG, VMIRCACalType, SettlementFactor, DayRef, Divisor, MarginTender, MarginSpot, MarginRemote, CalSpreadRemoteMargin, IsKIE, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, EffectiveEndDate, ApprovalDesc, HomeCurrencyID, CrossCurr, CrossCurrProduct, OriginalContractID, ActionFlag, TenderReqType, SubCategoryID, ModeK1, ValueK1, ContractRefK1, ModeK2, ValueK2, ContractRefK2, ModeD, ValueD, ContractRefD, ModeIM, PercentageSpotIM, PercentageRemoteIM, ModeFee, Original_CommodityID, Original_ContractMonth, Original_ContractYear, Original_ApprovalStatus, Original_EffectiveStartDate, Original_ContractID, Original_ContractSize, Original_SettlementType, Original_Description, Original_Unit, Original_StartDate, Original_EndSpot, Original_StartSpot, Original_PEG, Original_VMIRCACalType, Original_SettlementFactor, Original_DayRef, Original_Divisor, Original_MarginTender, Original_MarginSpot, Original_MarginRemote, Original_CalSpreadRemoteMargin, Original_IsKIE, Original_CreatedBy, Original_CreatedDate, Original_LastUpdatedBy, Original_LastUpdatedDate, Original_EffectiveEndDate, Original_ApprovalDesc, Original_HomeCurrencyID, Original_CrossCurr, Original_CrossCurrProduct, Original_OriginalContractID, Original_ActionFlag, Original_TenderReqType, Original_SubCategoryID, Original_ModeK1, Original_ValueK1, Original_ContractRefK1, Original_ModeK2, Original_ValueK2, Original_ContractRefK2, Original_ModeD, Original_ValueD, Original_ContractRefD, Original_ModeIM, Original_PercentageSpotIM, Original_PercentageRemoteIM, Original_ModeFee);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SubCategoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public SubCategoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SubCategory";
            tableMapping.ColumnMappings.Add("SubCategoryCode", "SubCategoryCode");
            tableMapping.ColumnMappings.Add("SubCategoryID", "SubCategoryID");
            tableMapping.ColumnMappings.Add("CategoryID", "CategoryID");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("LastUpdatedBy", "LastUpdatedBy");
            tableMapping.ColumnMappings.Add("LastUpdatedDate", "LastUpdatedDate");
            tableMapping.ColumnMappings.Add("ActiveFlag", "ActiveFlag");
            tableMapping.ColumnMappings.Add("AllowPriceIncrePct", "AllowPriceIncrePct");
            tableMapping.ColumnMappings.Add("AllowPriceDecrePct", "AllowPriceDecrePct");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [SubCategory] WHERE (([SubCategoryCode] = @Original_SubCategoryCode) AND ([SubCategoryID] = @Original_SubCategoryID) AND ([CategoryID] = @Original_CategoryID) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Original_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ([ActiveFlag] = @Original_ActiveFlag) AND ([AllowPriceIncrePct] = @Original_AllowPriceIncrePct) AND ([AllowPriceDecrePct] = @Original_AllowPriceDecrePct))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubCategoryCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubCategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SubCategoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CategoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActiveFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowPriceIncrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceIncrePct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowPriceDecrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceDecrePct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SubCategory] ([SubCategoryCode], [CategoryID], [Description], [CreatedBy], [CreatedDate], [LastUpdatedBy], [LastUpdatedDate], [ActiveFlag], [AllowPriceIncrePct], [AllowPriceDecrePct]) VALUES (@SubCategoryCode, @CategoryID, @Description, @CreatedBy, @CreatedDate, @LastUpdatedBy, @LastUpdatedDate, @ActiveFlag, @AllowPriceIncrePct, @AllowPriceDecrePct);
SELECT SubCategoryCode, SubCategoryID, CategoryID, Description, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, ActiveFlag, AllowPriceIncrePct, AllowPriceDecrePct FROM SubCategory WHERE (SubCategoryCode = @SubCategoryCode)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubCategoryCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActiveFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowPriceIncrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceIncrePct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowPriceDecrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceDecrePct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [SubCategory] SET [SubCategoryCode] = @SubCategoryCode, [CategoryID] = @CategoryID, [Description] = @Description, [CreatedBy] = @CreatedBy, [CreatedDate] = @CreatedDate, [LastUpdatedBy] = @LastUpdatedBy, [LastUpdatedDate] = @LastUpdatedDate, [ActiveFlag] = @ActiveFlag, [AllowPriceIncrePct] = @AllowPriceIncrePct, [AllowPriceDecrePct] = @AllowPriceDecrePct WHERE (([SubCategoryCode] = @Original_SubCategoryCode) AND ([SubCategoryID] = @Original_SubCategoryID) AND ([CategoryID] = @Original_CategoryID) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedDate] = @Original_CreatedDate) AND ([LastUpdatedBy] = @Original_LastUpdatedBy) AND ([LastUpdatedDate] = @Original_LastUpdatedDate) AND ([ActiveFlag] = @Original_ActiveFlag) AND ([AllowPriceIncrePct] = @Original_AllowPriceIncrePct) AND ([AllowPriceDecrePct] = @Original_AllowPriceDecrePct));
SELECT SubCategoryCode, SubCategoryID, CategoryID, Description, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, ActiveFlag, AllowPriceIncrePct, AllowPriceDecrePct FROM SubCategory WHERE (SubCategoryCode = @SubCategoryCode)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubCategoryCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActiveFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowPriceIncrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceIncrePct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowPriceDecrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceDecrePct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubCategoryCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubCategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "SubCategoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CategoryID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CategoryID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActiveFlag", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActiveFlag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowPriceIncrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceIncrePct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowPriceDecrePct", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "AllowPriceDecrePct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TradefeedExceptionServices.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        SubCategory.*\r\nFROM            SubCategory";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ActiveFlag, AllowPriceDecrePct, AllowPriceIncrePct, CategoryID, CreatedBy," +
                " CreatedDate, Description, LastUpdatedBy, LastUpdatedDate, SubCategoryCode, SubC" +
                "ategoryID FROM SubCategory WHERE (SubCategoryCode = @code)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@code", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "SubCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetProd.SubCategoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetProd.SubCategoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetProd.SubCategoryDataTable dataTable = new DataSetProd.SubCategoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCode(DataSetProd.SubCategoryDataTable dataTable, string code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((code == null)) {
                throw new global::System.ArgumentNullException("code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(code));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSetProd.SubCategoryDataTable GetDataByCode(string code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((code == null)) {
                throw new global::System.ArgumentNullException("code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(code));
            }
            DataSetProd.SubCategoryDataTable dataTable = new DataSetProd.SubCategoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetProd.SubCategoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetProd dataSet) {
            return this.Adapter.Update(dataSet, "SubCategory");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SubCategoryCode, decimal Original_SubCategoryID, decimal Original_CategoryID, string Original_Description, string Original_CreatedBy, System.DateTime Original_CreatedDate, string Original_LastUpdatedBy, System.DateTime Original_LastUpdatedDate, string Original_ActiveFlag, decimal Original_AllowPriceIncrePct, decimal Original_AllowPriceDecrePct) {
            if ((Original_SubCategoryCode == null)) {
                throw new global::System.ArgumentNullException("Original_SubCategoryCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SubCategoryCode));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_SubCategoryID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_CategoryID));
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Description));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_ActiveFlag == null)) {
                throw new global::System.ArgumentNullException("Original_ActiveFlag");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ActiveFlag));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_AllowPriceIncrePct));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_AllowPriceDecrePct));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SubCategoryCode, decimal CategoryID, string Description, string CreatedBy, System.DateTime CreatedDate, string LastUpdatedBy, System.DateTime LastUpdatedDate, string ActiveFlag, decimal AllowPriceIncrePct, decimal AllowPriceDecrePct) {
            if ((SubCategoryCode == null)) {
                throw new global::System.ArgumentNullException("SubCategoryCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SubCategoryCode));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(CategoryID));
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Description));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CreatedBy));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(LastUpdatedDate));
            if ((ActiveFlag == null)) {
                throw new global::System.ArgumentNullException("ActiveFlag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ActiveFlag));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(AllowPriceIncrePct));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(AllowPriceDecrePct));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SubCategoryCode, 
                    decimal CategoryID, 
                    string Description, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    string ActiveFlag, 
                    decimal AllowPriceIncrePct, 
                    decimal AllowPriceDecrePct, 
                    string Original_SubCategoryCode, 
                    decimal Original_SubCategoryID, 
                    decimal Original_CategoryID, 
                    string Original_Description, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    string Original_ActiveFlag, 
                    decimal Original_AllowPriceIncrePct, 
                    decimal Original_AllowPriceDecrePct) {
            if ((SubCategoryCode == null)) {
                throw new global::System.ArgumentNullException("SubCategoryCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SubCategoryCode));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(CategoryID));
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Description));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(LastUpdatedDate));
            if ((ActiveFlag == null)) {
                throw new global::System.ArgumentNullException("ActiveFlag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ActiveFlag));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(AllowPriceIncrePct));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(AllowPriceDecrePct));
            if ((Original_SubCategoryCode == null)) {
                throw new global::System.ArgumentNullException("Original_SubCategoryCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_SubCategoryCode));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_SubCategoryID));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_CategoryID));
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Description));
            }
            if ((Original_CreatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_CreatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_CreatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_CreatedDate));
            if ((Original_LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("Original_LastUpdatedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_LastUpdatedBy));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_LastUpdatedDate));
            if ((Original_ActiveFlag == null)) {
                throw new global::System.ArgumentNullException("Original_ActiveFlag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_ActiveFlag));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_AllowPriceIncrePct));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_AllowPriceDecrePct));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal CategoryID, 
                    string Description, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    string ActiveFlag, 
                    decimal AllowPriceIncrePct, 
                    decimal AllowPriceDecrePct, 
                    string Original_SubCategoryCode, 
                    decimal Original_SubCategoryID, 
                    decimal Original_CategoryID, 
                    string Original_Description, 
                    string Original_CreatedBy, 
                    System.DateTime Original_CreatedDate, 
                    string Original_LastUpdatedBy, 
                    System.DateTime Original_LastUpdatedDate, 
                    string Original_ActiveFlag, 
                    decimal Original_AllowPriceIncrePct, 
                    decimal Original_AllowPriceDecrePct) {
            return this.Update(Original_SubCategoryCode, CategoryID, Description, CreatedBy, CreatedDate, LastUpdatedBy, LastUpdatedDate, ActiveFlag, AllowPriceIncrePct, AllowPriceDecrePct, Original_SubCategoryCode, Original_SubCategoryID, Original_CategoryID, Original_Description, Original_CreatedBy, Original_CreatedDate, Original_LastUpdatedBy, Original_LastUpdatedDate, Original_ActiveFlag, Original_AllowPriceIncrePct, Original_AllowPriceDecrePct);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Get_Tradefeed_ExceptionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Get_Tradefeed_ExceptionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Get_Tradefeed_Exception";
            tableMapping.ColumnMappings.Add("CommodityCode", "CommodityCode");
            tableMapping.ColumnMappings.Add("Contract_Year", "Contract_Year");
            tableMapping.ColumnMappings.Add("Contract_Month", "Contract_Month");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TradefeedExceptionServices.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SKD.Get_Tradefeed_Exception";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tgl", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetProd.Get_Tradefeed_ExceptionDataTable dataTable, global::System.Nullable<global::System.DateTime> tgl) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((tgl.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(tgl.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetProd.Get_Tradefeed_ExceptionDataTable GetData(global::System.Nullable<global::System.DateTime> tgl) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((tgl.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(tgl.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetProd.Get_Tradefeed_ExceptionDataTable dataTable = new DataSetProd.Get_Tradefeed_ExceptionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Whatsapp_parameterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Whatsapp_parameterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Whatsapp_parameter";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("parameter", "parameter");
            tableMapping.ColumnMappings.Add("keterangan", "keterangan");
            tableMapping.ColumnMappings.Add("created_by", "created_by");
            tableMapping.ColumnMappings.Add("created_date", "created_date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Whatsapp_parameter] WHERE (([id] = @Original_id) AND ((@IsNull_parameter = 1 AND [parameter] IS NULL) OR ([parameter] = @Original_parameter)) AND ((@IsNull_keterangan = 1 AND [keterangan] IS NULL) OR ([keterangan] = @Original_keterangan)) AND ((@IsNull_created_by = 1 AND [created_by] IS NULL) OR ([created_by] = @Original_created_by)) AND ((@IsNull_created_date = 1 AND [created_date] IS NULL) OR ([created_date] = @Original_created_date)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parameter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parameter", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_keterangan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "keterangan", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_keterangan", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "keterangan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_created_by", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_by", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_created_by", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_created_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_created_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Whatsapp_parameter] ([parameter], [keterangan], [created_by], [created_date]) VALUES (@parameter, @keterangan, @created_by, @created_date);
SELECT id, parameter, keterangan, created_by, created_date FROM Whatsapp_parameter WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parameter", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@keterangan", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "keterangan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@created_by", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@created_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Whatsapp_parameter] SET [parameter] = @parameter, [keterangan] = @keterangan, [created_by] = @created_by, [created_date] = @created_date WHERE (([id] = @Original_id) AND ((@IsNull_parameter = 1 AND [parameter] IS NULL) OR ([parameter] = @Original_parameter)) AND ((@IsNull_keterangan = 1 AND [keterangan] IS NULL) OR ([keterangan] = @Original_keterangan)) AND ((@IsNull_created_by = 1 AND [created_by] IS NULL) OR ([created_by] = @Original_created_by)) AND ((@IsNull_created_date = 1 AND [created_date] IS NULL) OR ([created_date] = @Original_created_date)));
SELECT id, parameter, keterangan, created_by, created_date FROM Whatsapp_parameter WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parameter", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@keterangan", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "keterangan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@created_by", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_by", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@created_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parameter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parameter", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_keterangan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "keterangan", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_keterangan", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "keterangan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_created_by", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_by", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_created_by", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_by", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_created_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_created_date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TradefeedExceptionServices.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Whatsapp_parameter.*\r\nFROM            Whatsapp_parameter";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT created_by, created_date, id, keterangan, parameter FROM Whatsapp_paramete" +
                "r WHERE (id = @id)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetProd.Whatsapp_parameterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetProd.Whatsapp_parameterDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetProd.Whatsapp_parameterDataTable dataTable = new DataSetProd.Whatsapp_parameterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillById(DataSetProd.Whatsapp_parameterDataTable dataTable, int id) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSetProd.Whatsapp_parameterDataTable GetDataById(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            DataSetProd.Whatsapp_parameterDataTable dataTable = new DataSetProd.Whatsapp_parameterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetProd.Whatsapp_parameterDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetProd dataSet) {
            return this.Adapter.Update(dataSet, "Whatsapp_parameter");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_parameter, string Original_keterangan, string Original_created_by, global::System.Nullable<global::System.DateTime> Original_created_date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_parameter == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_parameter));
            }
            if ((Original_keterangan == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_keterangan));
            }
            if ((Original_created_by == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_created_by));
            }
            if ((Original_created_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_created_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string parameter, string keterangan, string created_by, global::System.Nullable<global::System.DateTime> created_date) {
            if ((parameter == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(parameter));
            }
            if ((keterangan == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(keterangan));
            }
            if ((created_by == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(created_by));
            }
            if ((created_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(created_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string parameter, string keterangan, string created_by, global::System.Nullable<global::System.DateTime> created_date, int Original_id, string Original_parameter, string Original_keterangan, string Original_created_by, global::System.Nullable<global::System.DateTime> Original_created_date, int id) {
            if ((parameter == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(parameter));
            }
            if ((keterangan == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(keterangan));
            }
            if ((created_by == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(created_by));
            }
            if ((created_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(created_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_id));
            if ((Original_parameter == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_parameter));
            }
            if ((Original_keterangan == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_keterangan));
            }
            if ((Original_created_by == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_created_by));
            }
            if ((Original_created_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_created_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string parameter, string keterangan, string created_by, global::System.Nullable<global::System.DateTime> created_date, int Original_id, string Original_parameter, string Original_keterangan, string Original_created_by, global::System.Nullable<global::System.DateTime> Original_created_date) {
            return this.Update(parameter, keterangan, created_by, created_date, Original_id, Original_parameter, Original_keterangan, Original_created_by, Original_created_date, Original_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class uspTradeFeedExceptionApproveAllTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public uspTradeFeedExceptionApproveAllTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TradefeedExceptionServices.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SKD.uspTradeFeedExceptionApproveAll";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@exchangeId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bussDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approvalStatus", global::System.Data.SqlDbType.Char, 1, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approvalDesc", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@approverUserName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetProd.uspTradeFeedExceptionApproveAllDataTable dataTable, global::System.Nullable<int> exchangeId, global::System.Nullable<global::System.DateTime> bussDate, string approvalStatus, string approvalDesc, string approverUserName) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((exchangeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(exchangeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((bussDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(bussDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((approvalStatus == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(approvalStatus));
            }
            if ((approvalDesc == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(approvalDesc));
            }
            if ((approverUserName == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(approverUserName));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetProd.uspTradeFeedExceptionApproveAllDataTable GetData(global::System.Nullable<int> exchangeId, global::System.Nullable<global::System.DateTime> bussDate, string approvalStatus, string approvalDesc, string approverUserName) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((exchangeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(exchangeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((bussDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(bussDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((approvalStatus == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(approvalStatus));
            }
            if ((approvalDesc == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(approvalDesc));
            }
            if ((approverUserName == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(approverUserName));
            }
            DataSetProd.uspTradeFeedExceptionApproveAllDataTable dataTable = new DataSetProd.uspTradeFeedExceptionApproveAllDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TradefeedExceptionTableAdapter _tradefeedExceptionTableAdapter;
        
        private ContractTableAdapter _contractTableAdapter;
        
        private SubCategoryTableAdapter _subCategoryTableAdapter;
        
        private Whatsapp_parameterTableAdapter _whatsapp_parameterTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TradefeedExceptionTableAdapter TradefeedExceptionTableAdapter {
            get {
                return this._tradefeedExceptionTableAdapter;
            }
            set {
                this._tradefeedExceptionTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ContractTableAdapter ContractTableAdapter {
            get {
                return this._contractTableAdapter;
            }
            set {
                this._contractTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SubCategoryTableAdapter SubCategoryTableAdapter {
            get {
                return this._subCategoryTableAdapter;
            }
            set {
                this._subCategoryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Whatsapp_parameterTableAdapter Whatsapp_parameterTableAdapter {
            get {
                return this._whatsapp_parameterTableAdapter;
            }
            set {
                this._whatsapp_parameterTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tradefeedExceptionTableAdapter != null) 
                            && (this._tradefeedExceptionTableAdapter.Connection != null))) {
                    return this._tradefeedExceptionTableAdapter.Connection;
                }
                if (((this._contractTableAdapter != null) 
                            && (this._contractTableAdapter.Connection != null))) {
                    return this._contractTableAdapter.Connection;
                }
                if (((this._subCategoryTableAdapter != null) 
                            && (this._subCategoryTableAdapter.Connection != null))) {
                    return this._subCategoryTableAdapter.Connection;
                }
                if (((this._whatsapp_parameterTableAdapter != null) 
                            && (this._whatsapp_parameterTableAdapter.Connection != null))) {
                    return this._whatsapp_parameterTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tradefeedExceptionTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._contractTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._subCategoryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._whatsapp_parameterTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(DataSetProd dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tradefeedExceptionTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TradefeedException.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tradefeedExceptionTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._contractTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Contract.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._contractTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._subCategoryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SubCategory.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._subCategoryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._whatsapp_parameterTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Whatsapp_parameter.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._whatsapp_parameterTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(DataSetProd dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tradefeedExceptionTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TradefeedException.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tradefeedExceptionTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._contractTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Contract.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._contractTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._subCategoryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SubCategory.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._subCategoryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._whatsapp_parameterTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Whatsapp_parameter.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._whatsapp_parameterTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(DataSetProd dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._whatsapp_parameterTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Whatsapp_parameter.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._whatsapp_parameterTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._subCategoryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SubCategory.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._subCategoryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._contractTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Contract.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._contractTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tradefeedExceptionTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TradefeedException.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tradefeedExceptionTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(DataSetProd dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tradefeedExceptionTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tradefeedExceptionTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._contractTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._contractTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._subCategoryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._subCategoryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._whatsapp_parameterTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._whatsapp_parameterTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tradefeedExceptionTableAdapter != null)) {
                    revertConnections.Add(this._tradefeedExceptionTableAdapter, this._tradefeedExceptionTableAdapter.Connection);
                    this._tradefeedExceptionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tradefeedExceptionTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tradefeedExceptionTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tradefeedExceptionTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tradefeedExceptionTableAdapter.Adapter);
                    }
                }
                if ((this._contractTableAdapter != null)) {
                    revertConnections.Add(this._contractTableAdapter, this._contractTableAdapter.Connection);
                    this._contractTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._contractTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._contractTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._contractTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._contractTableAdapter.Adapter);
                    }
                }
                if ((this._subCategoryTableAdapter != null)) {
                    revertConnections.Add(this._subCategoryTableAdapter, this._subCategoryTableAdapter.Connection);
                    this._subCategoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._subCategoryTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._subCategoryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._subCategoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._subCategoryTableAdapter.Adapter);
                    }
                }
                if ((this._whatsapp_parameterTableAdapter != null)) {
                    revertConnections.Add(this._whatsapp_parameterTableAdapter, this._whatsapp_parameterTableAdapter.Connection);
                    this._whatsapp_parameterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._whatsapp_parameterTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._whatsapp_parameterTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._whatsapp_parameterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._whatsapp_parameterTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tradefeedExceptionTableAdapter != null)) {
                    this._tradefeedExceptionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tradefeedExceptionTableAdapter]));
                    this._tradefeedExceptionTableAdapter.Transaction = null;
                }
                if ((this._contractTableAdapter != null)) {
                    this._contractTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._contractTableAdapter]));
                    this._contractTableAdapter.Transaction = null;
                }
                if ((this._subCategoryTableAdapter != null)) {
                    this._subCategoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._subCategoryTableAdapter]));
                    this._subCategoryTableAdapter.Transaction = null;
                }
                if ((this._whatsapp_parameterTableAdapter != null)) {
                    this._whatsapp_parameterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._whatsapp_parameterTableAdapter]));
                    this._whatsapp_parameterTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591