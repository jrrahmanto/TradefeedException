//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ConsoleTradefeedException {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetDev")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetDev : global::System.Data.DataSet {
        
        private ContractDataTable tableContract;
        
        private Get_Tradefeed_ExceptionDataTable tableGet_Tradefeed_Exception;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public DataSetDev() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected DataSetDev(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Contract"] != null)) {
                    base.Tables.Add(new ContractDataTable(ds.Tables["Contract"]));
                }
                if ((ds.Tables["Get_Tradefeed_Exception"] != null)) {
                    base.Tables.Add(new Get_Tradefeed_ExceptionDataTable(ds.Tables["Get_Tradefeed_Exception"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContractDataTable Contract {
            get {
                return this.tableContract;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Get_Tradefeed_ExceptionDataTable Get_Tradefeed_Exception {
            get {
                return this.tableGet_Tradefeed_Exception;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetDev cln = ((DataSetDev)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Contract"] != null)) {
                    base.Tables.Add(new ContractDataTable(ds.Tables["Contract"]));
                }
                if ((ds.Tables["Get_Tradefeed_Exception"] != null)) {
                    base.Tables.Add(new Get_Tradefeed_ExceptionDataTable(ds.Tables["Get_Tradefeed_Exception"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableContract = ((ContractDataTable)(base.Tables["Contract"]));
            if ((initTable == true)) {
                if ((this.tableContract != null)) {
                    this.tableContract.InitVars();
                }
            }
            this.tableGet_Tradefeed_Exception = ((Get_Tradefeed_ExceptionDataTable)(base.Tables["Get_Tradefeed_Exception"]));
            if ((initTable == true)) {
                if ((this.tableGet_Tradefeed_Exception != null)) {
                    this.tableGet_Tradefeed_Exception.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetDev";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetDev.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableContract = new ContractDataTable();
            base.Tables.Add(this.tableContract);
            this.tableGet_Tradefeed_Exception = new Get_Tradefeed_ExceptionDataTable();
            base.Tables.Add(this.tableGet_Tradefeed_Exception);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeContract() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeGet_Tradefeed_Exception() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetDev ds = new DataSetDev();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ContractRowChangeEventHandler(object sender, ContractRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void Get_Tradefeed_ExceptionRowChangeEventHandler(object sender, Get_Tradefeed_ExceptionRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ContractDataTable : global::System.Data.TypedTableBase<ContractRow> {
            
            private global::System.Data.DataColumn columnSubCategoryID;
            
            private global::System.Data.DataColumn columnCommodityID;
            
            private global::System.Data.DataColumn columnContractMonth;
            
            private global::System.Data.DataColumn columnContractYear;
            
            private global::System.Data.DataColumn columnApprovalStatus;
            
            private global::System.Data.DataColumn columnEffectiveStartDate;
            
            private global::System.Data.DataColumn columnContractID;
            
            private global::System.Data.DataColumn columnContractSize;
            
            private global::System.Data.DataColumn columnSettlementType;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndSpot;
            
            private global::System.Data.DataColumn columnStartSpot;
            
            private global::System.Data.DataColumn columnPEG;
            
            private global::System.Data.DataColumn columnVMIRCACalType;
            
            private global::System.Data.DataColumn columnSettlementFactor;
            
            private global::System.Data.DataColumn columnDayRef;
            
            private global::System.Data.DataColumn columnDivisor;
            
            private global::System.Data.DataColumn columnMarginTender;
            
            private global::System.Data.DataColumn columnMarginSpot;
            
            private global::System.Data.DataColumn columnMarginRemote;
            
            private global::System.Data.DataColumn columnCalSpreadRemoteMargin;
            
            private global::System.Data.DataColumn columnIsKIE;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedDate;
            
            private global::System.Data.DataColumn columnEffectiveEndDate;
            
            private global::System.Data.DataColumn columnApprovalDesc;
            
            private global::System.Data.DataColumn columnHomeCurrencyID;
            
            private global::System.Data.DataColumn columnCrossCurr;
            
            private global::System.Data.DataColumn columnCrossCurrProduct;
            
            private global::System.Data.DataColumn columnOriginalContractID;
            
            private global::System.Data.DataColumn columnActionFlag;
            
            private global::System.Data.DataColumn columnTenderReqType;
            
            private global::System.Data.DataColumn columnModeK1;
            
            private global::System.Data.DataColumn columnValueK1;
            
            private global::System.Data.DataColumn columnContractRefK1;
            
            private global::System.Data.DataColumn columnModeK2;
            
            private global::System.Data.DataColumn columnValueK2;
            
            private global::System.Data.DataColumn columnContractRefK2;
            
            private global::System.Data.DataColumn columnModeD;
            
            private global::System.Data.DataColumn columnValueD;
            
            private global::System.Data.DataColumn columnContractRefD;
            
            private global::System.Data.DataColumn columnModeIM;
            
            private global::System.Data.DataColumn columnPercentageSpotIM;
            
            private global::System.Data.DataColumn columnPercentageRemoteIM;
            
            private global::System.Data.DataColumn columnModeFee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractDataTable() {
                this.TableName = "Contract";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ContractDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ContractDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SubCategoryIDColumn {
                get {
                    return this.columnSubCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommodityIDColumn {
                get {
                    return this.columnCommodityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractMonthColumn {
                get {
                    return this.columnContractMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractYearColumn {
                get {
                    return this.columnContractYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalStatusColumn {
                get {
                    return this.columnApprovalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveStartDateColumn {
                get {
                    return this.columnEffectiveStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractIDColumn {
                get {
                    return this.columnContractID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractSizeColumn {
                get {
                    return this.columnContractSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SettlementTypeColumn {
                get {
                    return this.columnSettlementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EndSpotColumn {
                get {
                    return this.columnEndSpot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StartSpotColumn {
                get {
                    return this.columnStartSpot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PEGColumn {
                get {
                    return this.columnPEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VMIRCACalTypeColumn {
                get {
                    return this.columnVMIRCACalType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SettlementFactorColumn {
                get {
                    return this.columnSettlementFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DayRefColumn {
                get {
                    return this.columnDayRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DivisorColumn {
                get {
                    return this.columnDivisor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginTenderColumn {
                get {
                    return this.columnMarginTender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginSpotColumn {
                get {
                    return this.columnMarginSpot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarginRemoteColumn {
                get {
                    return this.columnMarginRemote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CalSpreadRemoteMarginColumn {
                get {
                    return this.columnCalSpreadRemoteMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsKIEColumn {
                get {
                    return this.columnIsKIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedDateColumn {
                get {
                    return this.columnLastUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EffectiveEndDateColumn {
                get {
                    return this.columnEffectiveEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ApprovalDescColumn {
                get {
                    return this.columnApprovalDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HomeCurrencyIDColumn {
                get {
                    return this.columnHomeCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CrossCurrColumn {
                get {
                    return this.columnCrossCurr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CrossCurrProductColumn {
                get {
                    return this.columnCrossCurrProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OriginalContractIDColumn {
                get {
                    return this.columnOriginalContractID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActionFlagColumn {
                get {
                    return this.columnActionFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TenderReqTypeColumn {
                get {
                    return this.columnTenderReqType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeK1Column {
                get {
                    return this.columnModeK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueK1Column {
                get {
                    return this.columnValueK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefK1Column {
                get {
                    return this.columnContractRefK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeK2Column {
                get {
                    return this.columnModeK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueK2Column {
                get {
                    return this.columnValueK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefK2Column {
                get {
                    return this.columnContractRefK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeDColumn {
                get {
                    return this.columnModeD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValueDColumn {
                get {
                    return this.columnValueD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContractRefDColumn {
                get {
                    return this.columnContractRefD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeIMColumn {
                get {
                    return this.columnModeIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PercentageSpotIMColumn {
                get {
                    return this.columnPercentageSpotIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PercentageRemoteIMColumn {
                get {
                    return this.columnPercentageRemoteIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModeFeeColumn {
                get {
                    return this.columnModeFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow this[int index] {
                get {
                    return ((ContractRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ContractRowChangeEventHandler ContractRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ContractRowChangeEventHandler ContractRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ContractRowChangeEventHandler ContractRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ContractRowChangeEventHandler ContractRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddContractRow(ContractRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow AddContractRow(
                        decimal SubCategoryID, 
                        decimal CommodityID, 
                        int ContractMonth, 
                        int ContractYear, 
                        string ApprovalStatus, 
                        System.DateTime EffectiveStartDate, 
                        decimal ContractSize, 
                        string SettlementType, 
                        string Description, 
                        string Unit, 
                        System.DateTime StartDate, 
                        System.DateTime EndSpot, 
                        System.DateTime StartSpot, 
                        decimal PEG, 
                        string VMIRCACalType, 
                        string SettlementFactor, 
                        int DayRef, 
                        decimal Divisor, 
                        decimal MarginTender, 
                        decimal MarginSpot, 
                        decimal MarginRemote, 
                        decimal CalSpreadRemoteMargin, 
                        string IsKIE, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string LastUpdatedBy, 
                        System.DateTime LastUpdatedDate, 
                        System.DateTime EffectiveEndDate, 
                        string ApprovalDesc, 
                        decimal HomeCurrencyID, 
                        string CrossCurr, 
                        string CrossCurrProduct, 
                        decimal OriginalContractID, 
                        string ActionFlag, 
                        string TenderReqType, 
                        string ModeK1, 
                        decimal ValueK1, 
                        decimal ContractRefK1, 
                        string ModeK2, 
                        decimal ValueK2, 
                        decimal ContractRefK2, 
                        string ModeD, 
                        decimal ValueD, 
                        decimal ContractRefD, 
                        string ModeIM, 
                        decimal PercentageSpotIM, 
                        decimal PercentageRemoteIM, 
                        string ModeFee) {
                ContractRow rowContractRow = ((ContractRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SubCategoryID,
                        CommodityID,
                        ContractMonth,
                        ContractYear,
                        ApprovalStatus,
                        EffectiveStartDate,
                        null,
                        ContractSize,
                        SettlementType,
                        Description,
                        Unit,
                        StartDate,
                        EndSpot,
                        StartSpot,
                        PEG,
                        VMIRCACalType,
                        SettlementFactor,
                        DayRef,
                        Divisor,
                        MarginTender,
                        MarginSpot,
                        MarginRemote,
                        CalSpreadRemoteMargin,
                        IsKIE,
                        CreatedBy,
                        CreatedDate,
                        LastUpdatedBy,
                        LastUpdatedDate,
                        EffectiveEndDate,
                        ApprovalDesc,
                        HomeCurrencyID,
                        CrossCurr,
                        CrossCurrProduct,
                        OriginalContractID,
                        ActionFlag,
                        TenderReqType,
                        ModeK1,
                        ValueK1,
                        ContractRefK1,
                        ModeK2,
                        ValueK2,
                        ContractRefK2,
                        ModeD,
                        ValueD,
                        ContractRefD,
                        ModeIM,
                        PercentageSpotIM,
                        PercentageRemoteIM,
                        ModeFee};
                rowContractRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowContractRow);
                return rowContractRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow FindByCommodityIDContractMonthContractYearApprovalStatusEffectiveStartDate(decimal CommodityID, int ContractMonth, int ContractYear, string ApprovalStatus, System.DateTime EffectiveStartDate) {
                return ((ContractRow)(this.Rows.Find(new object[] {
                            CommodityID,
                            ContractMonth,
                            ContractYear,
                            ApprovalStatus,
                            EffectiveStartDate})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ContractDataTable cln = ((ContractDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ContractDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnSubCategoryID = base.Columns["SubCategoryID"];
                this.columnCommodityID = base.Columns["CommodityID"];
                this.columnContractMonth = base.Columns["ContractMonth"];
                this.columnContractYear = base.Columns["ContractYear"];
                this.columnApprovalStatus = base.Columns["ApprovalStatus"];
                this.columnEffectiveStartDate = base.Columns["EffectiveStartDate"];
                this.columnContractID = base.Columns["ContractID"];
                this.columnContractSize = base.Columns["ContractSize"];
                this.columnSettlementType = base.Columns["SettlementType"];
                this.columnDescription = base.Columns["Description"];
                this.columnUnit = base.Columns["Unit"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndSpot = base.Columns["EndSpot"];
                this.columnStartSpot = base.Columns["StartSpot"];
                this.columnPEG = base.Columns["PEG"];
                this.columnVMIRCACalType = base.Columns["VMIRCACalType"];
                this.columnSettlementFactor = base.Columns["SettlementFactor"];
                this.columnDayRef = base.Columns["DayRef"];
                this.columnDivisor = base.Columns["Divisor"];
                this.columnMarginTender = base.Columns["MarginTender"];
                this.columnMarginSpot = base.Columns["MarginSpot"];
                this.columnMarginRemote = base.Columns["MarginRemote"];
                this.columnCalSpreadRemoteMargin = base.Columns["CalSpreadRemoteMargin"];
                this.columnIsKIE = base.Columns["IsKIE"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedDate = base.Columns["LastUpdatedDate"];
                this.columnEffectiveEndDate = base.Columns["EffectiveEndDate"];
                this.columnApprovalDesc = base.Columns["ApprovalDesc"];
                this.columnHomeCurrencyID = base.Columns["HomeCurrencyID"];
                this.columnCrossCurr = base.Columns["CrossCurr"];
                this.columnCrossCurrProduct = base.Columns["CrossCurrProduct"];
                this.columnOriginalContractID = base.Columns["OriginalContractID"];
                this.columnActionFlag = base.Columns["ActionFlag"];
                this.columnTenderReqType = base.Columns["TenderReqType"];
                this.columnModeK1 = base.Columns["ModeK1"];
                this.columnValueK1 = base.Columns["ValueK1"];
                this.columnContractRefK1 = base.Columns["ContractRefK1"];
                this.columnModeK2 = base.Columns["ModeK2"];
                this.columnValueK2 = base.Columns["ValueK2"];
                this.columnContractRefK2 = base.Columns["ContractRefK2"];
                this.columnModeD = base.Columns["ModeD"];
                this.columnValueD = base.Columns["ValueD"];
                this.columnContractRefD = base.Columns["ContractRefD"];
                this.columnModeIM = base.Columns["ModeIM"];
                this.columnPercentageSpotIM = base.Columns["PercentageSpotIM"];
                this.columnPercentageRemoteIM = base.Columns["PercentageRemoteIM"];
                this.columnModeFee = base.Columns["ModeFee"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnSubCategoryID = new global::System.Data.DataColumn("SubCategoryID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCategoryID);
                this.columnCommodityID = new global::System.Data.DataColumn("CommodityID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityID);
                this.columnContractMonth = new global::System.Data.DataColumn("ContractMonth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractMonth);
                this.columnContractYear = new global::System.Data.DataColumn("ContractYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractYear);
                this.columnApprovalStatus = new global::System.Data.DataColumn("ApprovalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalStatus);
                this.columnEffectiveStartDate = new global::System.Data.DataColumn("EffectiveStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveStartDate);
                this.columnContractID = new global::System.Data.DataColumn("ContractID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractID);
                this.columnContractSize = new global::System.Data.DataColumn("ContractSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractSize);
                this.columnSettlementType = new global::System.Data.DataColumn("SettlementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettlementType);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndSpot = new global::System.Data.DataColumn("EndSpot", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndSpot);
                this.columnStartSpot = new global::System.Data.DataColumn("StartSpot", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartSpot);
                this.columnPEG = new global::System.Data.DataColumn("PEG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPEG);
                this.columnVMIRCACalType = new global::System.Data.DataColumn("VMIRCACalType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVMIRCACalType);
                this.columnSettlementFactor = new global::System.Data.DataColumn("SettlementFactor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettlementFactor);
                this.columnDayRef = new global::System.Data.DataColumn("DayRef", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayRef);
                this.columnDivisor = new global::System.Data.DataColumn("Divisor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivisor);
                this.columnMarginTender = new global::System.Data.DataColumn("MarginTender", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginTender);
                this.columnMarginSpot = new global::System.Data.DataColumn("MarginSpot", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginSpot);
                this.columnMarginRemote = new global::System.Data.DataColumn("MarginRemote", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginRemote);
                this.columnCalSpreadRemoteMargin = new global::System.Data.DataColumn("CalSpreadRemoteMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalSpreadRemoteMargin);
                this.columnIsKIE = new global::System.Data.DataColumn("IsKIE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsKIE);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedDate = new global::System.Data.DataColumn("LastUpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedDate);
                this.columnEffectiveEndDate = new global::System.Data.DataColumn("EffectiveEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveEndDate);
                this.columnApprovalDesc = new global::System.Data.DataColumn("ApprovalDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovalDesc);
                this.columnHomeCurrencyID = new global::System.Data.DataColumn("HomeCurrencyID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomeCurrencyID);
                this.columnCrossCurr = new global::System.Data.DataColumn("CrossCurr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrossCurr);
                this.columnCrossCurrProduct = new global::System.Data.DataColumn("CrossCurrProduct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrossCurrProduct);
                this.columnOriginalContractID = new global::System.Data.DataColumn("OriginalContractID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalContractID);
                this.columnActionFlag = new global::System.Data.DataColumn("ActionFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActionFlag);
                this.columnTenderReqType = new global::System.Data.DataColumn("TenderReqType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenderReqType);
                this.columnModeK1 = new global::System.Data.DataColumn("ModeK1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeK1);
                this.columnValueK1 = new global::System.Data.DataColumn("ValueK1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueK1);
                this.columnContractRefK1 = new global::System.Data.DataColumn("ContractRefK1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefK1);
                this.columnModeK2 = new global::System.Data.DataColumn("ModeK2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeK2);
                this.columnValueK2 = new global::System.Data.DataColumn("ValueK2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueK2);
                this.columnContractRefK2 = new global::System.Data.DataColumn("ContractRefK2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefK2);
                this.columnModeD = new global::System.Data.DataColumn("ModeD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeD);
                this.columnValueD = new global::System.Data.DataColumn("ValueD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueD);
                this.columnContractRefD = new global::System.Data.DataColumn("ContractRefD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRefD);
                this.columnModeIM = new global::System.Data.DataColumn("ModeIM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeIM);
                this.columnPercentageSpotIM = new global::System.Data.DataColumn("PercentageSpotIM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageSpotIM);
                this.columnPercentageRemoteIM = new global::System.Data.DataColumn("PercentageRemoteIM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageRemoteIM);
                this.columnModeFee = new global::System.Data.DataColumn("ModeFee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeFee);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCommodityID,
                                this.columnContractMonth,
                                this.columnContractYear,
                                this.columnApprovalStatus,
                                this.columnEffectiveStartDate}, true));
                this.columnCommodityID.AllowDBNull = false;
                this.columnContractMonth.AllowDBNull = false;
                this.columnContractYear.AllowDBNull = false;
                this.columnApprovalStatus.AllowDBNull = false;
                this.columnApprovalStatus.MaxLength = 1;
                this.columnEffectiveStartDate.AllowDBNull = false;
                this.columnContractID.AutoIncrement = true;
                this.columnContractID.AutoIncrementSeed = -1;
                this.columnContractID.AutoIncrementStep = -1;
                this.columnContractID.AllowDBNull = false;
                this.columnContractID.ReadOnly = true;
                this.columnContractSize.AllowDBNull = false;
                this.columnSettlementType.AllowDBNull = false;
                this.columnSettlementType.MaxLength = 1;
                this.columnDescription.MaxLength = 500;
                this.columnUnit.AllowDBNull = false;
                this.columnUnit.MaxLength = 20;
                this.columnStartDate.AllowDBNull = false;
                this.columnEndSpot.AllowDBNull = false;
                this.columnStartSpot.AllowDBNull = false;
                this.columnVMIRCACalType.MaxLength = 1;
                this.columnSettlementFactor.MaxLength = 20;
                this.columnMarginSpot.AllowDBNull = false;
                this.columnMarginRemote.AllowDBNull = false;
                this.columnIsKIE.AllowDBNull = false;
                this.columnIsKIE.MaxLength = 1;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 50;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnLastUpdatedBy.AllowDBNull = false;
                this.columnLastUpdatedBy.MaxLength = 50;
                this.columnLastUpdatedDate.AllowDBNull = false;
                this.columnApprovalDesc.MaxLength = 100;
                this.columnCrossCurr.AllowDBNull = false;
                this.columnCrossCurr.MaxLength = 3;
                this.columnCrossCurrProduct.MaxLength = 3;
                this.columnActionFlag.MaxLength = 1;
                this.columnTenderReqType.MaxLength = 1;
                this.columnModeK1.MaxLength = 3;
                this.columnModeK2.MaxLength = 3;
                this.columnModeD.MaxLength = 3;
                this.columnModeIM.MaxLength = 3;
                this.columnModeFee.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow NewContractRow() {
                return ((ContractRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ContractRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ContractRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContractRowChanged != null)) {
                    this.ContractRowChanged(this, new ContractRowChangeEvent(((ContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContractRowChanging != null)) {
                    this.ContractRowChanging(this, new ContractRowChangeEvent(((ContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContractRowDeleted != null)) {
                    this.ContractRowDeleted(this, new ContractRowChangeEvent(((ContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContractRowDeleting != null)) {
                    this.ContractRowDeleting(this, new ContractRowChangeEvent(((ContractRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveContractRow(ContractRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetDev ds = new DataSetDev();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ContractDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Get_Tradefeed_ExceptionDataTable : global::System.Data.TypedTableBase<Get_Tradefeed_ExceptionRow> {
            
            private global::System.Data.DataColumn columnCommodityCode;
            
            private global::System.Data.DataColumn columnContract_Year;
            
            private global::System.Data.DataColumn columnContract_Month;
            
            private global::System.Data.DataColumn columnExchangeID;
            
            private global::System.Data.DataColumn columnBusinessDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionDataTable() {
                this.TableName = "Get_Tradefeed_Exception";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Get_Tradefeed_ExceptionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected Get_Tradefeed_ExceptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommodityCodeColumn {
                get {
                    return this.columnCommodityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Contract_YearColumn {
                get {
                    return this.columnContract_Year;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Contract_MonthColumn {
                get {
                    return this.columnContract_Month;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ExchangeIDColumn {
                get {
                    return this.columnExchangeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BusinessDateColumn {
                get {
                    return this.columnBusinessDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRow this[int index] {
                get {
                    return ((Get_Tradefeed_ExceptionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Get_Tradefeed_ExceptionRowChangeEventHandler Get_Tradefeed_ExceptionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Get_Tradefeed_ExceptionRowChangeEventHandler Get_Tradefeed_ExceptionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Get_Tradefeed_ExceptionRowChangeEventHandler Get_Tradefeed_ExceptionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Get_Tradefeed_ExceptionRowChangeEventHandler Get_Tradefeed_ExceptionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddGet_Tradefeed_ExceptionRow(Get_Tradefeed_ExceptionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRow AddGet_Tradefeed_ExceptionRow(string CommodityCode, string Contract_Year, string Contract_Month, decimal ExchangeID, System.DateTime BusinessDate) {
                Get_Tradefeed_ExceptionRow rowGet_Tradefeed_ExceptionRow = ((Get_Tradefeed_ExceptionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CommodityCode,
                        Contract_Year,
                        Contract_Month,
                        ExchangeID,
                        BusinessDate};
                rowGet_Tradefeed_ExceptionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGet_Tradefeed_ExceptionRow);
                return rowGet_Tradefeed_ExceptionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Get_Tradefeed_ExceptionDataTable cln = ((Get_Tradefeed_ExceptionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Get_Tradefeed_ExceptionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCommodityCode = base.Columns["CommodityCode"];
                this.columnContract_Year = base.Columns["Contract_Year"];
                this.columnContract_Month = base.Columns["Contract_Month"];
                this.columnExchangeID = base.Columns["ExchangeID"];
                this.columnBusinessDate = base.Columns["BusinessDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCommodityCode = new global::System.Data.DataColumn("CommodityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityCode);
                this.columnContract_Year = new global::System.Data.DataColumn("Contract_Year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract_Year);
                this.columnContract_Month = new global::System.Data.DataColumn("Contract_Month", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract_Month);
                this.columnExchangeID = new global::System.Data.DataColumn("ExchangeID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeID);
                this.columnBusinessDate = new global::System.Data.DataColumn("BusinessDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessDate);
                this.columnCommodityCode.ReadOnly = true;
                this.columnCommodityCode.MaxLength = 8000;
                this.columnContract_Year.ReadOnly = true;
                this.columnContract_Year.MaxLength = 4;
                this.columnContract_Month.ReadOnly = true;
                this.columnContract_Month.MaxLength = 2;
                this.columnExchangeID.AllowDBNull = false;
                this.columnBusinessDate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRow NewGet_Tradefeed_ExceptionRow() {
                return ((Get_Tradefeed_ExceptionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Get_Tradefeed_ExceptionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Get_Tradefeed_ExceptionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Get_Tradefeed_ExceptionRowChanged != null)) {
                    this.Get_Tradefeed_ExceptionRowChanged(this, new Get_Tradefeed_ExceptionRowChangeEvent(((Get_Tradefeed_ExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Get_Tradefeed_ExceptionRowChanging != null)) {
                    this.Get_Tradefeed_ExceptionRowChanging(this, new Get_Tradefeed_ExceptionRowChangeEvent(((Get_Tradefeed_ExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Get_Tradefeed_ExceptionRowDeleted != null)) {
                    this.Get_Tradefeed_ExceptionRowDeleted(this, new Get_Tradefeed_ExceptionRowChangeEvent(((Get_Tradefeed_ExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Get_Tradefeed_ExceptionRowDeleting != null)) {
                    this.Get_Tradefeed_ExceptionRowDeleting(this, new Get_Tradefeed_ExceptionRowChangeEvent(((Get_Tradefeed_ExceptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveGet_Tradefeed_ExceptionRow(Get_Tradefeed_ExceptionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetDev ds = new DataSetDev();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Get_Tradefeed_ExceptionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ContractRow : global::System.Data.DataRow {
            
            private ContractDataTable tableContract;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ContractRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableContract = ((ContractDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SubCategoryID {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.SubCategoryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubCategoryID\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.SubCategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CommodityID {
                get {
                    return ((decimal)(this[this.tableContract.CommodityIDColumn]));
                }
                set {
                    this[this.tableContract.CommodityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ContractMonth {
                get {
                    return ((int)(this[this.tableContract.ContractMonthColumn]));
                }
                set {
                    this[this.tableContract.ContractMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ContractYear {
                get {
                    return ((int)(this[this.tableContract.ContractYearColumn]));
                }
                set {
                    this[this.tableContract.ContractYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalStatus {
                get {
                    return ((string)(this[this.tableContract.ApprovalStatusColumn]));
                }
                set {
                    this[this.tableContract.ApprovalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveStartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.EffectiveStartDateColumn]));
                }
                set {
                    this[this.tableContract.EffectiveStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractID {
                get {
                    return ((decimal)(this[this.tableContract.ContractIDColumn]));
                }
                set {
                    this[this.tableContract.ContractIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractSize {
                get {
                    return ((decimal)(this[this.tableContract.ContractSizeColumn]));
                }
                set {
                    this[this.tableContract.ContractSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SettlementType {
                get {
                    return ((string)(this[this.tableContract.SettlementTypeColumn]));
                }
                set {
                    this[this.tableContract.SettlementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableContract.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Unit {
                get {
                    return ((string)(this[this.tableContract.UnitColumn]));
                }
                set {
                    this[this.tableContract.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime StartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.StartDateColumn]));
                }
                set {
                    this[this.tableContract.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EndSpot {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.EndSpotColumn]));
                }
                set {
                    this[this.tableContract.EndSpotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime StartSpot {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.StartSpotColumn]));
                }
                set {
                    this[this.tableContract.StartSpotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PEG {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.PEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PEG\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.PEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string VMIRCACalType {
                get {
                    try {
                        return ((string)(this[this.tableContract.VMIRCACalTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VMIRCACalType\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.VMIRCACalTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SettlementFactor {
                get {
                    try {
                        return ((string)(this[this.tableContract.SettlementFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SettlementFactor\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.SettlementFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DayRef {
                get {
                    try {
                        return ((int)(this[this.tableContract.DayRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayRef\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.DayRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Divisor {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.DivisorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Divisor\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.DivisorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginTender {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.MarginTenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarginTender\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.MarginTenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginSpot {
                get {
                    return ((decimal)(this[this.tableContract.MarginSpotColumn]));
                }
                set {
                    this[this.tableContract.MarginSpotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MarginRemote {
                get {
                    return ((decimal)(this[this.tableContract.MarginRemoteColumn]));
                }
                set {
                    this[this.tableContract.MarginRemoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CalSpreadRemoteMargin {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.CalSpreadRemoteMarginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalSpreadRemoteMargin\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.CalSpreadRemoteMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IsKIE {
                get {
                    return ((string)(this[this.tableContract.IsKIEColumn]));
                }
                set {
                    this[this.tableContract.IsKIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableContract.CreatedByColumn]));
                }
                set {
                    this[this.tableContract.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.CreatedDateColumn]));
                }
                set {
                    this[this.tableContract.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastUpdatedBy {
                get {
                    return ((string)(this[this.tableContract.LastUpdatedByColumn]));
                }
                set {
                    this[this.tableContract.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastUpdatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableContract.LastUpdatedDateColumn]));
                }
                set {
                    this[this.tableContract.LastUpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EffectiveEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableContract.EffectiveEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveEndDate\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.EffectiveEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ApprovalDesc {
                get {
                    try {
                        return ((string)(this[this.tableContract.ApprovalDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovalDesc\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ApprovalDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal HomeCurrencyID {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.HomeCurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HomeCurrencyID\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.HomeCurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CrossCurr {
                get {
                    return ((string)(this[this.tableContract.CrossCurrColumn]));
                }
                set {
                    this[this.tableContract.CrossCurrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CrossCurrProduct {
                get {
                    try {
                        return ((string)(this[this.tableContract.CrossCurrProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrossCurrProduct\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.CrossCurrProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OriginalContractID {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.OriginalContractIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalContractID\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.OriginalContractIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ActionFlag {
                get {
                    try {
                        return ((string)(this[this.tableContract.ActionFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActionFlag\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ActionFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TenderReqType {
                get {
                    try {
                        return ((string)(this[this.tableContract.TenderReqTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenderReqType\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.TenderReqTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeK1 {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeK1\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueK1 {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ValueK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueK1\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ValueK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefK1 {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ContractRefK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefK1\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ContractRefK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeK2 {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeK2\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueK2 {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ValueK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueK2\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ValueK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefK2 {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ContractRefK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefK2\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ContractRefK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeD {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeD\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ValueD {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ValueDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueD\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ValueDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ContractRefD {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.ContractRefDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractRefD\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ContractRefDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeIM {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeIM\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PercentageSpotIM {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.PercentageSpotIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageSpotIM\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.PercentageSpotIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PercentageRemoteIM {
                get {
                    try {
                        return ((decimal)(this[this.tableContract.PercentageRemoteIMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageRemoteIM\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.PercentageRemoteIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ModeFee {
                get {
                    try {
                        return ((string)(this[this.tableContract.ModeFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModeFee\' in table \'Contract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContract.ModeFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSubCategoryIDNull() {
                return this.IsNull(this.tableContract.SubCategoryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSubCategoryIDNull() {
                this[this.tableContract.SubCategoryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableContract.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableContract.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPEGNull() {
                return this.IsNull(this.tableContract.PEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPEGNull() {
                this[this.tableContract.PEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVMIRCACalTypeNull() {
                return this.IsNull(this.tableContract.VMIRCACalTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVMIRCACalTypeNull() {
                this[this.tableContract.VMIRCACalTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSettlementFactorNull() {
                return this.IsNull(this.tableContract.SettlementFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSettlementFactorNull() {
                this[this.tableContract.SettlementFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDayRefNull() {
                return this.IsNull(this.tableContract.DayRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDayRefNull() {
                this[this.tableContract.DayRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDivisorNull() {
                return this.IsNull(this.tableContract.DivisorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDivisorNull() {
                this[this.tableContract.DivisorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarginTenderNull() {
                return this.IsNull(this.tableContract.MarginTenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarginTenderNull() {
                this[this.tableContract.MarginTenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCalSpreadRemoteMarginNull() {
                return this.IsNull(this.tableContract.CalSpreadRemoteMarginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCalSpreadRemoteMarginNull() {
                this[this.tableContract.CalSpreadRemoteMarginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEffectiveEndDateNull() {
                return this.IsNull(this.tableContract.EffectiveEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEffectiveEndDateNull() {
                this[this.tableContract.EffectiveEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsApprovalDescNull() {
                return this.IsNull(this.tableContract.ApprovalDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetApprovalDescNull() {
                this[this.tableContract.ApprovalDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHomeCurrencyIDNull() {
                return this.IsNull(this.tableContract.HomeCurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHomeCurrencyIDNull() {
                this[this.tableContract.HomeCurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCrossCurrProductNull() {
                return this.IsNull(this.tableContract.CrossCurrProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCrossCurrProductNull() {
                this[this.tableContract.CrossCurrProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOriginalContractIDNull() {
                return this.IsNull(this.tableContract.OriginalContractIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOriginalContractIDNull() {
                this[this.tableContract.OriginalContractIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActionFlagNull() {
                return this.IsNull(this.tableContract.ActionFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActionFlagNull() {
                this[this.tableContract.ActionFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTenderReqTypeNull() {
                return this.IsNull(this.tableContract.TenderReqTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTenderReqTypeNull() {
                this[this.tableContract.TenderReqTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeK1Null() {
                return this.IsNull(this.tableContract.ModeK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeK1Null() {
                this[this.tableContract.ModeK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueK1Null() {
                return this.IsNull(this.tableContract.ValueK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueK1Null() {
                this[this.tableContract.ValueK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefK1Null() {
                return this.IsNull(this.tableContract.ContractRefK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefK1Null() {
                this[this.tableContract.ContractRefK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeK2Null() {
                return this.IsNull(this.tableContract.ModeK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeK2Null() {
                this[this.tableContract.ModeK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueK2Null() {
                return this.IsNull(this.tableContract.ValueK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueK2Null() {
                this[this.tableContract.ValueK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefK2Null() {
                return this.IsNull(this.tableContract.ContractRefK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefK2Null() {
                this[this.tableContract.ContractRefK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeDNull() {
                return this.IsNull(this.tableContract.ModeDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeDNull() {
                this[this.tableContract.ModeDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValueDNull() {
                return this.IsNull(this.tableContract.ValueDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValueDNull() {
                this[this.tableContract.ValueDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContractRefDNull() {
                return this.IsNull(this.tableContract.ContractRefDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContractRefDNull() {
                this[this.tableContract.ContractRefDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeIMNull() {
                return this.IsNull(this.tableContract.ModeIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeIMNull() {
                this[this.tableContract.ModeIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPercentageSpotIMNull() {
                return this.IsNull(this.tableContract.PercentageSpotIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPercentageSpotIMNull() {
                this[this.tableContract.PercentageSpotIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPercentageRemoteIMNull() {
                return this.IsNull(this.tableContract.PercentageRemoteIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPercentageRemoteIMNull() {
                this[this.tableContract.PercentageRemoteIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModeFeeNull() {
                return this.IsNull(this.tableContract.ModeFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModeFeeNull() {
                this[this.tableContract.ModeFeeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Get_Tradefeed_ExceptionRow : global::System.Data.DataRow {
            
            private Get_Tradefeed_ExceptionDataTable tableGet_Tradefeed_Exception;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Get_Tradefeed_ExceptionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGet_Tradefeed_Exception = ((Get_Tradefeed_ExceptionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CommodityCode {
                get {
                    try {
                        return ((string)(this[this.tableGet_Tradefeed_Exception.CommodityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommodityCode\' in table \'Get_Tradefeed_Exception\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGet_Tradefeed_Exception.CommodityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Contract_Year {
                get {
                    try {
                        return ((string)(this[this.tableGet_Tradefeed_Exception.Contract_YearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contract_Year\' in table \'Get_Tradefeed_Exception\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGet_Tradefeed_Exception.Contract_YearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Contract_Month {
                get {
                    try {
                        return ((string)(this[this.tableGet_Tradefeed_Exception.Contract_MonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contract_Month\' in table \'Get_Tradefeed_Exception\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGet_Tradefeed_Exception.Contract_MonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ExchangeID {
                get {
                    return ((decimal)(this[this.tableGet_Tradefeed_Exception.ExchangeIDColumn]));
                }
                set {
                    this[this.tableGet_Tradefeed_Exception.ExchangeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime BusinessDate {
                get {
                    return ((global::System.DateTime)(this[this.tableGet_Tradefeed_Exception.BusinessDateColumn]));
                }
                set {
                    this[this.tableGet_Tradefeed_Exception.BusinessDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommodityCodeNull() {
                return this.IsNull(this.tableGet_Tradefeed_Exception.CommodityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommodityCodeNull() {
                this[this.tableGet_Tradefeed_Exception.CommodityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContract_YearNull() {
                return this.IsNull(this.tableGet_Tradefeed_Exception.Contract_YearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContract_YearNull() {
                this[this.tableGet_Tradefeed_Exception.Contract_YearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContract_MonthNull() {
                return this.IsNull(this.tableGet_Tradefeed_Exception.Contract_MonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContract_MonthNull() {
                this[this.tableGet_Tradefeed_Exception.Contract_MonthColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ContractRowChangeEvent : global::System.EventArgs {
            
            private ContractRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRowChangeEvent(ContractRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ContractRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class Get_Tradefeed_ExceptionRowChangeEvent : global::System.EventArgs {
            
            private Get_Tradefeed_ExceptionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRowChangeEvent(Get_Tradefeed_ExceptionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Get_Tradefeed_ExceptionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ConsoleTradefeedException.DataSetDevTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ContractTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ContractTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Contract";
            tableMapping.ColumnMappings.Add("SubCategoryID", "SubCategoryID");
            tableMapping.ColumnMappings.Add("CommodityID", "CommodityID");
            tableMapping.ColumnMappings.Add("ContractMonth", "ContractMonth");
            tableMapping.ColumnMappings.Add("ContractYear", "ContractYear");
            tableMapping.ColumnMappings.Add("ApprovalStatus", "ApprovalStatus");
            tableMapping.ColumnMappings.Add("EffectiveStartDate", "EffectiveStartDate");
            tableMapping.ColumnMappings.Add("ContractID", "ContractID");
            tableMapping.ColumnMappings.Add("ContractSize", "ContractSize");
            tableMapping.ColumnMappings.Add("SettlementType", "SettlementType");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Unit", "Unit");
            tableMapping.ColumnMappings.Add("StartDate", "StartDate");
            tableMapping.ColumnMappings.Add("EndSpot", "EndSpot");
            tableMapping.ColumnMappings.Add("StartSpot", "StartSpot");
            tableMapping.ColumnMappings.Add("PEG", "PEG");
            tableMapping.ColumnMappings.Add("VMIRCACalType", "VMIRCACalType");
            tableMapping.ColumnMappings.Add("SettlementFactor", "SettlementFactor");
            tableMapping.ColumnMappings.Add("DayRef", "DayRef");
            tableMapping.ColumnMappings.Add("Divisor", "Divisor");
            tableMapping.ColumnMappings.Add("MarginTender", "MarginTender");
            tableMapping.ColumnMappings.Add("MarginSpot", "MarginSpot");
            tableMapping.ColumnMappings.Add("MarginRemote", "MarginRemote");
            tableMapping.ColumnMappings.Add("CalSpreadRemoteMargin", "CalSpreadRemoteMargin");
            tableMapping.ColumnMappings.Add("IsKIE", "IsKIE");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("LastUpdatedBy", "LastUpdatedBy");
            tableMapping.ColumnMappings.Add("LastUpdatedDate", "LastUpdatedDate");
            tableMapping.ColumnMappings.Add("EffectiveEndDate", "EffectiveEndDate");
            tableMapping.ColumnMappings.Add("ApprovalDesc", "ApprovalDesc");
            tableMapping.ColumnMappings.Add("HomeCurrencyID", "HomeCurrencyID");
            tableMapping.ColumnMappings.Add("CrossCurr", "CrossCurr");
            tableMapping.ColumnMappings.Add("CrossCurrProduct", "CrossCurrProduct");
            tableMapping.ColumnMappings.Add("OriginalContractID", "OriginalContractID");
            tableMapping.ColumnMappings.Add("ActionFlag", "ActionFlag");
            tableMapping.ColumnMappings.Add("TenderReqType", "TenderReqType");
            tableMapping.ColumnMappings.Add("ModeK1", "ModeK1");
            tableMapping.ColumnMappings.Add("ValueK1", "ValueK1");
            tableMapping.ColumnMappings.Add("ContractRefK1", "ContractRefK1");
            tableMapping.ColumnMappings.Add("ModeK2", "ModeK2");
            tableMapping.ColumnMappings.Add("ValueK2", "ValueK2");
            tableMapping.ColumnMappings.Add("ContractRefK2", "ContractRefK2");
            tableMapping.ColumnMappings.Add("ModeD", "ModeD");
            tableMapping.ColumnMappings.Add("ValueD", "ValueD");
            tableMapping.ColumnMappings.Add("ContractRefD", "ContractRefD");
            tableMapping.ColumnMappings.Add("ModeIM", "ModeIM");
            tableMapping.ColumnMappings.Add("PercentageSpotIM", "PercentageSpotIM");
            tableMapping.ColumnMappings.Add("PercentageRemoteIM", "PercentageRemoteIM");
            tableMapping.ColumnMappings.Add("ModeFee", "ModeFee");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ConsoleTradefeedException.Properties.Settings.Default.SKDTESTINGConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Contract.*\r\nFROM            Contract";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT ActionFlag, ApprovalDesc, ApprovalStatus, CalSpreadRemoteMargin, CommodityID, ContractID, ContractMonth, ContractRefD, ContractRefK1, ContractRefK2, ContractSize, ContractYear, CreatedBy, CreatedDate, CrossCurr, CrossCurrProduct, DayRef, Description, Divisor, EffectiveEndDate, EffectiveStartDate, EndSpot, HomeCurrencyID, IsKIE, LastUpdatedBy, LastUpdatedDate, MarginRemote, MarginSpot, MarginTender, ModeD, ModeFee, ModeIM, ModeK1, ModeK2, OriginalContractID, PEG, PercentageRemoteIM, PercentageSpotIM, SettlementFactor, SettlementType, StartDate, StartSpot, SubCategoryID, TenderReqType, Unit, VMIRCACalType, ValueD, ValueK1, ValueK2 FROM Contract WHERE (CommodityID = @code) AND (ContractYear = @year) AND (ContractMonth = @month)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@code", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@year", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ContractYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@month", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ContractMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        TOP (1) SubCategoryID\r\nFROM            Contract\r\nWHERE        (Comm" +
                "odityID = @id)\r\nORDER BY ContractID DESC";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "INSERT INTO [Contract] ([CommodityID], [ContractMonth], [ContractYear], [Approval" +
                "Status], [EffectiveStartDate], [ContractSize], [SettlementType], [Description], " +
                "[Unit], [StartDate], [EndSpot], [StartSpot], [PEG], [VMIRCACalType], [Settlement" +
                "Factor], [DayRef], [Divisor], [MarginTender], [MarginSpot], [MarginRemote], [Cal" +
                "SpreadRemoteMargin], [IsKIE], [CreatedBy], [CreatedDate], [LastUpdatedBy], [Last" +
                "UpdatedDate], [EffectiveEndDate], [ApprovalDesc], [HomeCurrencyID], [CrossCurr]," +
                " [CrossCurrProduct], [OriginalContractID], [ActionFlag], [TenderReqType], [SubCa" +
                "tegoryID], [ModeK1], [ValueK1], [ContractRefK1], [ModeK2], [ValueK2], [ContractR" +
                "efK2], [ModeD], [ValueD], [ContractRefD], [ModeIM], [PercentageSpotIM], [Percent" +
                "ageRemoteIM], [ModeFee]) VALUES (@CommodityID, @ContractMonth, @ContractYear, @A" +
                "pprovalStatus, @EffectiveStartDate, @ContractSize, @SettlementType, @Description" +
                ", @Unit, @StartDate, @EndSpot, @StartSpot, @PEG, @VMIRCACalType, @SettlementFact" +
                "or, @DayRef, @Divisor, @MarginTender, @MarginSpot, @MarginRemote, @CalSpreadRemo" +
                "teMargin, @IsKIE, @CreatedBy, @CreatedDate, @LastUpdatedBy, @LastUpdatedDate, @E" +
                "ffectiveEndDate, @ApprovalDesc, @HomeCurrencyID, @CrossCurr, @CrossCurrProduct, " +
                "@OriginalContractID, @ActionFlag, @TenderReqType, @SubCategoryID, @ModeK1, @Valu" +
                "eK1, @ContractRefK1, @ModeK2, @ValueK2, @ContractRefK2, @ModeD, @ValueD, @Contra" +
                "ctRefD, @ModeIM, @PercentageSpotIM, @PercentageRemoteIM, @ModeFee);\r\nSELECT Comm" +
                "odityID, ContractMonth, ContractYear, ApprovalStatus, EffectiveStartDate, Contra" +
                "ctID, ContractSize, SettlementType, Description, Unit, StartDate, EndSpot, Start" +
                "Spot, PEG, VMIRCACalType, SettlementFactor, DayRef, Divisor, MarginTender, Margi" +
                "nSpot, MarginRemote, CalSpreadRemoteMargin, IsKIE, CreatedBy, CreatedDate, LastU" +
                "pdatedBy, LastUpdatedDate, EffectiveEndDate, ApprovalDesc, HomeCurrencyID, Cross" +
                "Curr, CrossCurrProduct, OriginalContractID, ActionFlag, TenderReqType, SubCatego" +
                "ryID, ModeK1, ValueK1, ContractRefK1, ModeK2, ValueK2, ContractRefK2, ModeD, Val" +
                "ueD, ContractRefD, ModeIM, PercentageSpotIM, PercentageRemoteIM, ModeFee FROM Co" +
                "ntract WHERE (ApprovalStatus = @ApprovalStatus) AND (CommodityID = @CommodityID)" +
                " AND (ContractMonth = @ContractMonth) AND (ContractYear = @ContractYear) AND (Ef" +
                "fectiveStartDate = @EffectiveStartDate)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommodityID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "CommodityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractMonth", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ContractMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractYear", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ContractYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalStatus", global::System.Data.SqlDbType.Char, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveStartDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractSize", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 24, 10, "ContractSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SettlementType", global::System.Data.SqlDbType.Char, 1, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "Unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndSpot", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "EndSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartSpot", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "StartSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PEG", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 24, 10, "PEG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VMIRCACalType", global::System.Data.SqlDbType.Char, 1, global::System.Data.ParameterDirection.Input, 0, 0, "VMIRCACalType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SettlementFactor", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "SettlementFactor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DayRef", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DayRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Divisor", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 24, 10, "Divisor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginTender", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 24, 10, "MarginTender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginSpot", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 24, 10, "MarginSpot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarginRemote", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 24, 10, "MarginRemote", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CalSpreadRemoteMargin", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 24, 10, "CalSpreadRemoteMargin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsKIE", global::System.Data.SqlDbType.Char, 1, global::System.Data.ParameterDirection.Input, 0, 0, "IsKIE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedBy", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdatedDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EffectiveEndDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "EffectiveEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovalDesc", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovalDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HomeCurrencyID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "HomeCurrencyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrossCurr", global::System.Data.SqlDbType.Char, 3, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrossCurrProduct", global::System.Data.SqlDbType.Char, 3, global::System.Data.ParameterDirection.Input, 0, 0, "CrossCurrProduct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalContractID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "OriginalContractID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActionFlag", global::System.Data.SqlDbType.Char, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ActionFlag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TenderReqType", global::System.Data.SqlDbType.Char, 1, global::System.Data.ParameterDirection.Input, 0, 0, "TenderReqType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubCategoryID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "SubCategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeK1", global::System.Data.SqlDbType.Char, 3, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueK1", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefK1", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeK2", global::System.Data.SqlDbType.Char, 3, global::System.Data.ParameterDirection.Input, 0, 0, "ModeK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueK2", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 24, 10, "ValueK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefK2", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefK2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeD", global::System.Data.SqlDbType.Char, 3, global::System.Data.ParameterDirection.Input, 0, 0, "ModeD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValueD", global::System.Data.SqlDbType.Decimal, 13, global::System.Data.ParameterDirection.Input, 24, 10, "ValueD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRefD", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ContractRefD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeIM", global::System.Data.SqlDbType.Char, 3, global::System.Data.ParameterDirection.Input, 0, 0, "ModeIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PercentageSpotIM", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageSpotIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PercentageRemoteIM", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 15, 10, "PercentageRemoteIM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModeFee", global::System.Data.SqlDbType.Char, 3, global::System.Data.ParameterDirection.Input, 0, 0, "ModeFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetDev.ContractDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetDev.ContractDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetDev.ContractDataTable dataTable = new DataSetDev.ContractDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFilter(DataSetDev.ContractDataTable dataTable, decimal code, int year, int month) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(code));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(year));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(month));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSetDev.ContractDataTable GetDataByFilter(decimal code, int year, int month) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(code));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(year));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(month));
            DataSetDev.ContractDataTable dataTable = new DataSetDev.ContractDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillById(DataSetDev.ContractDataTable dataTable, decimal id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSetDev.ContractDataTable GetDataById(decimal id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(id));
            DataSetDev.ContractDataTable dataTable = new DataSetDev.ContractDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery(
                    decimal CommodityID, 
                    int ContractMonth, 
                    int ContractYear, 
                    string ApprovalStatus, 
                    System.DateTime EffectiveStartDate, 
                    decimal ContractSize, 
                    string SettlementType, 
                    string Description, 
                    string Unit, 
                    System.DateTime StartDate, 
                    System.DateTime EndSpot, 
                    System.DateTime StartSpot, 
                    global::System.Nullable<decimal> PEG, 
                    string VMIRCACalType, 
                    string SettlementFactor, 
                    global::System.Nullable<int> DayRef, 
                    global::System.Nullable<decimal> Divisor, 
                    global::System.Nullable<decimal> MarginTender, 
                    decimal MarginSpot, 
                    decimal MarginRemote, 
                    global::System.Nullable<decimal> CalSpreadRemoteMargin, 
                    string IsKIE, 
                    string CreatedBy, 
                    System.DateTime CreatedDate, 
                    string LastUpdatedBy, 
                    System.DateTime LastUpdatedDate, 
                    global::System.Nullable<global::System.DateTime> EffectiveEndDate, 
                    string ApprovalDesc, 
                    global::System.Nullable<decimal> HomeCurrencyID, 
                    string CrossCurr, 
                    string CrossCurrProduct, 
                    global::System.Nullable<decimal> OriginalContractID, 
                    string ActionFlag, 
                    string TenderReqType, 
                    global::System.Nullable<decimal> SubCategoryID, 
                    string ModeK1, 
                    global::System.Nullable<decimal> ValueK1, 
                    global::System.Nullable<decimal> ContractRefK1, 
                    string ModeK2, 
                    global::System.Nullable<decimal> ValueK2, 
                    global::System.Nullable<decimal> ContractRefK2, 
                    string ModeD, 
                    global::System.Nullable<decimal> ValueD, 
                    global::System.Nullable<decimal> ContractRefD, 
                    string ModeIM, 
                    global::System.Nullable<decimal> PercentageSpotIM, 
                    global::System.Nullable<decimal> PercentageRemoteIM, 
                    string ModeFee) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            command.Parameters[0].Value = ((decimal)(CommodityID));
            command.Parameters[1].Value = ((int)(ContractMonth));
            command.Parameters[2].Value = ((int)(ContractYear));
            if ((ApprovalStatus == null)) {
                throw new global::System.ArgumentNullException("ApprovalStatus");
            }
            else {
                command.Parameters[3].Value = ((string)(ApprovalStatus));
            }
            command.Parameters[4].Value = ((System.DateTime)(EffectiveStartDate));
            command.Parameters[5].Value = ((decimal)(ContractSize));
            if ((SettlementType == null)) {
                throw new global::System.ArgumentNullException("SettlementType");
            }
            else {
                command.Parameters[6].Value = ((string)(SettlementType));
            }
            if ((Description == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Description));
            }
            if ((Unit == null)) {
                throw new global::System.ArgumentNullException("Unit");
            }
            else {
                command.Parameters[8].Value = ((string)(Unit));
            }
            command.Parameters[9].Value = ((System.DateTime)(StartDate));
            command.Parameters[10].Value = ((System.DateTime)(EndSpot));
            command.Parameters[11].Value = ((System.DateTime)(StartSpot));
            if ((PEG.HasValue == true)) {
                command.Parameters[12].Value = ((decimal)(PEG.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((VMIRCACalType == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(VMIRCACalType));
            }
            if ((SettlementFactor == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(SettlementFactor));
            }
            if ((DayRef.HasValue == true)) {
                command.Parameters[15].Value = ((int)(DayRef.Value));
            }
            else {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Divisor.HasValue == true)) {
                command.Parameters[16].Value = ((decimal)(Divisor.Value));
            }
            else {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((MarginTender.HasValue == true)) {
                command.Parameters[17].Value = ((decimal)(MarginTender.Value));
            }
            else {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            command.Parameters[18].Value = ((decimal)(MarginSpot));
            command.Parameters[19].Value = ((decimal)(MarginRemote));
            if ((CalSpreadRemoteMargin.HasValue == true)) {
                command.Parameters[20].Value = ((decimal)(CalSpreadRemoteMargin.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((IsKIE == null)) {
                throw new global::System.ArgumentNullException("IsKIE");
            }
            else {
                command.Parameters[21].Value = ((string)(IsKIE));
            }
            if ((CreatedBy == null)) {
                throw new global::System.ArgumentNullException("CreatedBy");
            }
            else {
                command.Parameters[22].Value = ((string)(CreatedBy));
            }
            command.Parameters[23].Value = ((System.DateTime)(CreatedDate));
            if ((LastUpdatedBy == null)) {
                throw new global::System.ArgumentNullException("LastUpdatedBy");
            }
            else {
                command.Parameters[24].Value = ((string)(LastUpdatedBy));
            }
            command.Parameters[25].Value = ((System.DateTime)(LastUpdatedDate));
            if ((EffectiveEndDate.HasValue == true)) {
                command.Parameters[26].Value = ((System.DateTime)(EffectiveEndDate.Value));
            }
            else {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((ApprovalDesc == null)) {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[27].Value = ((string)(ApprovalDesc));
            }
            if ((HomeCurrencyID.HasValue == true)) {
                command.Parameters[28].Value = ((decimal)(HomeCurrencyID.Value));
            }
            else {
                command.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CrossCurr == null)) {
                throw new global::System.ArgumentNullException("CrossCurr");
            }
            else {
                command.Parameters[29].Value = ((string)(CrossCurr));
            }
            if ((CrossCurrProduct == null)) {
                command.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[30].Value = ((string)(CrossCurrProduct));
            }
            if ((OriginalContractID.HasValue == true)) {
                command.Parameters[31].Value = ((decimal)(OriginalContractID.Value));
            }
            else {
                command.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((ActionFlag == null)) {
                command.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[32].Value = ((string)(ActionFlag));
            }
            if ((TenderReqType == null)) {
                command.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[33].Value = ((string)(TenderReqType));
            }
            if ((SubCategoryID.HasValue == true)) {
                command.Parameters[34].Value = ((decimal)(SubCategoryID.Value));
            }
            else {
                command.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((ModeK1 == null)) {
                command.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[35].Value = ((string)(ModeK1));
            }
            if ((ValueK1.HasValue == true)) {
                command.Parameters[36].Value = ((decimal)(ValueK1.Value));
            }
            else {
                command.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((ContractRefK1.HasValue == true)) {
                command.Parameters[37].Value = ((decimal)(ContractRefK1.Value));
            }
            else {
                command.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ModeK2 == null)) {
                command.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[38].Value = ((string)(ModeK2));
            }
            if ((ValueK2.HasValue == true)) {
                command.Parameters[39].Value = ((decimal)(ValueK2.Value));
            }
            else {
                command.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ContractRefK2.HasValue == true)) {
                command.Parameters[40].Value = ((decimal)(ContractRefK2.Value));
            }
            else {
                command.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((ModeD == null)) {
                command.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[41].Value = ((string)(ModeD));
            }
            if ((ValueD.HasValue == true)) {
                command.Parameters[42].Value = ((decimal)(ValueD.Value));
            }
            else {
                command.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((ContractRefD.HasValue == true)) {
                command.Parameters[43].Value = ((decimal)(ContractRefD.Value));
            }
            else {
                command.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((ModeIM == null)) {
                command.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[44].Value = ((string)(ModeIM));
            }
            if ((PercentageSpotIM.HasValue == true)) {
                command.Parameters[45].Value = ((decimal)(PercentageSpotIM.Value));
            }
            else {
                command.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((PercentageRemoteIM.HasValue == true)) {
                command.Parameters[46].Value = ((decimal)(PercentageRemoteIM.Value));
            }
            else {
                command.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ModeFee == null)) {
                command.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[47].Value = ((string)(ModeFee));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Get_Tradefeed_ExceptionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Get_Tradefeed_ExceptionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Get_Tradefeed_Exception";
            tableMapping.ColumnMappings.Add("CommodityCode", "CommodityCode");
            tableMapping.ColumnMappings.Add("Contract_Year", "Contract_Year");
            tableMapping.ColumnMappings.Add("Contract_Month", "Contract_Month");
            tableMapping.ColumnMappings.Add("ExchangeID", "ExchangeID");
            tableMapping.ColumnMappings.Add("BusinessDate", "BusinessDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ConsoleTradefeedException.Properties.Settings.Default.SKDConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SKD.Get_Tradefeed_Exception";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tgl", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetDev.Get_Tradefeed_ExceptionDataTable dataTable, global::System.Nullable<global::System.DateTime> tgl) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((tgl.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(tgl.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetDev.Get_Tradefeed_ExceptionDataTable GetData(global::System.Nullable<global::System.DateTime> tgl) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((tgl.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(tgl.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetDev.Get_Tradefeed_ExceptionDataTable dataTable = new DataSetDev.Get_Tradefeed_ExceptionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(DataSetDev dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(DataSetDev dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(DataSetDev dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(DataSetDev dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591